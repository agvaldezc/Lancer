Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Unused terminals:

    CONST
    TRUE
    DOT
    STRING
    MAIN
    FALSE

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAMA ID SEMICOLON prs1 prs2 block
Rule 2     prs1 -> vars
Rule 3     prs1 -> empty
Rule 4     prs2 -> function prs2
Rule 5     prs2 -> empty
Rule 6     vars -> VAR vas1 COLON type SEMICOLON vas1
Rule 7     vas1 -> ID
Rule 8     vas1 -> ID COMA vas1
Rule 9     vas1 -> empty
Rule 10    type -> INT_TYPE
Rule 11    type -> FLOAT_TYPE
Rule 12    type -> BOOL_TYPE
Rule 13    type -> STRING_TYPE
Rule 14    type -> array
Rule 15    array -> INT_TYPE ars1
Rule 16    array -> FLOAT_TYPE ars1
Rule 17    array -> STRING_TYPE ars1
Rule 18    ars1 -> LARRAY CTEI RARRAY
Rule 19    block -> LBRACKET bls1 RBRACKET
Rule 20    bls1 -> statue bls1
Rule 21    bls1 -> empty
Rule 22    statue -> assignment
Rule 23    statue -> condition
Rule 24    statue -> read
Rule 25    statue -> write
Rule 26    statue -> cycle
Rule 27    statue -> functioncall
Rule 28    statue -> predefined
Rule 29    statue -> return
Rule 30    parameter -> empty
Rule 31    parameter -> pas1
Rule 32    pas1 -> type ID
Rule 33    pas1 -> type ID COMA pas1
Rule 34    return -> RETURN ssexpression SEMICOLON
Rule 35    assignment -> ID ass1 ASSIGN ass2
Rule 36    ass1 -> empty
Rule 37    ass1 -> LARRAY ssexpression RARRAY
Rule 38    ass2 -> functioncall
Rule 39    ass2 -> ssexpression
Rule 40    ssexpression -> sexpression
Rule 41    ssexpression -> NOT sexpression
Rule 42    sexpression -> expression ses1
Rule 43    ses1 -> empty
Rule 44    ses1 -> AND sexpression
Rule 45    ses1 -> OR sexpression
Rule 46    expression -> exp exs1
Rule 47    exs1 -> empty
Rule 48    exs1 -> GT exp
Rule 49    exs1 -> LT exp
Rule 50    exs1 -> GE exp
Rule 51    exs1 -> LE exp
Rule 52    exs1 -> EQUAL exp
Rule 53    exs1 -> DIFFERENT exp
Rule 54    term -> factor tes1
Rule 55    tes1 -> empty
Rule 56    tes1 -> TIMES term
Rule 57    tes1 -> DIVISION term
Rule 58    exp -> term exps1
Rule 59    exps1 -> empty
Rule 60    exps1 -> PLUS term
Rule 61    exps1 -> MINUS term
Rule 62    predefined -> drawcircle
Rule 63    predefined -> drawsquare
Rule 64    predefined -> drawtriangle
Rule 65    predefined -> drawline
Rule 66    predefined -> drawpolygon
Rule 67    predefined -> drawcurve
Rule 68    condition -> IF cos1 RPAREN block cos3
Rule 69    cos1 -> LPAREN cos2
Rule 70    cos1 -> NOT cos2
Rule 71    cos2 -> ssexpression
Rule 72    cos2 -> functioncall
Rule 73    cos3 -> empty
Rule 74    cos3 -> ELSE block
Rule 75    cos3 -> ELSEIF cos1
Rule 76    read -> ID ASSIGN INPUT SEMICOLON
Rule 77    write -> PRINT LPAREN ssexpression RPAREN
Rule 78    color -> RED
Rule 79    color -> GREEN
Rule 80    color -> BLUE
Rule 81    color -> YELLOW
Rule 82    color -> BROWN
Rule 83    color -> BLACK
Rule 84    cycle -> WHILE LPAREN ssexpression RPAREN block
Rule 85    function -> FUNC fus1 ID LPAREN parameter RPAREN block
Rule 86    fus1 -> VOID
Rule 87    fus1 -> type
Rule 88    functioncall -> ID LPAREN fcs1 RPAREN SEMICOLON
Rule 89    fcs1 -> empty
Rule 90    fcs1 -> ssexpression
Rule 91    fcs1 -> ssexpression COMA fcs1
Rule 92    drawline -> DRAWLINE LPAREN ssexpression COMA ssexpression COMA ssexpression COMA ssexpression COMA color RPAREN SEMICOLON
Rule 93    drawsquare -> DRAWSQUARE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON
Rule 94    drawcircle -> DRAWCIRCLE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON
Rule 95    drawtriangle -> DRAWTRIANGLE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON
Rule 96    drawcurve -> DRAWCURVE LPAREN ssexpression COMA color RPAREN SEMICOLON
Rule 97    drawpolygon -> DRAWPOLYGON LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON
Rule 98    factor -> LPAREN ssexpression RPAREN
Rule 99    factor -> PLUS fas1
Rule 100   factor -> MINUS fas1
Rule 101   fas1 -> ID fas2
Rule 102   fas1 -> CTEI
Rule 103   fas1 -> CTEF
Rule 104   fas2 -> LARRAY exp RARRAY
Rule 105   fas2 -> LPAREN exp RPAREN
Rule 106   fas2 -> empty
Rule 107   empty -> <empty>

Terminals, with rules where they appear

AND                  : 44
ASSIGN               : 35 76
BLACK                : 83
BLUE                 : 80
BOOL_TYPE            : 12
BROWN                : 82
COLON                : 6
COMA                 : 8 33 91 92 92 92 92 93 93 94 94 95 95 96 97 97
CONST                : 
CTEF                 : 103
CTEI                 : 18 102
DIFFERENT            : 53
DIVISION             : 57
DOT                  : 
DRAWCIRCLE           : 94
DRAWCURVE            : 96
DRAWLINE             : 92
DRAWPOLYGON          : 97
DRAWSQUARE           : 93
DRAWTRIANGLE         : 95
ELSE                 : 74
ELSEIF               : 75
EQUAL                : 52
FALSE                : 
FLOAT_TYPE           : 11 16
FUNC                 : 85
GE                   : 50
GREEN                : 79
GT                   : 48
ID                   : 1 7 8 32 33 35 76 85 88 101
IF                   : 68
INPUT                : 76
INT_TYPE             : 10 15
LARRAY               : 18 37 104
LBRACKET             : 19
LE                   : 51
LPAREN               : 69 77 84 85 88 92 93 94 95 96 97 98 105
LT                   : 49
MAIN                 : 
MINUS                : 61 100
NOT                  : 41 70
OR                   : 45
PLUS                 : 60 99
PRINT                : 77
PROGRAMA             : 1
RARRAY               : 18 37 104
RBRACKET             : 19
RED                  : 78
RETURN               : 34
RPAREN               : 68 77 84 85 88 92 93 94 95 96 97 98 105
SEMICOLON            : 1 6 34 76 88 92 93 94 95 96 97
STRING               : 
STRING_TYPE          : 13 17
TIMES                : 56
TRUE                 : 
VAR                  : 6
VOID                 : 86
WHILE                : 84
YELLOW               : 81
error                : 

Nonterminals, with rules where they appear

array                : 14
ars1                 : 15 16 17
ass1                 : 35
ass2                 : 35
assignment           : 22
block                : 1 68 74 84 85
bls1                 : 19 20
color                : 92 93 94 95 96 97
condition            : 23
cos1                 : 68 75
cos2                 : 69 70
cos3                 : 68
cycle                : 26
drawcircle           : 62
drawcurve            : 67
drawline             : 65
drawpolygon          : 66
drawsquare           : 63
drawtriangle         : 64
empty                : 3 5 9 21 30 36 43 47 55 59 73 89 106
exp                  : 46 48 49 50 51 52 53 104 105
expression           : 42
exps1                : 58
exs1                 : 46
factor               : 54
fas1                 : 99 100
fas2                 : 101
fcs1                 : 88 91
function             : 4
functioncall         : 27 38 72
fus1                 : 85
parameter            : 85
pas1                 : 31 33
predefined           : 28
program              : 0
prs1                 : 1
prs2                 : 1 4
read                 : 24
return               : 29
ses1                 : 42
sexpression          : 40 41 44 45
ssexpression         : 34 37 39 71 77 84 90 91 92 92 92 92 93 93 94 94 95 95 96 97 97 98
statue               : 20
term                 : 56 57 58 60 61
tes1                 : 54
type                 : 6 32 33 87
vars                 : 2
vas1                 : 6 6 8
write                : 25

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAMA ID SEMICOLON prs1 prs2 block

    PROGRAMA        shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAMA . ID SEMICOLON prs1 prs2 block

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAMA ID . SEMICOLON prs1 prs2 block

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAMA ID SEMICOLON . prs1 prs2 block
    (2) prs1 -> . vars
    (3) prs1 -> . empty
    (6) vars -> . VAR vas1 COLON type SEMICOLON vas1
    (107) empty -> .

    VAR             shift and go to state 8
    FUNC            reduce using rule 107 (empty -> .)
    LBRACKET        reduce using rule 107 (empty -> .)

    vars                           shift and go to state 5
    prs1                           shift and go to state 6
    empty                          shift and go to state 7

state 5

    (2) prs1 -> vars .

    FUNC            reduce using rule 2 (prs1 -> vars .)
    LBRACKET        reduce using rule 2 (prs1 -> vars .)


state 6

    (1) program -> PROGRAMA ID SEMICOLON prs1 . prs2 block
    (4) prs2 -> . function prs2
    (5) prs2 -> . empty
    (85) function -> . FUNC fus1 ID LPAREN parameter RPAREN block
    (107) empty -> .

    FUNC            shift and go to state 12
    LBRACKET        reduce using rule 107 (empty -> .)

    function                       shift and go to state 9
    prs2                           shift and go to state 10
    empty                          shift and go to state 11

state 7

    (3) prs1 -> empty .

    FUNC            reduce using rule 3 (prs1 -> empty .)
    LBRACKET        reduce using rule 3 (prs1 -> empty .)


state 8

    (6) vars -> VAR . vas1 COLON type SEMICOLON vas1
    (7) vas1 -> . ID
    (8) vas1 -> . ID COMA vas1
    (9) vas1 -> . empty
    (107) empty -> .

    ID              shift and go to state 14
    COLON           reduce using rule 107 (empty -> .)

    vas1                           shift and go to state 13
    empty                          shift and go to state 15

state 9

    (4) prs2 -> function . prs2
    (4) prs2 -> . function prs2
    (5) prs2 -> . empty
    (85) function -> . FUNC fus1 ID LPAREN parameter RPAREN block
    (107) empty -> .

    FUNC            shift and go to state 12
    LBRACKET        reduce using rule 107 (empty -> .)

    function                       shift and go to state 9
    prs2                           shift and go to state 16
    empty                          shift and go to state 11

state 10

    (1) program -> PROGRAMA ID SEMICOLON prs1 prs2 . block
    (19) block -> . LBRACKET bls1 RBRACKET

    LBRACKET        shift and go to state 17

    block                          shift and go to state 18

state 11

    (5) prs2 -> empty .

    LBRACKET        reduce using rule 5 (prs2 -> empty .)


state 12

    (85) function -> FUNC . fus1 ID LPAREN parameter RPAREN block
    (86) fus1 -> . VOID
    (87) fus1 -> . type
    (10) type -> . INT_TYPE
    (11) type -> . FLOAT_TYPE
    (12) type -> . BOOL_TYPE
    (13) type -> . STRING_TYPE
    (14) type -> . array
    (15) array -> . INT_TYPE ars1
    (16) array -> . FLOAT_TYPE ars1
    (17) array -> . STRING_TYPE ars1

    VOID            shift and go to state 21
    INT_TYPE        shift and go to state 25
    FLOAT_TYPE      shift and go to state 22
    BOOL_TYPE       shift and go to state 24
    STRING_TYPE     shift and go to state 23

    fus1                           shift and go to state 19
    array                          shift and go to state 26
    type                           shift and go to state 20

state 13

    (6) vars -> VAR vas1 . COLON type SEMICOLON vas1

    COLON           shift and go to state 27


state 14

    (7) vas1 -> ID .
    (8) vas1 -> ID . COMA vas1

    COLON           reduce using rule 7 (vas1 -> ID .)
    FUNC            reduce using rule 7 (vas1 -> ID .)
    LBRACKET        reduce using rule 7 (vas1 -> ID .)
    COMA            shift and go to state 28


state 15

    (9) vas1 -> empty .

    COLON           reduce using rule 9 (vas1 -> empty .)
    FUNC            reduce using rule 9 (vas1 -> empty .)
    LBRACKET        reduce using rule 9 (vas1 -> empty .)


state 16

    (4) prs2 -> function prs2 .

    LBRACKET        reduce using rule 4 (prs2 -> function prs2 .)


state 17

    (19) block -> LBRACKET . bls1 RBRACKET
    (20) bls1 -> . statue bls1
    (21) bls1 -> . empty
    (22) statue -> . assignment
    (23) statue -> . condition
    (24) statue -> . read
    (25) statue -> . write
    (26) statue -> . cycle
    (27) statue -> . functioncall
    (28) statue -> . predefined
    (29) statue -> . return
    (107) empty -> .
    (35) assignment -> . ID ass1 ASSIGN ass2
    (68) condition -> . IF cos1 RPAREN block cos3
    (76) read -> . ID ASSIGN INPUT SEMICOLON
    (77) write -> . PRINT LPAREN ssexpression RPAREN
    (84) cycle -> . WHILE LPAREN ssexpression RPAREN block
    (88) functioncall -> . ID LPAREN fcs1 RPAREN SEMICOLON
    (62) predefined -> . drawcircle
    (63) predefined -> . drawsquare
    (64) predefined -> . drawtriangle
    (65) predefined -> . drawline
    (66) predefined -> . drawpolygon
    (67) predefined -> . drawcurve
    (34) return -> . RETURN ssexpression SEMICOLON
    (94) drawcircle -> . DRAWCIRCLE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON
    (93) drawsquare -> . DRAWSQUARE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON
    (95) drawtriangle -> . DRAWTRIANGLE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON
    (92) drawline -> . DRAWLINE LPAREN ssexpression COMA ssexpression COMA ssexpression COMA ssexpression COMA color RPAREN SEMICOLON
    (97) drawpolygon -> . DRAWPOLYGON LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON
    (96) drawcurve -> . DRAWCURVE LPAREN ssexpression COMA color RPAREN SEMICOLON

    RBRACKET        reduce using rule 107 (empty -> .)
    ID              shift and go to state 49
    IF              shift and go to state 51
    PRINT           shift and go to state 35
    WHILE           shift and go to state 34
    RETURN          shift and go to state 30
    DRAWCIRCLE      shift and go to state 37
    DRAWSQUARE      shift and go to state 40
    DRAWTRIANGLE    shift and go to state 32
    DRAWLINE        shift and go to state 48
    DRAWPOLYGON     shift and go to state 52
    DRAWCURVE       shift and go to state 53

    drawtriangle                   shift and go to state 29
    statue                         shift and go to state 31
    drawcurve                      shift and go to state 33
    predefined                     shift and go to state 36
    drawline                       shift and go to state 38
    write                          shift and go to state 39
    functioncall                   shift and go to state 56
    empty                          shift and go to state 43
    return                         shift and go to state 44
    drawpolygon                    shift and go to state 45
    read                           shift and go to state 46
    assignment                     shift and go to state 47
    condition                      shift and go to state 50
    cycle                          shift and go to state 42
    drawsquare                     shift and go to state 54
    bls1                           shift and go to state 55
    drawcircle                     shift and go to state 41

state 18

    (1) program -> PROGRAMA ID SEMICOLON prs1 prs2 block .

    $end            reduce using rule 1 (program -> PROGRAMA ID SEMICOLON prs1 prs2 block .)


state 19

    (85) function -> FUNC fus1 . ID LPAREN parameter RPAREN block

    ID              shift and go to state 57


state 20

    (87) fus1 -> type .

    ID              reduce using rule 87 (fus1 -> type .)


state 21

    (86) fus1 -> VOID .

    ID              reduce using rule 86 (fus1 -> VOID .)


state 22

    (11) type -> FLOAT_TYPE .
    (16) array -> FLOAT_TYPE . ars1
    (18) ars1 -> . LARRAY CTEI RARRAY

    ID              reduce using rule 11 (type -> FLOAT_TYPE .)
    SEMICOLON       reduce using rule 11 (type -> FLOAT_TYPE .)
    LARRAY          shift and go to state 58

    ars1                           shift and go to state 59

state 23

    (13) type -> STRING_TYPE .
    (17) array -> STRING_TYPE . ars1
    (18) ars1 -> . LARRAY CTEI RARRAY

    ID              reduce using rule 13 (type -> STRING_TYPE .)
    SEMICOLON       reduce using rule 13 (type -> STRING_TYPE .)
    LARRAY          shift and go to state 58

    ars1                           shift and go to state 60

state 24

    (12) type -> BOOL_TYPE .

    ID              reduce using rule 12 (type -> BOOL_TYPE .)
    SEMICOLON       reduce using rule 12 (type -> BOOL_TYPE .)


state 25

    (10) type -> INT_TYPE .
    (15) array -> INT_TYPE . ars1
    (18) ars1 -> . LARRAY CTEI RARRAY

    ID              reduce using rule 10 (type -> INT_TYPE .)
    SEMICOLON       reduce using rule 10 (type -> INT_TYPE .)
    LARRAY          shift and go to state 58

    ars1                           shift and go to state 61

state 26

    (14) type -> array .

    ID              reduce using rule 14 (type -> array .)
    SEMICOLON       reduce using rule 14 (type -> array .)


state 27

    (6) vars -> VAR vas1 COLON . type SEMICOLON vas1
    (10) type -> . INT_TYPE
    (11) type -> . FLOAT_TYPE
    (12) type -> . BOOL_TYPE
    (13) type -> . STRING_TYPE
    (14) type -> . array
    (15) array -> . INT_TYPE ars1
    (16) array -> . FLOAT_TYPE ars1
    (17) array -> . STRING_TYPE ars1

    INT_TYPE        shift and go to state 25
    FLOAT_TYPE      shift and go to state 22
    BOOL_TYPE       shift and go to state 24
    STRING_TYPE     shift and go to state 23

    array                          shift and go to state 26
    type                           shift and go to state 62

state 28

    (8) vas1 -> ID COMA . vas1
    (7) vas1 -> . ID
    (8) vas1 -> . ID COMA vas1
    (9) vas1 -> . empty
    (107) empty -> .

    ID              shift and go to state 14
    COLON           reduce using rule 107 (empty -> .)
    FUNC            reduce using rule 107 (empty -> .)
    LBRACKET        reduce using rule 107 (empty -> .)

    vas1                           shift and go to state 63
    empty                          shift and go to state 15

state 29

    (64) predefined -> drawtriangle .

    ID              reduce using rule 64 (predefined -> drawtriangle .)
    IF              reduce using rule 64 (predefined -> drawtriangle .)
    PRINT           reduce using rule 64 (predefined -> drawtriangle .)
    WHILE           reduce using rule 64 (predefined -> drawtriangle .)
    RETURN          reduce using rule 64 (predefined -> drawtriangle .)
    DRAWCIRCLE      reduce using rule 64 (predefined -> drawtriangle .)
    DRAWSQUARE      reduce using rule 64 (predefined -> drawtriangle .)
    DRAWTRIANGLE    reduce using rule 64 (predefined -> drawtriangle .)
    DRAWLINE        reduce using rule 64 (predefined -> drawtriangle .)
    DRAWPOLYGON     reduce using rule 64 (predefined -> drawtriangle .)
    DRAWCURVE       reduce using rule 64 (predefined -> drawtriangle .)
    RBRACKET        reduce using rule 64 (predefined -> drawtriangle .)


state 30

    (34) return -> RETURN . ssexpression SEMICOLON
    (40) ssexpression -> . sexpression
    (41) ssexpression -> . NOT sexpression
    (42) sexpression -> . expression ses1
    (46) expression -> . exp exs1
    (58) exp -> . term exps1
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    NOT             shift and go to state 69
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 64
    factor                         shift and go to state 66
    sexpression                    shift and go to state 67
    exp                            shift and go to state 71
    ssexpression                   shift and go to state 72
    expression                     shift and go to state 73

state 31

    (20) bls1 -> statue . bls1
    (20) bls1 -> . statue bls1
    (21) bls1 -> . empty
    (22) statue -> . assignment
    (23) statue -> . condition
    (24) statue -> . read
    (25) statue -> . write
    (26) statue -> . cycle
    (27) statue -> . functioncall
    (28) statue -> . predefined
    (29) statue -> . return
    (107) empty -> .
    (35) assignment -> . ID ass1 ASSIGN ass2
    (68) condition -> . IF cos1 RPAREN block cos3
    (76) read -> . ID ASSIGN INPUT SEMICOLON
    (77) write -> . PRINT LPAREN ssexpression RPAREN
    (84) cycle -> . WHILE LPAREN ssexpression RPAREN block
    (88) functioncall -> . ID LPAREN fcs1 RPAREN SEMICOLON
    (62) predefined -> . drawcircle
    (63) predefined -> . drawsquare
    (64) predefined -> . drawtriangle
    (65) predefined -> . drawline
    (66) predefined -> . drawpolygon
    (67) predefined -> . drawcurve
    (34) return -> . RETURN ssexpression SEMICOLON
    (94) drawcircle -> . DRAWCIRCLE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON
    (93) drawsquare -> . DRAWSQUARE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON
    (95) drawtriangle -> . DRAWTRIANGLE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON
    (92) drawline -> . DRAWLINE LPAREN ssexpression COMA ssexpression COMA ssexpression COMA ssexpression COMA color RPAREN SEMICOLON
    (97) drawpolygon -> . DRAWPOLYGON LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON
    (96) drawcurve -> . DRAWCURVE LPAREN ssexpression COMA color RPAREN SEMICOLON

    RBRACKET        reduce using rule 107 (empty -> .)
    ID              shift and go to state 49
    IF              shift and go to state 51
    PRINT           shift and go to state 35
    WHILE           shift and go to state 34
    RETURN          shift and go to state 30
    DRAWCIRCLE      shift and go to state 37
    DRAWSQUARE      shift and go to state 40
    DRAWTRIANGLE    shift and go to state 32
    DRAWLINE        shift and go to state 48
    DRAWPOLYGON     shift and go to state 52
    DRAWCURVE       shift and go to state 53

    drawtriangle                   shift and go to state 29
    statue                         shift and go to state 31
    drawcurve                      shift and go to state 33
    predefined                     shift and go to state 36
    drawline                       shift and go to state 38
    write                          shift and go to state 39
    functioncall                   shift and go to state 56
    empty                          shift and go to state 43
    return                         shift and go to state 44
    drawpolygon                    shift and go to state 45
    read                           shift and go to state 46
    assignment                     shift and go to state 47
    condition                      shift and go to state 50
    cycle                          shift and go to state 42
    drawsquare                     shift and go to state 54
    bls1                           shift and go to state 74
    drawcircle                     shift and go to state 41

state 32

    (95) drawtriangle -> DRAWTRIANGLE . LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 75


state 33

    (67) predefined -> drawcurve .

    ID              reduce using rule 67 (predefined -> drawcurve .)
    IF              reduce using rule 67 (predefined -> drawcurve .)
    PRINT           reduce using rule 67 (predefined -> drawcurve .)
    WHILE           reduce using rule 67 (predefined -> drawcurve .)
    RETURN          reduce using rule 67 (predefined -> drawcurve .)
    DRAWCIRCLE      reduce using rule 67 (predefined -> drawcurve .)
    DRAWSQUARE      reduce using rule 67 (predefined -> drawcurve .)
    DRAWTRIANGLE    reduce using rule 67 (predefined -> drawcurve .)
    DRAWLINE        reduce using rule 67 (predefined -> drawcurve .)
    DRAWPOLYGON     reduce using rule 67 (predefined -> drawcurve .)
    DRAWCURVE       reduce using rule 67 (predefined -> drawcurve .)
    RBRACKET        reduce using rule 67 (predefined -> drawcurve .)


state 34

    (84) cycle -> WHILE . LPAREN ssexpression RPAREN block

    LPAREN          shift and go to state 76


state 35

    (77) write -> PRINT . LPAREN ssexpression RPAREN

    LPAREN          shift and go to state 77


state 36

    (28) statue -> predefined .

    ID              reduce using rule 28 (statue -> predefined .)
    IF              reduce using rule 28 (statue -> predefined .)
    PRINT           reduce using rule 28 (statue -> predefined .)
    WHILE           reduce using rule 28 (statue -> predefined .)
    RETURN          reduce using rule 28 (statue -> predefined .)
    DRAWCIRCLE      reduce using rule 28 (statue -> predefined .)
    DRAWSQUARE      reduce using rule 28 (statue -> predefined .)
    DRAWTRIANGLE    reduce using rule 28 (statue -> predefined .)
    DRAWLINE        reduce using rule 28 (statue -> predefined .)
    DRAWPOLYGON     reduce using rule 28 (statue -> predefined .)
    DRAWCURVE       reduce using rule 28 (statue -> predefined .)
    RBRACKET        reduce using rule 28 (statue -> predefined .)


state 37

    (94) drawcircle -> DRAWCIRCLE . LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 78


state 38

    (65) predefined -> drawline .

    ID              reduce using rule 65 (predefined -> drawline .)
    IF              reduce using rule 65 (predefined -> drawline .)
    PRINT           reduce using rule 65 (predefined -> drawline .)
    WHILE           reduce using rule 65 (predefined -> drawline .)
    RETURN          reduce using rule 65 (predefined -> drawline .)
    DRAWCIRCLE      reduce using rule 65 (predefined -> drawline .)
    DRAWSQUARE      reduce using rule 65 (predefined -> drawline .)
    DRAWTRIANGLE    reduce using rule 65 (predefined -> drawline .)
    DRAWLINE        reduce using rule 65 (predefined -> drawline .)
    DRAWPOLYGON     reduce using rule 65 (predefined -> drawline .)
    DRAWCURVE       reduce using rule 65 (predefined -> drawline .)
    RBRACKET        reduce using rule 65 (predefined -> drawline .)


state 39

    (25) statue -> write .

    ID              reduce using rule 25 (statue -> write .)
    IF              reduce using rule 25 (statue -> write .)
    PRINT           reduce using rule 25 (statue -> write .)
    WHILE           reduce using rule 25 (statue -> write .)
    RETURN          reduce using rule 25 (statue -> write .)
    DRAWCIRCLE      reduce using rule 25 (statue -> write .)
    DRAWSQUARE      reduce using rule 25 (statue -> write .)
    DRAWTRIANGLE    reduce using rule 25 (statue -> write .)
    DRAWLINE        reduce using rule 25 (statue -> write .)
    DRAWPOLYGON     reduce using rule 25 (statue -> write .)
    DRAWCURVE       reduce using rule 25 (statue -> write .)
    RBRACKET        reduce using rule 25 (statue -> write .)


state 40

    (93) drawsquare -> DRAWSQUARE . LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 79


state 41

    (62) predefined -> drawcircle .

    ID              reduce using rule 62 (predefined -> drawcircle .)
    IF              reduce using rule 62 (predefined -> drawcircle .)
    PRINT           reduce using rule 62 (predefined -> drawcircle .)
    WHILE           reduce using rule 62 (predefined -> drawcircle .)
    RETURN          reduce using rule 62 (predefined -> drawcircle .)
    DRAWCIRCLE      reduce using rule 62 (predefined -> drawcircle .)
    DRAWSQUARE      reduce using rule 62 (predefined -> drawcircle .)
    DRAWTRIANGLE    reduce using rule 62 (predefined -> drawcircle .)
    DRAWLINE        reduce using rule 62 (predefined -> drawcircle .)
    DRAWPOLYGON     reduce using rule 62 (predefined -> drawcircle .)
    DRAWCURVE       reduce using rule 62 (predefined -> drawcircle .)
    RBRACKET        reduce using rule 62 (predefined -> drawcircle .)


state 42

    (26) statue -> cycle .

    ID              reduce using rule 26 (statue -> cycle .)
    IF              reduce using rule 26 (statue -> cycle .)
    PRINT           reduce using rule 26 (statue -> cycle .)
    WHILE           reduce using rule 26 (statue -> cycle .)
    RETURN          reduce using rule 26 (statue -> cycle .)
    DRAWCIRCLE      reduce using rule 26 (statue -> cycle .)
    DRAWSQUARE      reduce using rule 26 (statue -> cycle .)
    DRAWTRIANGLE    reduce using rule 26 (statue -> cycle .)
    DRAWLINE        reduce using rule 26 (statue -> cycle .)
    DRAWPOLYGON     reduce using rule 26 (statue -> cycle .)
    DRAWCURVE       reduce using rule 26 (statue -> cycle .)
    RBRACKET        reduce using rule 26 (statue -> cycle .)


state 43

    (21) bls1 -> empty .

    RBRACKET        reduce using rule 21 (bls1 -> empty .)


state 44

    (29) statue -> return .

    ID              reduce using rule 29 (statue -> return .)
    IF              reduce using rule 29 (statue -> return .)
    PRINT           reduce using rule 29 (statue -> return .)
    WHILE           reduce using rule 29 (statue -> return .)
    RETURN          reduce using rule 29 (statue -> return .)
    DRAWCIRCLE      reduce using rule 29 (statue -> return .)
    DRAWSQUARE      reduce using rule 29 (statue -> return .)
    DRAWTRIANGLE    reduce using rule 29 (statue -> return .)
    DRAWLINE        reduce using rule 29 (statue -> return .)
    DRAWPOLYGON     reduce using rule 29 (statue -> return .)
    DRAWCURVE       reduce using rule 29 (statue -> return .)
    RBRACKET        reduce using rule 29 (statue -> return .)


state 45

    (66) predefined -> drawpolygon .

    ID              reduce using rule 66 (predefined -> drawpolygon .)
    IF              reduce using rule 66 (predefined -> drawpolygon .)
    PRINT           reduce using rule 66 (predefined -> drawpolygon .)
    WHILE           reduce using rule 66 (predefined -> drawpolygon .)
    RETURN          reduce using rule 66 (predefined -> drawpolygon .)
    DRAWCIRCLE      reduce using rule 66 (predefined -> drawpolygon .)
    DRAWSQUARE      reduce using rule 66 (predefined -> drawpolygon .)
    DRAWTRIANGLE    reduce using rule 66 (predefined -> drawpolygon .)
    DRAWLINE        reduce using rule 66 (predefined -> drawpolygon .)
    DRAWPOLYGON     reduce using rule 66 (predefined -> drawpolygon .)
    DRAWCURVE       reduce using rule 66 (predefined -> drawpolygon .)
    RBRACKET        reduce using rule 66 (predefined -> drawpolygon .)


state 46

    (24) statue -> read .

    ID              reduce using rule 24 (statue -> read .)
    IF              reduce using rule 24 (statue -> read .)
    PRINT           reduce using rule 24 (statue -> read .)
    WHILE           reduce using rule 24 (statue -> read .)
    RETURN          reduce using rule 24 (statue -> read .)
    DRAWCIRCLE      reduce using rule 24 (statue -> read .)
    DRAWSQUARE      reduce using rule 24 (statue -> read .)
    DRAWTRIANGLE    reduce using rule 24 (statue -> read .)
    DRAWLINE        reduce using rule 24 (statue -> read .)
    DRAWPOLYGON     reduce using rule 24 (statue -> read .)
    DRAWCURVE       reduce using rule 24 (statue -> read .)
    RBRACKET        reduce using rule 24 (statue -> read .)


state 47

    (22) statue -> assignment .

    ID              reduce using rule 22 (statue -> assignment .)
    IF              reduce using rule 22 (statue -> assignment .)
    PRINT           reduce using rule 22 (statue -> assignment .)
    WHILE           reduce using rule 22 (statue -> assignment .)
    RETURN          reduce using rule 22 (statue -> assignment .)
    DRAWCIRCLE      reduce using rule 22 (statue -> assignment .)
    DRAWSQUARE      reduce using rule 22 (statue -> assignment .)
    DRAWTRIANGLE    reduce using rule 22 (statue -> assignment .)
    DRAWLINE        reduce using rule 22 (statue -> assignment .)
    DRAWPOLYGON     reduce using rule 22 (statue -> assignment .)
    DRAWCURVE       reduce using rule 22 (statue -> assignment .)
    RBRACKET        reduce using rule 22 (statue -> assignment .)


state 48

    (92) drawline -> DRAWLINE . LPAREN ssexpression COMA ssexpression COMA ssexpression COMA ssexpression COMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 80


state 49

    (35) assignment -> ID . ass1 ASSIGN ass2
    (76) read -> ID . ASSIGN INPUT SEMICOLON
    (88) functioncall -> ID . LPAREN fcs1 RPAREN SEMICOLON
    (36) ass1 -> . empty
    (37) ass1 -> . LARRAY ssexpression RARRAY
    (107) empty -> .

  ! shift/reduce conflict for ASSIGN resolved as shift
    ASSIGN          shift and go to state 81
    LPAREN          shift and go to state 83
    LARRAY          shift and go to state 82

  ! ASSIGN          [ reduce using rule 107 (empty -> .) ]

    ass1                           shift and go to state 84
    empty                          shift and go to state 85

state 50

    (23) statue -> condition .

    ID              reduce using rule 23 (statue -> condition .)
    IF              reduce using rule 23 (statue -> condition .)
    PRINT           reduce using rule 23 (statue -> condition .)
    WHILE           reduce using rule 23 (statue -> condition .)
    RETURN          reduce using rule 23 (statue -> condition .)
    DRAWCIRCLE      reduce using rule 23 (statue -> condition .)
    DRAWSQUARE      reduce using rule 23 (statue -> condition .)
    DRAWTRIANGLE    reduce using rule 23 (statue -> condition .)
    DRAWLINE        reduce using rule 23 (statue -> condition .)
    DRAWPOLYGON     reduce using rule 23 (statue -> condition .)
    DRAWCURVE       reduce using rule 23 (statue -> condition .)
    RBRACKET        reduce using rule 23 (statue -> condition .)


state 51

    (68) condition -> IF . cos1 RPAREN block cos3
    (69) cos1 -> . LPAREN cos2
    (70) cos1 -> . NOT cos2

    LPAREN          shift and go to state 87
    NOT             shift and go to state 88

    cos1                           shift and go to state 86

state 52

    (97) drawpolygon -> DRAWPOLYGON . LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 89


state 53

    (96) drawcurve -> DRAWCURVE . LPAREN ssexpression COMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 90


state 54

    (63) predefined -> drawsquare .

    ID              reduce using rule 63 (predefined -> drawsquare .)
    IF              reduce using rule 63 (predefined -> drawsquare .)
    PRINT           reduce using rule 63 (predefined -> drawsquare .)
    WHILE           reduce using rule 63 (predefined -> drawsquare .)
    RETURN          reduce using rule 63 (predefined -> drawsquare .)
    DRAWCIRCLE      reduce using rule 63 (predefined -> drawsquare .)
    DRAWSQUARE      reduce using rule 63 (predefined -> drawsquare .)
    DRAWTRIANGLE    reduce using rule 63 (predefined -> drawsquare .)
    DRAWLINE        reduce using rule 63 (predefined -> drawsquare .)
    DRAWPOLYGON     reduce using rule 63 (predefined -> drawsquare .)
    DRAWCURVE       reduce using rule 63 (predefined -> drawsquare .)
    RBRACKET        reduce using rule 63 (predefined -> drawsquare .)


state 55

    (19) block -> LBRACKET bls1 . RBRACKET

    RBRACKET        shift and go to state 91


state 56

    (27) statue -> functioncall .

    ID              reduce using rule 27 (statue -> functioncall .)
    IF              reduce using rule 27 (statue -> functioncall .)
    PRINT           reduce using rule 27 (statue -> functioncall .)
    WHILE           reduce using rule 27 (statue -> functioncall .)
    RETURN          reduce using rule 27 (statue -> functioncall .)
    DRAWCIRCLE      reduce using rule 27 (statue -> functioncall .)
    DRAWSQUARE      reduce using rule 27 (statue -> functioncall .)
    DRAWTRIANGLE    reduce using rule 27 (statue -> functioncall .)
    DRAWLINE        reduce using rule 27 (statue -> functioncall .)
    DRAWPOLYGON     reduce using rule 27 (statue -> functioncall .)
    DRAWCURVE       reduce using rule 27 (statue -> functioncall .)
    RBRACKET        reduce using rule 27 (statue -> functioncall .)


state 57

    (85) function -> FUNC fus1 ID . LPAREN parameter RPAREN block

    LPAREN          shift and go to state 92


state 58

    (18) ars1 -> LARRAY . CTEI RARRAY

    CTEI            shift and go to state 93


state 59

    (16) array -> FLOAT_TYPE ars1 .

    SEMICOLON       reduce using rule 16 (array -> FLOAT_TYPE ars1 .)
    ID              reduce using rule 16 (array -> FLOAT_TYPE ars1 .)


state 60

    (17) array -> STRING_TYPE ars1 .

    SEMICOLON       reduce using rule 17 (array -> STRING_TYPE ars1 .)
    ID              reduce using rule 17 (array -> STRING_TYPE ars1 .)


state 61

    (15) array -> INT_TYPE ars1 .

    SEMICOLON       reduce using rule 15 (array -> INT_TYPE ars1 .)
    ID              reduce using rule 15 (array -> INT_TYPE ars1 .)


state 62

    (6) vars -> VAR vas1 COLON type . SEMICOLON vas1

    SEMICOLON       shift and go to state 94


state 63

    (8) vas1 -> ID COMA vas1 .

    COLON           reduce using rule 8 (vas1 -> ID COMA vas1 .)
    FUNC            reduce using rule 8 (vas1 -> ID COMA vas1 .)
    LBRACKET        reduce using rule 8 (vas1 -> ID COMA vas1 .)


state 64

    (58) exp -> term . exps1
    (59) exps1 -> . empty
    (60) exps1 -> . PLUS term
    (61) exps1 -> . MINUS term
    (107) empty -> .

    PLUS            shift and go to state 96
    MINUS           shift and go to state 97
    GT              reduce using rule 107 (empty -> .)
    LT              reduce using rule 107 (empty -> .)
    GE              reduce using rule 107 (empty -> .)
    LE              reduce using rule 107 (empty -> .)
    EQUAL           reduce using rule 107 (empty -> .)
    DIFFERENT       reduce using rule 107 (empty -> .)
    AND             reduce using rule 107 (empty -> .)
    OR              reduce using rule 107 (empty -> .)
    SEMICOLON       reduce using rule 107 (empty -> .)
    RPAREN          reduce using rule 107 (empty -> .)
    COMA            reduce using rule 107 (empty -> .)
    RARRAY          reduce using rule 107 (empty -> .)
    ID              reduce using rule 107 (empty -> .)
    IF              reduce using rule 107 (empty -> .)
    PRINT           reduce using rule 107 (empty -> .)
    WHILE           reduce using rule 107 (empty -> .)
    RETURN          reduce using rule 107 (empty -> .)
    DRAWCIRCLE      reduce using rule 107 (empty -> .)
    DRAWSQUARE      reduce using rule 107 (empty -> .)
    DRAWTRIANGLE    reduce using rule 107 (empty -> .)
    DRAWLINE        reduce using rule 107 (empty -> .)
    DRAWPOLYGON     reduce using rule 107 (empty -> .)
    DRAWCURVE       reduce using rule 107 (empty -> .)
    RBRACKET        reduce using rule 107 (empty -> .)

    exps1                          shift and go to state 95
    empty                          shift and go to state 98

state 65

    (98) factor -> LPAREN . ssexpression RPAREN
    (40) ssexpression -> . sexpression
    (41) ssexpression -> . NOT sexpression
    (42) sexpression -> . expression ses1
    (46) expression -> . exp exs1
    (58) exp -> . term exps1
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    NOT             shift and go to state 69
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 64
    factor                         shift and go to state 66
    sexpression                    shift and go to state 67
    exp                            shift and go to state 71
    ssexpression                   shift and go to state 99
    expression                     shift and go to state 73

state 66

    (54) term -> factor . tes1
    (55) tes1 -> . empty
    (56) tes1 -> . TIMES term
    (57) tes1 -> . DIVISION term
    (107) empty -> .

    TIMES           shift and go to state 101
    DIVISION        shift and go to state 100
    PLUS            reduce using rule 107 (empty -> .)
    MINUS           reduce using rule 107 (empty -> .)
    GT              reduce using rule 107 (empty -> .)
    LT              reduce using rule 107 (empty -> .)
    GE              reduce using rule 107 (empty -> .)
    LE              reduce using rule 107 (empty -> .)
    EQUAL           reduce using rule 107 (empty -> .)
    DIFFERENT       reduce using rule 107 (empty -> .)
    AND             reduce using rule 107 (empty -> .)
    OR              reduce using rule 107 (empty -> .)
    SEMICOLON       reduce using rule 107 (empty -> .)
    RPAREN          reduce using rule 107 (empty -> .)
    COMA            reduce using rule 107 (empty -> .)
    RARRAY          reduce using rule 107 (empty -> .)
    ID              reduce using rule 107 (empty -> .)
    IF              reduce using rule 107 (empty -> .)
    PRINT           reduce using rule 107 (empty -> .)
    WHILE           reduce using rule 107 (empty -> .)
    RETURN          reduce using rule 107 (empty -> .)
    DRAWCIRCLE      reduce using rule 107 (empty -> .)
    DRAWSQUARE      reduce using rule 107 (empty -> .)
    DRAWTRIANGLE    reduce using rule 107 (empty -> .)
    DRAWLINE        reduce using rule 107 (empty -> .)
    DRAWPOLYGON     reduce using rule 107 (empty -> .)
    DRAWCURVE       reduce using rule 107 (empty -> .)
    RBRACKET        reduce using rule 107 (empty -> .)

    tes1                           shift and go to state 102
    empty                          shift and go to state 103

state 67

    (40) ssexpression -> sexpression .

    COMA            reduce using rule 40 (ssexpression -> sexpression .)
    SEMICOLON       reduce using rule 40 (ssexpression -> sexpression .)
    RPAREN          reduce using rule 40 (ssexpression -> sexpression .)
    RARRAY          reduce using rule 40 (ssexpression -> sexpression .)
    ID              reduce using rule 40 (ssexpression -> sexpression .)
    IF              reduce using rule 40 (ssexpression -> sexpression .)
    PRINT           reduce using rule 40 (ssexpression -> sexpression .)
    WHILE           reduce using rule 40 (ssexpression -> sexpression .)
    RETURN          reduce using rule 40 (ssexpression -> sexpression .)
    DRAWCIRCLE      reduce using rule 40 (ssexpression -> sexpression .)
    DRAWSQUARE      reduce using rule 40 (ssexpression -> sexpression .)
    DRAWTRIANGLE    reduce using rule 40 (ssexpression -> sexpression .)
    DRAWLINE        reduce using rule 40 (ssexpression -> sexpression .)
    DRAWPOLYGON     reduce using rule 40 (ssexpression -> sexpression .)
    DRAWCURVE       reduce using rule 40 (ssexpression -> sexpression .)
    RBRACKET        reduce using rule 40 (ssexpression -> sexpression .)


state 68

    (100) factor -> MINUS . fas1
    (101) fas1 -> . ID fas2
    (102) fas1 -> . CTEI
    (103) fas1 -> . CTEF

    ID              shift and go to state 105
    CTEI            shift and go to state 107
    CTEF            shift and go to state 106

    fas1                           shift and go to state 104

state 69

    (41) ssexpression -> NOT . sexpression
    (42) sexpression -> . expression ses1
    (46) expression -> . exp exs1
    (58) exp -> . term exps1
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 64
    factor                         shift and go to state 66
    sexpression                    shift and go to state 108
    exp                            shift and go to state 71
    expression                     shift and go to state 73

state 70

    (99) factor -> PLUS . fas1
    (101) fas1 -> . ID fas2
    (102) fas1 -> . CTEI
    (103) fas1 -> . CTEF

    ID              shift and go to state 105
    CTEI            shift and go to state 107
    CTEF            shift and go to state 106

    fas1                           shift and go to state 109

state 71

    (46) expression -> exp . exs1
    (47) exs1 -> . empty
    (48) exs1 -> . GT exp
    (49) exs1 -> . LT exp
    (50) exs1 -> . GE exp
    (51) exs1 -> . LE exp
    (52) exs1 -> . EQUAL exp
    (53) exs1 -> . DIFFERENT exp
    (107) empty -> .

    GT              shift and go to state 111
    LT              shift and go to state 114
    GE              shift and go to state 112
    LE              shift and go to state 115
    EQUAL           shift and go to state 113
    DIFFERENT       shift and go to state 110
    AND             reduce using rule 107 (empty -> .)
    OR              reduce using rule 107 (empty -> .)
    SEMICOLON       reduce using rule 107 (empty -> .)
    RPAREN          reduce using rule 107 (empty -> .)
    COMA            reduce using rule 107 (empty -> .)
    RARRAY          reduce using rule 107 (empty -> .)
    ID              reduce using rule 107 (empty -> .)
    IF              reduce using rule 107 (empty -> .)
    PRINT           reduce using rule 107 (empty -> .)
    WHILE           reduce using rule 107 (empty -> .)
    RETURN          reduce using rule 107 (empty -> .)
    DRAWCIRCLE      reduce using rule 107 (empty -> .)
    DRAWSQUARE      reduce using rule 107 (empty -> .)
    DRAWTRIANGLE    reduce using rule 107 (empty -> .)
    DRAWLINE        reduce using rule 107 (empty -> .)
    DRAWPOLYGON     reduce using rule 107 (empty -> .)
    DRAWCURVE       reduce using rule 107 (empty -> .)
    RBRACKET        reduce using rule 107 (empty -> .)

    empty                          shift and go to state 117
    exs1                           shift and go to state 116

state 72

    (34) return -> RETURN ssexpression . SEMICOLON

    SEMICOLON       shift and go to state 118


state 73

    (42) sexpression -> expression . ses1
    (43) ses1 -> . empty
    (44) ses1 -> . AND sexpression
    (45) ses1 -> . OR sexpression
    (107) empty -> .

    AND             shift and go to state 120
    OR              shift and go to state 121
    SEMICOLON       reduce using rule 107 (empty -> .)
    RPAREN          reduce using rule 107 (empty -> .)
    COMA            reduce using rule 107 (empty -> .)
    RARRAY          reduce using rule 107 (empty -> .)
    ID              reduce using rule 107 (empty -> .)
    IF              reduce using rule 107 (empty -> .)
    PRINT           reduce using rule 107 (empty -> .)
    WHILE           reduce using rule 107 (empty -> .)
    RETURN          reduce using rule 107 (empty -> .)
    DRAWCIRCLE      reduce using rule 107 (empty -> .)
    DRAWSQUARE      reduce using rule 107 (empty -> .)
    DRAWTRIANGLE    reduce using rule 107 (empty -> .)
    DRAWLINE        reduce using rule 107 (empty -> .)
    DRAWPOLYGON     reduce using rule 107 (empty -> .)
    DRAWCURVE       reduce using rule 107 (empty -> .)
    RBRACKET        reduce using rule 107 (empty -> .)

    ses1                           shift and go to state 119
    empty                          shift and go to state 122

state 74

    (20) bls1 -> statue bls1 .

    RBRACKET        reduce using rule 20 (bls1 -> statue bls1 .)


state 75

    (95) drawtriangle -> DRAWTRIANGLE LPAREN . ssexpression COMA ssexpression COMA color RPAREN SEMICOLON
    (40) ssexpression -> . sexpression
    (41) ssexpression -> . NOT sexpression
    (42) sexpression -> . expression ses1
    (46) expression -> . exp exs1
    (58) exp -> . term exps1
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    NOT             shift and go to state 69
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 64
    factor                         shift and go to state 66
    sexpression                    shift and go to state 67
    exp                            shift and go to state 71
    ssexpression                   shift and go to state 123
    expression                     shift and go to state 73

state 76

    (84) cycle -> WHILE LPAREN . ssexpression RPAREN block
    (40) ssexpression -> . sexpression
    (41) ssexpression -> . NOT sexpression
    (42) sexpression -> . expression ses1
    (46) expression -> . exp exs1
    (58) exp -> . term exps1
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    NOT             shift and go to state 69
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 64
    factor                         shift and go to state 66
    sexpression                    shift and go to state 67
    exp                            shift and go to state 71
    ssexpression                   shift and go to state 124
    expression                     shift and go to state 73

state 77

    (77) write -> PRINT LPAREN . ssexpression RPAREN
    (40) ssexpression -> . sexpression
    (41) ssexpression -> . NOT sexpression
    (42) sexpression -> . expression ses1
    (46) expression -> . exp exs1
    (58) exp -> . term exps1
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    NOT             shift and go to state 69
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 64
    factor                         shift and go to state 66
    sexpression                    shift and go to state 67
    exp                            shift and go to state 71
    ssexpression                   shift and go to state 125
    expression                     shift and go to state 73

state 78

    (94) drawcircle -> DRAWCIRCLE LPAREN . ssexpression COMA ssexpression COMA color RPAREN SEMICOLON
    (40) ssexpression -> . sexpression
    (41) ssexpression -> . NOT sexpression
    (42) sexpression -> . expression ses1
    (46) expression -> . exp exs1
    (58) exp -> . term exps1
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    NOT             shift and go to state 69
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 64
    factor                         shift and go to state 66
    sexpression                    shift and go to state 67
    exp                            shift and go to state 71
    ssexpression                   shift and go to state 126
    expression                     shift and go to state 73

state 79

    (93) drawsquare -> DRAWSQUARE LPAREN . ssexpression COMA ssexpression COMA color RPAREN SEMICOLON
    (40) ssexpression -> . sexpression
    (41) ssexpression -> . NOT sexpression
    (42) sexpression -> . expression ses1
    (46) expression -> . exp exs1
    (58) exp -> . term exps1
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    NOT             shift and go to state 69
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 64
    factor                         shift and go to state 66
    sexpression                    shift and go to state 67
    exp                            shift and go to state 71
    ssexpression                   shift and go to state 127
    expression                     shift and go to state 73

state 80

    (92) drawline -> DRAWLINE LPAREN . ssexpression COMA ssexpression COMA ssexpression COMA ssexpression COMA color RPAREN SEMICOLON
    (40) ssexpression -> . sexpression
    (41) ssexpression -> . NOT sexpression
    (42) sexpression -> . expression ses1
    (46) expression -> . exp exs1
    (58) exp -> . term exps1
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    NOT             shift and go to state 69
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 64
    factor                         shift and go to state 66
    sexpression                    shift and go to state 67
    exp                            shift and go to state 71
    ssexpression                   shift and go to state 128
    expression                     shift and go to state 73

state 81

    (76) read -> ID ASSIGN . INPUT SEMICOLON

    INPUT           shift and go to state 129


state 82

    (37) ass1 -> LARRAY . ssexpression RARRAY
    (40) ssexpression -> . sexpression
    (41) ssexpression -> . NOT sexpression
    (42) sexpression -> . expression ses1
    (46) expression -> . exp exs1
    (58) exp -> . term exps1
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    NOT             shift and go to state 69
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 64
    factor                         shift and go to state 66
    sexpression                    shift and go to state 67
    exp                            shift and go to state 71
    ssexpression                   shift and go to state 130
    expression                     shift and go to state 73

state 83

    (88) functioncall -> ID LPAREN . fcs1 RPAREN SEMICOLON
    (89) fcs1 -> . empty
    (90) fcs1 -> . ssexpression
    (91) fcs1 -> . ssexpression COMA fcs1
    (107) empty -> .
    (40) ssexpression -> . sexpression
    (41) ssexpression -> . NOT sexpression
    (42) sexpression -> . expression ses1
    (46) expression -> . exp exs1
    (58) exp -> . term exps1
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    RPAREN          reduce using rule 107 (empty -> .)
    NOT             shift and go to state 69
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 64
    factor                         shift and go to state 66
    sexpression                    shift and go to state 67
    fcs1                           shift and go to state 131
    exp                            shift and go to state 71
    ssexpression                   shift and go to state 132
    expression                     shift and go to state 73
    empty                          shift and go to state 133

state 84

    (35) assignment -> ID ass1 . ASSIGN ass2

    ASSIGN          shift and go to state 134


state 85

    (36) ass1 -> empty .

    ASSIGN          reduce using rule 36 (ass1 -> empty .)


state 86

    (68) condition -> IF cos1 . RPAREN block cos3

    RPAREN          shift and go to state 135


state 87

    (69) cos1 -> LPAREN . cos2
    (71) cos2 -> . ssexpression
    (72) cos2 -> . functioncall
    (40) ssexpression -> . sexpression
    (41) ssexpression -> . NOT sexpression
    (88) functioncall -> . ID LPAREN fcs1 RPAREN SEMICOLON
    (42) sexpression -> . expression ses1
    (46) expression -> . exp exs1
    (58) exp -> . term exps1
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    NOT             shift and go to state 69
    ID              shift and go to state 139
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 64
    factor                         shift and go to state 66
    sexpression                    shift and go to state 67
    functioncall                   shift and go to state 136
    cos2                           shift and go to state 137
    exp                            shift and go to state 71
    ssexpression                   shift and go to state 138
    expression                     shift and go to state 73

state 88

    (70) cos1 -> NOT . cos2
    (71) cos2 -> . ssexpression
    (72) cos2 -> . functioncall
    (40) ssexpression -> . sexpression
    (41) ssexpression -> . NOT sexpression
    (88) functioncall -> . ID LPAREN fcs1 RPAREN SEMICOLON
    (42) sexpression -> . expression ses1
    (46) expression -> . exp exs1
    (58) exp -> . term exps1
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    NOT             shift and go to state 69
    ID              shift and go to state 139
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 64
    factor                         shift and go to state 66
    sexpression                    shift and go to state 67
    functioncall                   shift and go to state 136
    cos2                           shift and go to state 140
    exp                            shift and go to state 71
    ssexpression                   shift and go to state 138
    expression                     shift and go to state 73

state 89

    (97) drawpolygon -> DRAWPOLYGON LPAREN . ssexpression COMA ssexpression COMA color RPAREN SEMICOLON
    (40) ssexpression -> . sexpression
    (41) ssexpression -> . NOT sexpression
    (42) sexpression -> . expression ses1
    (46) expression -> . exp exs1
    (58) exp -> . term exps1
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    NOT             shift and go to state 69
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 64
    factor                         shift and go to state 66
    sexpression                    shift and go to state 67
    exp                            shift and go to state 71
    ssexpression                   shift and go to state 141
    expression                     shift and go to state 73

state 90

    (96) drawcurve -> DRAWCURVE LPAREN . ssexpression COMA color RPAREN SEMICOLON
    (40) ssexpression -> . sexpression
    (41) ssexpression -> . NOT sexpression
    (42) sexpression -> . expression ses1
    (46) expression -> . exp exs1
    (58) exp -> . term exps1
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    NOT             shift and go to state 69
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 64
    factor                         shift and go to state 66
    sexpression                    shift and go to state 67
    exp                            shift and go to state 71
    ssexpression                   shift and go to state 142
    expression                     shift and go to state 73

state 91

    (19) block -> LBRACKET bls1 RBRACKET .

    ELSE            reduce using rule 19 (block -> LBRACKET bls1 RBRACKET .)
    ELSEIF          reduce using rule 19 (block -> LBRACKET bls1 RBRACKET .)
    ID              reduce using rule 19 (block -> LBRACKET bls1 RBRACKET .)
    IF              reduce using rule 19 (block -> LBRACKET bls1 RBRACKET .)
    PRINT           reduce using rule 19 (block -> LBRACKET bls1 RBRACKET .)
    WHILE           reduce using rule 19 (block -> LBRACKET bls1 RBRACKET .)
    RETURN          reduce using rule 19 (block -> LBRACKET bls1 RBRACKET .)
    DRAWCIRCLE      reduce using rule 19 (block -> LBRACKET bls1 RBRACKET .)
    DRAWSQUARE      reduce using rule 19 (block -> LBRACKET bls1 RBRACKET .)
    DRAWTRIANGLE    reduce using rule 19 (block -> LBRACKET bls1 RBRACKET .)
    DRAWLINE        reduce using rule 19 (block -> LBRACKET bls1 RBRACKET .)
    DRAWPOLYGON     reduce using rule 19 (block -> LBRACKET bls1 RBRACKET .)
    DRAWCURVE       reduce using rule 19 (block -> LBRACKET bls1 RBRACKET .)
    RBRACKET        reduce using rule 19 (block -> LBRACKET bls1 RBRACKET .)
    $end            reduce using rule 19 (block -> LBRACKET bls1 RBRACKET .)
    FUNC            reduce using rule 19 (block -> LBRACKET bls1 RBRACKET .)
    LBRACKET        reduce using rule 19 (block -> LBRACKET bls1 RBRACKET .)


state 92

    (85) function -> FUNC fus1 ID LPAREN . parameter RPAREN block
    (30) parameter -> . empty
    (31) parameter -> . pas1
    (107) empty -> .
    (32) pas1 -> . type ID
    (33) pas1 -> . type ID COMA pas1
    (10) type -> . INT_TYPE
    (11) type -> . FLOAT_TYPE
    (12) type -> . BOOL_TYPE
    (13) type -> . STRING_TYPE
    (14) type -> . array
    (15) array -> . INT_TYPE ars1
    (16) array -> . FLOAT_TYPE ars1
    (17) array -> . STRING_TYPE ars1

    RPAREN          reduce using rule 107 (empty -> .)
    INT_TYPE        shift and go to state 25
    FLOAT_TYPE      shift and go to state 22
    BOOL_TYPE       shift and go to state 24
    STRING_TYPE     shift and go to state 23

    parameter                      shift and go to state 145
    pas1                           shift and go to state 146
    array                          shift and go to state 26
    type                           shift and go to state 143
    empty                          shift and go to state 144

state 93

    (18) ars1 -> LARRAY CTEI . RARRAY

    RARRAY          shift and go to state 147


state 94

    (6) vars -> VAR vas1 COLON type SEMICOLON . vas1
    (7) vas1 -> . ID
    (8) vas1 -> . ID COMA vas1
    (9) vas1 -> . empty
    (107) empty -> .

    ID              shift and go to state 14
    FUNC            reduce using rule 107 (empty -> .)
    LBRACKET        reduce using rule 107 (empty -> .)

    vas1                           shift and go to state 148
    empty                          shift and go to state 15

state 95

    (58) exp -> term exps1 .

    AND             reduce using rule 58 (exp -> term exps1 .)
    OR              reduce using rule 58 (exp -> term exps1 .)
    SEMICOLON       reduce using rule 58 (exp -> term exps1 .)
    RPAREN          reduce using rule 58 (exp -> term exps1 .)
    COMA            reduce using rule 58 (exp -> term exps1 .)
    RARRAY          reduce using rule 58 (exp -> term exps1 .)
    ID              reduce using rule 58 (exp -> term exps1 .)
    IF              reduce using rule 58 (exp -> term exps1 .)
    PRINT           reduce using rule 58 (exp -> term exps1 .)
    WHILE           reduce using rule 58 (exp -> term exps1 .)
    RETURN          reduce using rule 58 (exp -> term exps1 .)
    DRAWCIRCLE      reduce using rule 58 (exp -> term exps1 .)
    DRAWSQUARE      reduce using rule 58 (exp -> term exps1 .)
    DRAWTRIANGLE    reduce using rule 58 (exp -> term exps1 .)
    DRAWLINE        reduce using rule 58 (exp -> term exps1 .)
    DRAWPOLYGON     reduce using rule 58 (exp -> term exps1 .)
    DRAWCURVE       reduce using rule 58 (exp -> term exps1 .)
    RBRACKET        reduce using rule 58 (exp -> term exps1 .)
    GT              reduce using rule 58 (exp -> term exps1 .)
    LT              reduce using rule 58 (exp -> term exps1 .)
    GE              reduce using rule 58 (exp -> term exps1 .)
    LE              reduce using rule 58 (exp -> term exps1 .)
    EQUAL           reduce using rule 58 (exp -> term exps1 .)
    DIFFERENT       reduce using rule 58 (exp -> term exps1 .)


state 96

    (60) exps1 -> PLUS . term
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 149
    factor                         shift and go to state 66

state 97

    (61) exps1 -> MINUS . term
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 150
    factor                         shift and go to state 66

state 98

    (59) exps1 -> empty .

    GT              reduce using rule 59 (exps1 -> empty .)
    LT              reduce using rule 59 (exps1 -> empty .)
    GE              reduce using rule 59 (exps1 -> empty .)
    LE              reduce using rule 59 (exps1 -> empty .)
    EQUAL           reduce using rule 59 (exps1 -> empty .)
    DIFFERENT       reduce using rule 59 (exps1 -> empty .)
    AND             reduce using rule 59 (exps1 -> empty .)
    OR              reduce using rule 59 (exps1 -> empty .)
    SEMICOLON       reduce using rule 59 (exps1 -> empty .)
    RPAREN          reduce using rule 59 (exps1 -> empty .)
    COMA            reduce using rule 59 (exps1 -> empty .)
    RARRAY          reduce using rule 59 (exps1 -> empty .)
    ID              reduce using rule 59 (exps1 -> empty .)
    IF              reduce using rule 59 (exps1 -> empty .)
    PRINT           reduce using rule 59 (exps1 -> empty .)
    WHILE           reduce using rule 59 (exps1 -> empty .)
    RETURN          reduce using rule 59 (exps1 -> empty .)
    DRAWCIRCLE      reduce using rule 59 (exps1 -> empty .)
    DRAWSQUARE      reduce using rule 59 (exps1 -> empty .)
    DRAWTRIANGLE    reduce using rule 59 (exps1 -> empty .)
    DRAWLINE        reduce using rule 59 (exps1 -> empty .)
    DRAWPOLYGON     reduce using rule 59 (exps1 -> empty .)
    DRAWCURVE       reduce using rule 59 (exps1 -> empty .)
    RBRACKET        reduce using rule 59 (exps1 -> empty .)


state 99

    (98) factor -> LPAREN ssexpression . RPAREN

    RPAREN          shift and go to state 151


state 100

    (57) tes1 -> DIVISION . term
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 152
    factor                         shift and go to state 66

state 101

    (56) tes1 -> TIMES . term
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 153
    factor                         shift and go to state 66

state 102

    (54) term -> factor tes1 .

    PLUS            reduce using rule 54 (term -> factor tes1 .)
    MINUS           reduce using rule 54 (term -> factor tes1 .)
    AND             reduce using rule 54 (term -> factor tes1 .)
    OR              reduce using rule 54 (term -> factor tes1 .)
    SEMICOLON       reduce using rule 54 (term -> factor tes1 .)
    RPAREN          reduce using rule 54 (term -> factor tes1 .)
    COMA            reduce using rule 54 (term -> factor tes1 .)
    RARRAY          reduce using rule 54 (term -> factor tes1 .)
    ID              reduce using rule 54 (term -> factor tes1 .)
    IF              reduce using rule 54 (term -> factor tes1 .)
    PRINT           reduce using rule 54 (term -> factor tes1 .)
    WHILE           reduce using rule 54 (term -> factor tes1 .)
    RETURN          reduce using rule 54 (term -> factor tes1 .)
    DRAWCIRCLE      reduce using rule 54 (term -> factor tes1 .)
    DRAWSQUARE      reduce using rule 54 (term -> factor tes1 .)
    DRAWTRIANGLE    reduce using rule 54 (term -> factor tes1 .)
    DRAWLINE        reduce using rule 54 (term -> factor tes1 .)
    DRAWPOLYGON     reduce using rule 54 (term -> factor tes1 .)
    DRAWCURVE       reduce using rule 54 (term -> factor tes1 .)
    RBRACKET        reduce using rule 54 (term -> factor tes1 .)
    GT              reduce using rule 54 (term -> factor tes1 .)
    LT              reduce using rule 54 (term -> factor tes1 .)
    GE              reduce using rule 54 (term -> factor tes1 .)
    LE              reduce using rule 54 (term -> factor tes1 .)
    EQUAL           reduce using rule 54 (term -> factor tes1 .)
    DIFFERENT       reduce using rule 54 (term -> factor tes1 .)


state 103

    (55) tes1 -> empty .

    PLUS            reduce using rule 55 (tes1 -> empty .)
    MINUS           reduce using rule 55 (tes1 -> empty .)
    GT              reduce using rule 55 (tes1 -> empty .)
    LT              reduce using rule 55 (tes1 -> empty .)
    GE              reduce using rule 55 (tes1 -> empty .)
    LE              reduce using rule 55 (tes1 -> empty .)
    EQUAL           reduce using rule 55 (tes1 -> empty .)
    DIFFERENT       reduce using rule 55 (tes1 -> empty .)
    AND             reduce using rule 55 (tes1 -> empty .)
    OR              reduce using rule 55 (tes1 -> empty .)
    SEMICOLON       reduce using rule 55 (tes1 -> empty .)
    RPAREN          reduce using rule 55 (tes1 -> empty .)
    COMA            reduce using rule 55 (tes1 -> empty .)
    RARRAY          reduce using rule 55 (tes1 -> empty .)
    ID              reduce using rule 55 (tes1 -> empty .)
    IF              reduce using rule 55 (tes1 -> empty .)
    PRINT           reduce using rule 55 (tes1 -> empty .)
    WHILE           reduce using rule 55 (tes1 -> empty .)
    RETURN          reduce using rule 55 (tes1 -> empty .)
    DRAWCIRCLE      reduce using rule 55 (tes1 -> empty .)
    DRAWSQUARE      reduce using rule 55 (tes1 -> empty .)
    DRAWTRIANGLE    reduce using rule 55 (tes1 -> empty .)
    DRAWLINE        reduce using rule 55 (tes1 -> empty .)
    DRAWPOLYGON     reduce using rule 55 (tes1 -> empty .)
    DRAWCURVE       reduce using rule 55 (tes1 -> empty .)
    RBRACKET        reduce using rule 55 (tes1 -> empty .)


state 104

    (100) factor -> MINUS fas1 .

    TIMES           reduce using rule 100 (factor -> MINUS fas1 .)
    DIVISION        reduce using rule 100 (factor -> MINUS fas1 .)
    PLUS            reduce using rule 100 (factor -> MINUS fas1 .)
    MINUS           reduce using rule 100 (factor -> MINUS fas1 .)
    GT              reduce using rule 100 (factor -> MINUS fas1 .)
    LT              reduce using rule 100 (factor -> MINUS fas1 .)
    GE              reduce using rule 100 (factor -> MINUS fas1 .)
    LE              reduce using rule 100 (factor -> MINUS fas1 .)
    EQUAL           reduce using rule 100 (factor -> MINUS fas1 .)
    DIFFERENT       reduce using rule 100 (factor -> MINUS fas1 .)
    AND             reduce using rule 100 (factor -> MINUS fas1 .)
    OR              reduce using rule 100 (factor -> MINUS fas1 .)
    COMA            reduce using rule 100 (factor -> MINUS fas1 .)
    SEMICOLON       reduce using rule 100 (factor -> MINUS fas1 .)
    RPAREN          reduce using rule 100 (factor -> MINUS fas1 .)
    RARRAY          reduce using rule 100 (factor -> MINUS fas1 .)
    ID              reduce using rule 100 (factor -> MINUS fas1 .)
    IF              reduce using rule 100 (factor -> MINUS fas1 .)
    PRINT           reduce using rule 100 (factor -> MINUS fas1 .)
    WHILE           reduce using rule 100 (factor -> MINUS fas1 .)
    RETURN          reduce using rule 100 (factor -> MINUS fas1 .)
    DRAWCIRCLE      reduce using rule 100 (factor -> MINUS fas1 .)
    DRAWSQUARE      reduce using rule 100 (factor -> MINUS fas1 .)
    DRAWTRIANGLE    reduce using rule 100 (factor -> MINUS fas1 .)
    DRAWLINE        reduce using rule 100 (factor -> MINUS fas1 .)
    DRAWPOLYGON     reduce using rule 100 (factor -> MINUS fas1 .)
    DRAWCURVE       reduce using rule 100 (factor -> MINUS fas1 .)
    RBRACKET        reduce using rule 100 (factor -> MINUS fas1 .)


state 105

    (101) fas1 -> ID . fas2
    (104) fas2 -> . LARRAY exp RARRAY
    (105) fas2 -> . LPAREN exp RPAREN
    (106) fas2 -> . empty
    (107) empty -> .

    LARRAY          shift and go to state 155
    LPAREN          shift and go to state 156
    TIMES           reduce using rule 107 (empty -> .)
    DIVISION        reduce using rule 107 (empty -> .)
    PLUS            reduce using rule 107 (empty -> .)
    MINUS           reduce using rule 107 (empty -> .)
    GT              reduce using rule 107 (empty -> .)
    LT              reduce using rule 107 (empty -> .)
    GE              reduce using rule 107 (empty -> .)
    LE              reduce using rule 107 (empty -> .)
    EQUAL           reduce using rule 107 (empty -> .)
    DIFFERENT       reduce using rule 107 (empty -> .)
    AND             reduce using rule 107 (empty -> .)
    OR              reduce using rule 107 (empty -> .)
    SEMICOLON       reduce using rule 107 (empty -> .)
    RPAREN          reduce using rule 107 (empty -> .)
    COMA            reduce using rule 107 (empty -> .)
    RARRAY          reduce using rule 107 (empty -> .)
    ID              reduce using rule 107 (empty -> .)
    IF              reduce using rule 107 (empty -> .)
    PRINT           reduce using rule 107 (empty -> .)
    WHILE           reduce using rule 107 (empty -> .)
    RETURN          reduce using rule 107 (empty -> .)
    DRAWCIRCLE      reduce using rule 107 (empty -> .)
    DRAWSQUARE      reduce using rule 107 (empty -> .)
    DRAWTRIANGLE    reduce using rule 107 (empty -> .)
    DRAWLINE        reduce using rule 107 (empty -> .)
    DRAWPOLYGON     reduce using rule 107 (empty -> .)
    DRAWCURVE       reduce using rule 107 (empty -> .)
    RBRACKET        reduce using rule 107 (empty -> .)

    fas2                           shift and go to state 154
    empty                          shift and go to state 157

state 106

    (103) fas1 -> CTEF .

    TIMES           reduce using rule 103 (fas1 -> CTEF .)
    DIVISION        reduce using rule 103 (fas1 -> CTEF .)
    PLUS            reduce using rule 103 (fas1 -> CTEF .)
    MINUS           reduce using rule 103 (fas1 -> CTEF .)
    GT              reduce using rule 103 (fas1 -> CTEF .)
    LT              reduce using rule 103 (fas1 -> CTEF .)
    GE              reduce using rule 103 (fas1 -> CTEF .)
    LE              reduce using rule 103 (fas1 -> CTEF .)
    EQUAL           reduce using rule 103 (fas1 -> CTEF .)
    DIFFERENT       reduce using rule 103 (fas1 -> CTEF .)
    AND             reduce using rule 103 (fas1 -> CTEF .)
    OR              reduce using rule 103 (fas1 -> CTEF .)
    SEMICOLON       reduce using rule 103 (fas1 -> CTEF .)
    RPAREN          reduce using rule 103 (fas1 -> CTEF .)
    COMA            reduce using rule 103 (fas1 -> CTEF .)
    RARRAY          reduce using rule 103 (fas1 -> CTEF .)
    ID              reduce using rule 103 (fas1 -> CTEF .)
    IF              reduce using rule 103 (fas1 -> CTEF .)
    PRINT           reduce using rule 103 (fas1 -> CTEF .)
    WHILE           reduce using rule 103 (fas1 -> CTEF .)
    RETURN          reduce using rule 103 (fas1 -> CTEF .)
    DRAWCIRCLE      reduce using rule 103 (fas1 -> CTEF .)
    DRAWSQUARE      reduce using rule 103 (fas1 -> CTEF .)
    DRAWTRIANGLE    reduce using rule 103 (fas1 -> CTEF .)
    DRAWLINE        reduce using rule 103 (fas1 -> CTEF .)
    DRAWPOLYGON     reduce using rule 103 (fas1 -> CTEF .)
    DRAWCURVE       reduce using rule 103 (fas1 -> CTEF .)
    RBRACKET        reduce using rule 103 (fas1 -> CTEF .)


state 107

    (102) fas1 -> CTEI .

    TIMES           reduce using rule 102 (fas1 -> CTEI .)
    DIVISION        reduce using rule 102 (fas1 -> CTEI .)
    PLUS            reduce using rule 102 (fas1 -> CTEI .)
    MINUS           reduce using rule 102 (fas1 -> CTEI .)
    GT              reduce using rule 102 (fas1 -> CTEI .)
    LT              reduce using rule 102 (fas1 -> CTEI .)
    GE              reduce using rule 102 (fas1 -> CTEI .)
    LE              reduce using rule 102 (fas1 -> CTEI .)
    EQUAL           reduce using rule 102 (fas1 -> CTEI .)
    DIFFERENT       reduce using rule 102 (fas1 -> CTEI .)
    AND             reduce using rule 102 (fas1 -> CTEI .)
    OR              reduce using rule 102 (fas1 -> CTEI .)
    SEMICOLON       reduce using rule 102 (fas1 -> CTEI .)
    RPAREN          reduce using rule 102 (fas1 -> CTEI .)
    COMA            reduce using rule 102 (fas1 -> CTEI .)
    RARRAY          reduce using rule 102 (fas1 -> CTEI .)
    ID              reduce using rule 102 (fas1 -> CTEI .)
    IF              reduce using rule 102 (fas1 -> CTEI .)
    PRINT           reduce using rule 102 (fas1 -> CTEI .)
    WHILE           reduce using rule 102 (fas1 -> CTEI .)
    RETURN          reduce using rule 102 (fas1 -> CTEI .)
    DRAWCIRCLE      reduce using rule 102 (fas1 -> CTEI .)
    DRAWSQUARE      reduce using rule 102 (fas1 -> CTEI .)
    DRAWTRIANGLE    reduce using rule 102 (fas1 -> CTEI .)
    DRAWLINE        reduce using rule 102 (fas1 -> CTEI .)
    DRAWPOLYGON     reduce using rule 102 (fas1 -> CTEI .)
    DRAWCURVE       reduce using rule 102 (fas1 -> CTEI .)
    RBRACKET        reduce using rule 102 (fas1 -> CTEI .)


state 108

    (41) ssexpression -> NOT sexpression .

    COMA            reduce using rule 41 (ssexpression -> NOT sexpression .)
    SEMICOLON       reduce using rule 41 (ssexpression -> NOT sexpression .)
    RPAREN          reduce using rule 41 (ssexpression -> NOT sexpression .)
    RARRAY          reduce using rule 41 (ssexpression -> NOT sexpression .)
    ID              reduce using rule 41 (ssexpression -> NOT sexpression .)
    IF              reduce using rule 41 (ssexpression -> NOT sexpression .)
    PRINT           reduce using rule 41 (ssexpression -> NOT sexpression .)
    WHILE           reduce using rule 41 (ssexpression -> NOT sexpression .)
    RETURN          reduce using rule 41 (ssexpression -> NOT sexpression .)
    DRAWCIRCLE      reduce using rule 41 (ssexpression -> NOT sexpression .)
    DRAWSQUARE      reduce using rule 41 (ssexpression -> NOT sexpression .)
    DRAWTRIANGLE    reduce using rule 41 (ssexpression -> NOT sexpression .)
    DRAWLINE        reduce using rule 41 (ssexpression -> NOT sexpression .)
    DRAWPOLYGON     reduce using rule 41 (ssexpression -> NOT sexpression .)
    DRAWCURVE       reduce using rule 41 (ssexpression -> NOT sexpression .)
    RBRACKET        reduce using rule 41 (ssexpression -> NOT sexpression .)


state 109

    (99) factor -> PLUS fas1 .

    TIMES           reduce using rule 99 (factor -> PLUS fas1 .)
    DIVISION        reduce using rule 99 (factor -> PLUS fas1 .)
    PLUS            reduce using rule 99 (factor -> PLUS fas1 .)
    MINUS           reduce using rule 99 (factor -> PLUS fas1 .)
    GT              reduce using rule 99 (factor -> PLUS fas1 .)
    LT              reduce using rule 99 (factor -> PLUS fas1 .)
    GE              reduce using rule 99 (factor -> PLUS fas1 .)
    LE              reduce using rule 99 (factor -> PLUS fas1 .)
    EQUAL           reduce using rule 99 (factor -> PLUS fas1 .)
    DIFFERENT       reduce using rule 99 (factor -> PLUS fas1 .)
    AND             reduce using rule 99 (factor -> PLUS fas1 .)
    OR              reduce using rule 99 (factor -> PLUS fas1 .)
    COMA            reduce using rule 99 (factor -> PLUS fas1 .)
    SEMICOLON       reduce using rule 99 (factor -> PLUS fas1 .)
    RPAREN          reduce using rule 99 (factor -> PLUS fas1 .)
    RARRAY          reduce using rule 99 (factor -> PLUS fas1 .)
    ID              reduce using rule 99 (factor -> PLUS fas1 .)
    IF              reduce using rule 99 (factor -> PLUS fas1 .)
    PRINT           reduce using rule 99 (factor -> PLUS fas1 .)
    WHILE           reduce using rule 99 (factor -> PLUS fas1 .)
    RETURN          reduce using rule 99 (factor -> PLUS fas1 .)
    DRAWCIRCLE      reduce using rule 99 (factor -> PLUS fas1 .)
    DRAWSQUARE      reduce using rule 99 (factor -> PLUS fas1 .)
    DRAWTRIANGLE    reduce using rule 99 (factor -> PLUS fas1 .)
    DRAWLINE        reduce using rule 99 (factor -> PLUS fas1 .)
    DRAWPOLYGON     reduce using rule 99 (factor -> PLUS fas1 .)
    DRAWCURVE       reduce using rule 99 (factor -> PLUS fas1 .)
    RBRACKET        reduce using rule 99 (factor -> PLUS fas1 .)


state 110

    (53) exs1 -> DIFFERENT . exp
    (58) exp -> . term exps1
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 64
    exp                            shift and go to state 158
    factor                         shift and go to state 66

state 111

    (48) exs1 -> GT . exp
    (58) exp -> . term exps1
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 64
    exp                            shift and go to state 159
    factor                         shift and go to state 66

state 112

    (50) exs1 -> GE . exp
    (58) exp -> . term exps1
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 64
    exp                            shift and go to state 160
    factor                         shift and go to state 66

state 113

    (52) exs1 -> EQUAL . exp
    (58) exp -> . term exps1
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 64
    exp                            shift and go to state 161
    factor                         shift and go to state 66

state 114

    (49) exs1 -> LT . exp
    (58) exp -> . term exps1
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 64
    exp                            shift and go to state 162
    factor                         shift and go to state 66

state 115

    (51) exs1 -> LE . exp
    (58) exp -> . term exps1
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 64
    exp                            shift and go to state 163
    factor                         shift and go to state 66

state 116

    (46) expression -> exp exs1 .

    AND             reduce using rule 46 (expression -> exp exs1 .)
    OR              reduce using rule 46 (expression -> exp exs1 .)
    COMA            reduce using rule 46 (expression -> exp exs1 .)
    SEMICOLON       reduce using rule 46 (expression -> exp exs1 .)
    RPAREN          reduce using rule 46 (expression -> exp exs1 .)
    RARRAY          reduce using rule 46 (expression -> exp exs1 .)
    ID              reduce using rule 46 (expression -> exp exs1 .)
    IF              reduce using rule 46 (expression -> exp exs1 .)
    PRINT           reduce using rule 46 (expression -> exp exs1 .)
    WHILE           reduce using rule 46 (expression -> exp exs1 .)
    RETURN          reduce using rule 46 (expression -> exp exs1 .)
    DRAWCIRCLE      reduce using rule 46 (expression -> exp exs1 .)
    DRAWSQUARE      reduce using rule 46 (expression -> exp exs1 .)
    DRAWTRIANGLE    reduce using rule 46 (expression -> exp exs1 .)
    DRAWLINE        reduce using rule 46 (expression -> exp exs1 .)
    DRAWPOLYGON     reduce using rule 46 (expression -> exp exs1 .)
    DRAWCURVE       reduce using rule 46 (expression -> exp exs1 .)
    RBRACKET        reduce using rule 46 (expression -> exp exs1 .)


state 117

    (47) exs1 -> empty .

    AND             reduce using rule 47 (exs1 -> empty .)
    OR              reduce using rule 47 (exs1 -> empty .)
    SEMICOLON       reduce using rule 47 (exs1 -> empty .)
    RPAREN          reduce using rule 47 (exs1 -> empty .)
    COMA            reduce using rule 47 (exs1 -> empty .)
    RARRAY          reduce using rule 47 (exs1 -> empty .)
    ID              reduce using rule 47 (exs1 -> empty .)
    IF              reduce using rule 47 (exs1 -> empty .)
    PRINT           reduce using rule 47 (exs1 -> empty .)
    WHILE           reduce using rule 47 (exs1 -> empty .)
    RETURN          reduce using rule 47 (exs1 -> empty .)
    DRAWCIRCLE      reduce using rule 47 (exs1 -> empty .)
    DRAWSQUARE      reduce using rule 47 (exs1 -> empty .)
    DRAWTRIANGLE    reduce using rule 47 (exs1 -> empty .)
    DRAWLINE        reduce using rule 47 (exs1 -> empty .)
    DRAWPOLYGON     reduce using rule 47 (exs1 -> empty .)
    DRAWCURVE       reduce using rule 47 (exs1 -> empty .)
    RBRACKET        reduce using rule 47 (exs1 -> empty .)


state 118

    (34) return -> RETURN ssexpression SEMICOLON .

    ID              reduce using rule 34 (return -> RETURN ssexpression SEMICOLON .)
    IF              reduce using rule 34 (return -> RETURN ssexpression SEMICOLON .)
    PRINT           reduce using rule 34 (return -> RETURN ssexpression SEMICOLON .)
    WHILE           reduce using rule 34 (return -> RETURN ssexpression SEMICOLON .)
    RETURN          reduce using rule 34 (return -> RETURN ssexpression SEMICOLON .)
    DRAWCIRCLE      reduce using rule 34 (return -> RETURN ssexpression SEMICOLON .)
    DRAWSQUARE      reduce using rule 34 (return -> RETURN ssexpression SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 34 (return -> RETURN ssexpression SEMICOLON .)
    DRAWLINE        reduce using rule 34 (return -> RETURN ssexpression SEMICOLON .)
    DRAWPOLYGON     reduce using rule 34 (return -> RETURN ssexpression SEMICOLON .)
    DRAWCURVE       reduce using rule 34 (return -> RETURN ssexpression SEMICOLON .)
    RBRACKET        reduce using rule 34 (return -> RETURN ssexpression SEMICOLON .)


state 119

    (42) sexpression -> expression ses1 .

    SEMICOLON       reduce using rule 42 (sexpression -> expression ses1 .)
    RPAREN          reduce using rule 42 (sexpression -> expression ses1 .)
    COMA            reduce using rule 42 (sexpression -> expression ses1 .)
    RARRAY          reduce using rule 42 (sexpression -> expression ses1 .)
    ID              reduce using rule 42 (sexpression -> expression ses1 .)
    IF              reduce using rule 42 (sexpression -> expression ses1 .)
    PRINT           reduce using rule 42 (sexpression -> expression ses1 .)
    WHILE           reduce using rule 42 (sexpression -> expression ses1 .)
    RETURN          reduce using rule 42 (sexpression -> expression ses1 .)
    DRAWCIRCLE      reduce using rule 42 (sexpression -> expression ses1 .)
    DRAWSQUARE      reduce using rule 42 (sexpression -> expression ses1 .)
    DRAWTRIANGLE    reduce using rule 42 (sexpression -> expression ses1 .)
    DRAWLINE        reduce using rule 42 (sexpression -> expression ses1 .)
    DRAWPOLYGON     reduce using rule 42 (sexpression -> expression ses1 .)
    DRAWCURVE       reduce using rule 42 (sexpression -> expression ses1 .)
    RBRACKET        reduce using rule 42 (sexpression -> expression ses1 .)


state 120

    (44) ses1 -> AND . sexpression
    (42) sexpression -> . expression ses1
    (46) expression -> . exp exs1
    (58) exp -> . term exps1
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 64
    factor                         shift and go to state 66
    sexpression                    shift and go to state 164
    exp                            shift and go to state 71
    expression                     shift and go to state 73

state 121

    (45) ses1 -> OR . sexpression
    (42) sexpression -> . expression ses1
    (46) expression -> . exp exs1
    (58) exp -> . term exps1
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 64
    factor                         shift and go to state 66
    sexpression                    shift and go to state 165
    exp                            shift and go to state 71
    expression                     shift and go to state 73

state 122

    (43) ses1 -> empty .

    SEMICOLON       reduce using rule 43 (ses1 -> empty .)
    RPAREN          reduce using rule 43 (ses1 -> empty .)
    COMA            reduce using rule 43 (ses1 -> empty .)
    RARRAY          reduce using rule 43 (ses1 -> empty .)
    ID              reduce using rule 43 (ses1 -> empty .)
    IF              reduce using rule 43 (ses1 -> empty .)
    PRINT           reduce using rule 43 (ses1 -> empty .)
    WHILE           reduce using rule 43 (ses1 -> empty .)
    RETURN          reduce using rule 43 (ses1 -> empty .)
    DRAWCIRCLE      reduce using rule 43 (ses1 -> empty .)
    DRAWSQUARE      reduce using rule 43 (ses1 -> empty .)
    DRAWTRIANGLE    reduce using rule 43 (ses1 -> empty .)
    DRAWLINE        reduce using rule 43 (ses1 -> empty .)
    DRAWPOLYGON     reduce using rule 43 (ses1 -> empty .)
    DRAWCURVE       reduce using rule 43 (ses1 -> empty .)
    RBRACKET        reduce using rule 43 (ses1 -> empty .)


state 123

    (95) drawtriangle -> DRAWTRIANGLE LPAREN ssexpression . COMA ssexpression COMA color RPAREN SEMICOLON

    COMA            shift and go to state 166


state 124

    (84) cycle -> WHILE LPAREN ssexpression . RPAREN block

    RPAREN          shift and go to state 167


state 125

    (77) write -> PRINT LPAREN ssexpression . RPAREN

    RPAREN          shift and go to state 168


state 126

    (94) drawcircle -> DRAWCIRCLE LPAREN ssexpression . COMA ssexpression COMA color RPAREN SEMICOLON

    COMA            shift and go to state 169


state 127

    (93) drawsquare -> DRAWSQUARE LPAREN ssexpression . COMA ssexpression COMA color RPAREN SEMICOLON

    COMA            shift and go to state 170


state 128

    (92) drawline -> DRAWLINE LPAREN ssexpression . COMA ssexpression COMA ssexpression COMA ssexpression COMA color RPAREN SEMICOLON

    COMA            shift and go to state 171


state 129

    (76) read -> ID ASSIGN INPUT . SEMICOLON

    SEMICOLON       shift and go to state 172


state 130

    (37) ass1 -> LARRAY ssexpression . RARRAY

    RARRAY          shift and go to state 173


state 131

    (88) functioncall -> ID LPAREN fcs1 . RPAREN SEMICOLON

    RPAREN          shift and go to state 174


state 132

    (90) fcs1 -> ssexpression .
    (91) fcs1 -> ssexpression . COMA fcs1

    RPAREN          reduce using rule 90 (fcs1 -> ssexpression .)
    COMA            shift and go to state 175


state 133

    (89) fcs1 -> empty .

    RPAREN          reduce using rule 89 (fcs1 -> empty .)


state 134

    (35) assignment -> ID ass1 ASSIGN . ass2
    (38) ass2 -> . functioncall
    (39) ass2 -> . ssexpression
    (88) functioncall -> . ID LPAREN fcs1 RPAREN SEMICOLON
    (40) ssexpression -> . sexpression
    (41) ssexpression -> . NOT sexpression
    (42) sexpression -> . expression ses1
    (46) expression -> . exp exs1
    (58) exp -> . term exps1
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    ID              shift and go to state 139
    NOT             shift and go to state 69
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 64
    expression                     shift and go to state 73
    factor                         shift and go to state 66
    sexpression                    shift and go to state 67
    functioncall                   shift and go to state 178
    exp                            shift and go to state 71
    ssexpression                   shift and go to state 177
    ass2                           shift and go to state 176

state 135

    (68) condition -> IF cos1 RPAREN . block cos3
    (19) block -> . LBRACKET bls1 RBRACKET

    LBRACKET        shift and go to state 17

    block                          shift and go to state 179

state 136

    (72) cos2 -> functioncall .

    RPAREN          reduce using rule 72 (cos2 -> functioncall .)
    ID              reduce using rule 72 (cos2 -> functioncall .)
    IF              reduce using rule 72 (cos2 -> functioncall .)
    PRINT           reduce using rule 72 (cos2 -> functioncall .)
    WHILE           reduce using rule 72 (cos2 -> functioncall .)
    RETURN          reduce using rule 72 (cos2 -> functioncall .)
    DRAWCIRCLE      reduce using rule 72 (cos2 -> functioncall .)
    DRAWSQUARE      reduce using rule 72 (cos2 -> functioncall .)
    DRAWTRIANGLE    reduce using rule 72 (cos2 -> functioncall .)
    DRAWLINE        reduce using rule 72 (cos2 -> functioncall .)
    DRAWPOLYGON     reduce using rule 72 (cos2 -> functioncall .)
    DRAWCURVE       reduce using rule 72 (cos2 -> functioncall .)
    RBRACKET        reduce using rule 72 (cos2 -> functioncall .)


state 137

    (69) cos1 -> LPAREN cos2 .

    RPAREN          reduce using rule 69 (cos1 -> LPAREN cos2 .)
    ID              reduce using rule 69 (cos1 -> LPAREN cos2 .)
    IF              reduce using rule 69 (cos1 -> LPAREN cos2 .)
    PRINT           reduce using rule 69 (cos1 -> LPAREN cos2 .)
    WHILE           reduce using rule 69 (cos1 -> LPAREN cos2 .)
    RETURN          reduce using rule 69 (cos1 -> LPAREN cos2 .)
    DRAWCIRCLE      reduce using rule 69 (cos1 -> LPAREN cos2 .)
    DRAWSQUARE      reduce using rule 69 (cos1 -> LPAREN cos2 .)
    DRAWTRIANGLE    reduce using rule 69 (cos1 -> LPAREN cos2 .)
    DRAWLINE        reduce using rule 69 (cos1 -> LPAREN cos2 .)
    DRAWPOLYGON     reduce using rule 69 (cos1 -> LPAREN cos2 .)
    DRAWCURVE       reduce using rule 69 (cos1 -> LPAREN cos2 .)
    RBRACKET        reduce using rule 69 (cos1 -> LPAREN cos2 .)


state 138

    (71) cos2 -> ssexpression .

    RPAREN          reduce using rule 71 (cos2 -> ssexpression .)
    ID              reduce using rule 71 (cos2 -> ssexpression .)
    IF              reduce using rule 71 (cos2 -> ssexpression .)
    PRINT           reduce using rule 71 (cos2 -> ssexpression .)
    WHILE           reduce using rule 71 (cos2 -> ssexpression .)
    RETURN          reduce using rule 71 (cos2 -> ssexpression .)
    DRAWCIRCLE      reduce using rule 71 (cos2 -> ssexpression .)
    DRAWSQUARE      reduce using rule 71 (cos2 -> ssexpression .)
    DRAWTRIANGLE    reduce using rule 71 (cos2 -> ssexpression .)
    DRAWLINE        reduce using rule 71 (cos2 -> ssexpression .)
    DRAWPOLYGON     reduce using rule 71 (cos2 -> ssexpression .)
    DRAWCURVE       reduce using rule 71 (cos2 -> ssexpression .)
    RBRACKET        reduce using rule 71 (cos2 -> ssexpression .)


state 139

    (88) functioncall -> ID . LPAREN fcs1 RPAREN SEMICOLON

    LPAREN          shift and go to state 83


state 140

    (70) cos1 -> NOT cos2 .

    RPAREN          reduce using rule 70 (cos1 -> NOT cos2 .)
    ID              reduce using rule 70 (cos1 -> NOT cos2 .)
    IF              reduce using rule 70 (cos1 -> NOT cos2 .)
    PRINT           reduce using rule 70 (cos1 -> NOT cos2 .)
    WHILE           reduce using rule 70 (cos1 -> NOT cos2 .)
    RETURN          reduce using rule 70 (cos1 -> NOT cos2 .)
    DRAWCIRCLE      reduce using rule 70 (cos1 -> NOT cos2 .)
    DRAWSQUARE      reduce using rule 70 (cos1 -> NOT cos2 .)
    DRAWTRIANGLE    reduce using rule 70 (cos1 -> NOT cos2 .)
    DRAWLINE        reduce using rule 70 (cos1 -> NOT cos2 .)
    DRAWPOLYGON     reduce using rule 70 (cos1 -> NOT cos2 .)
    DRAWCURVE       reduce using rule 70 (cos1 -> NOT cos2 .)
    RBRACKET        reduce using rule 70 (cos1 -> NOT cos2 .)


state 141

    (97) drawpolygon -> DRAWPOLYGON LPAREN ssexpression . COMA ssexpression COMA color RPAREN SEMICOLON

    COMA            shift and go to state 180


state 142

    (96) drawcurve -> DRAWCURVE LPAREN ssexpression . COMA color RPAREN SEMICOLON

    COMA            shift and go to state 181


state 143

    (32) pas1 -> type . ID
    (33) pas1 -> type . ID COMA pas1

    ID              shift and go to state 182


state 144

    (30) parameter -> empty .

    RPAREN          reduce using rule 30 (parameter -> empty .)


state 145

    (85) function -> FUNC fus1 ID LPAREN parameter . RPAREN block

    RPAREN          shift and go to state 183


state 146

    (31) parameter -> pas1 .

    RPAREN          reduce using rule 31 (parameter -> pas1 .)


state 147

    (18) ars1 -> LARRAY CTEI RARRAY .

    ID              reduce using rule 18 (ars1 -> LARRAY CTEI RARRAY .)
    SEMICOLON       reduce using rule 18 (ars1 -> LARRAY CTEI RARRAY .)


state 148

    (6) vars -> VAR vas1 COLON type SEMICOLON vas1 .

    FUNC            reduce using rule 6 (vars -> VAR vas1 COLON type SEMICOLON vas1 .)
    LBRACKET        reduce using rule 6 (vars -> VAR vas1 COLON type SEMICOLON vas1 .)


state 149

    (60) exps1 -> PLUS term .

    GT              reduce using rule 60 (exps1 -> PLUS term .)
    LT              reduce using rule 60 (exps1 -> PLUS term .)
    GE              reduce using rule 60 (exps1 -> PLUS term .)
    LE              reduce using rule 60 (exps1 -> PLUS term .)
    EQUAL           reduce using rule 60 (exps1 -> PLUS term .)
    DIFFERENT       reduce using rule 60 (exps1 -> PLUS term .)
    AND             reduce using rule 60 (exps1 -> PLUS term .)
    OR              reduce using rule 60 (exps1 -> PLUS term .)
    SEMICOLON       reduce using rule 60 (exps1 -> PLUS term .)
    RPAREN          reduce using rule 60 (exps1 -> PLUS term .)
    COMA            reduce using rule 60 (exps1 -> PLUS term .)
    RARRAY          reduce using rule 60 (exps1 -> PLUS term .)
    ID              reduce using rule 60 (exps1 -> PLUS term .)
    IF              reduce using rule 60 (exps1 -> PLUS term .)
    PRINT           reduce using rule 60 (exps1 -> PLUS term .)
    WHILE           reduce using rule 60 (exps1 -> PLUS term .)
    RETURN          reduce using rule 60 (exps1 -> PLUS term .)
    DRAWCIRCLE      reduce using rule 60 (exps1 -> PLUS term .)
    DRAWSQUARE      reduce using rule 60 (exps1 -> PLUS term .)
    DRAWTRIANGLE    reduce using rule 60 (exps1 -> PLUS term .)
    DRAWLINE        reduce using rule 60 (exps1 -> PLUS term .)
    DRAWPOLYGON     reduce using rule 60 (exps1 -> PLUS term .)
    DRAWCURVE       reduce using rule 60 (exps1 -> PLUS term .)
    RBRACKET        reduce using rule 60 (exps1 -> PLUS term .)


state 150

    (61) exps1 -> MINUS term .

    GT              reduce using rule 61 (exps1 -> MINUS term .)
    LT              reduce using rule 61 (exps1 -> MINUS term .)
    GE              reduce using rule 61 (exps1 -> MINUS term .)
    LE              reduce using rule 61 (exps1 -> MINUS term .)
    EQUAL           reduce using rule 61 (exps1 -> MINUS term .)
    DIFFERENT       reduce using rule 61 (exps1 -> MINUS term .)
    AND             reduce using rule 61 (exps1 -> MINUS term .)
    OR              reduce using rule 61 (exps1 -> MINUS term .)
    SEMICOLON       reduce using rule 61 (exps1 -> MINUS term .)
    RPAREN          reduce using rule 61 (exps1 -> MINUS term .)
    COMA            reduce using rule 61 (exps1 -> MINUS term .)
    RARRAY          reduce using rule 61 (exps1 -> MINUS term .)
    ID              reduce using rule 61 (exps1 -> MINUS term .)
    IF              reduce using rule 61 (exps1 -> MINUS term .)
    PRINT           reduce using rule 61 (exps1 -> MINUS term .)
    WHILE           reduce using rule 61 (exps1 -> MINUS term .)
    RETURN          reduce using rule 61 (exps1 -> MINUS term .)
    DRAWCIRCLE      reduce using rule 61 (exps1 -> MINUS term .)
    DRAWSQUARE      reduce using rule 61 (exps1 -> MINUS term .)
    DRAWTRIANGLE    reduce using rule 61 (exps1 -> MINUS term .)
    DRAWLINE        reduce using rule 61 (exps1 -> MINUS term .)
    DRAWPOLYGON     reduce using rule 61 (exps1 -> MINUS term .)
    DRAWCURVE       reduce using rule 61 (exps1 -> MINUS term .)
    RBRACKET        reduce using rule 61 (exps1 -> MINUS term .)


state 151

    (98) factor -> LPAREN ssexpression RPAREN .

    TIMES           reduce using rule 98 (factor -> LPAREN ssexpression RPAREN .)
    DIVISION        reduce using rule 98 (factor -> LPAREN ssexpression RPAREN .)
    PLUS            reduce using rule 98 (factor -> LPAREN ssexpression RPAREN .)
    MINUS           reduce using rule 98 (factor -> LPAREN ssexpression RPAREN .)
    GT              reduce using rule 98 (factor -> LPAREN ssexpression RPAREN .)
    LT              reduce using rule 98 (factor -> LPAREN ssexpression RPAREN .)
    GE              reduce using rule 98 (factor -> LPAREN ssexpression RPAREN .)
    LE              reduce using rule 98 (factor -> LPAREN ssexpression RPAREN .)
    EQUAL           reduce using rule 98 (factor -> LPAREN ssexpression RPAREN .)
    DIFFERENT       reduce using rule 98 (factor -> LPAREN ssexpression RPAREN .)
    AND             reduce using rule 98 (factor -> LPAREN ssexpression RPAREN .)
    OR              reduce using rule 98 (factor -> LPAREN ssexpression RPAREN .)
    COMA            reduce using rule 98 (factor -> LPAREN ssexpression RPAREN .)
    SEMICOLON       reduce using rule 98 (factor -> LPAREN ssexpression RPAREN .)
    RPAREN          reduce using rule 98 (factor -> LPAREN ssexpression RPAREN .)
    RARRAY          reduce using rule 98 (factor -> LPAREN ssexpression RPAREN .)
    ID              reduce using rule 98 (factor -> LPAREN ssexpression RPAREN .)
    IF              reduce using rule 98 (factor -> LPAREN ssexpression RPAREN .)
    PRINT           reduce using rule 98 (factor -> LPAREN ssexpression RPAREN .)
    WHILE           reduce using rule 98 (factor -> LPAREN ssexpression RPAREN .)
    RETURN          reduce using rule 98 (factor -> LPAREN ssexpression RPAREN .)
    DRAWCIRCLE      reduce using rule 98 (factor -> LPAREN ssexpression RPAREN .)
    DRAWSQUARE      reduce using rule 98 (factor -> LPAREN ssexpression RPAREN .)
    DRAWTRIANGLE    reduce using rule 98 (factor -> LPAREN ssexpression RPAREN .)
    DRAWLINE        reduce using rule 98 (factor -> LPAREN ssexpression RPAREN .)
    DRAWPOLYGON     reduce using rule 98 (factor -> LPAREN ssexpression RPAREN .)
    DRAWCURVE       reduce using rule 98 (factor -> LPAREN ssexpression RPAREN .)
    RBRACKET        reduce using rule 98 (factor -> LPAREN ssexpression RPAREN .)


state 152

    (57) tes1 -> DIVISION term .

    PLUS            reduce using rule 57 (tes1 -> DIVISION term .)
    MINUS           reduce using rule 57 (tes1 -> DIVISION term .)
    GT              reduce using rule 57 (tes1 -> DIVISION term .)
    LT              reduce using rule 57 (tes1 -> DIVISION term .)
    GE              reduce using rule 57 (tes1 -> DIVISION term .)
    LE              reduce using rule 57 (tes1 -> DIVISION term .)
    EQUAL           reduce using rule 57 (tes1 -> DIVISION term .)
    DIFFERENT       reduce using rule 57 (tes1 -> DIVISION term .)
    AND             reduce using rule 57 (tes1 -> DIVISION term .)
    OR              reduce using rule 57 (tes1 -> DIVISION term .)
    SEMICOLON       reduce using rule 57 (tes1 -> DIVISION term .)
    RPAREN          reduce using rule 57 (tes1 -> DIVISION term .)
    COMA            reduce using rule 57 (tes1 -> DIVISION term .)
    RARRAY          reduce using rule 57 (tes1 -> DIVISION term .)
    ID              reduce using rule 57 (tes1 -> DIVISION term .)
    IF              reduce using rule 57 (tes1 -> DIVISION term .)
    PRINT           reduce using rule 57 (tes1 -> DIVISION term .)
    WHILE           reduce using rule 57 (tes1 -> DIVISION term .)
    RETURN          reduce using rule 57 (tes1 -> DIVISION term .)
    DRAWCIRCLE      reduce using rule 57 (tes1 -> DIVISION term .)
    DRAWSQUARE      reduce using rule 57 (tes1 -> DIVISION term .)
    DRAWTRIANGLE    reduce using rule 57 (tes1 -> DIVISION term .)
    DRAWLINE        reduce using rule 57 (tes1 -> DIVISION term .)
    DRAWPOLYGON     reduce using rule 57 (tes1 -> DIVISION term .)
    DRAWCURVE       reduce using rule 57 (tes1 -> DIVISION term .)
    RBRACKET        reduce using rule 57 (tes1 -> DIVISION term .)


state 153

    (56) tes1 -> TIMES term .

    PLUS            reduce using rule 56 (tes1 -> TIMES term .)
    MINUS           reduce using rule 56 (tes1 -> TIMES term .)
    GT              reduce using rule 56 (tes1 -> TIMES term .)
    LT              reduce using rule 56 (tes1 -> TIMES term .)
    GE              reduce using rule 56 (tes1 -> TIMES term .)
    LE              reduce using rule 56 (tes1 -> TIMES term .)
    EQUAL           reduce using rule 56 (tes1 -> TIMES term .)
    DIFFERENT       reduce using rule 56 (tes1 -> TIMES term .)
    AND             reduce using rule 56 (tes1 -> TIMES term .)
    OR              reduce using rule 56 (tes1 -> TIMES term .)
    SEMICOLON       reduce using rule 56 (tes1 -> TIMES term .)
    RPAREN          reduce using rule 56 (tes1 -> TIMES term .)
    COMA            reduce using rule 56 (tes1 -> TIMES term .)
    RARRAY          reduce using rule 56 (tes1 -> TIMES term .)
    ID              reduce using rule 56 (tes1 -> TIMES term .)
    IF              reduce using rule 56 (tes1 -> TIMES term .)
    PRINT           reduce using rule 56 (tes1 -> TIMES term .)
    WHILE           reduce using rule 56 (tes1 -> TIMES term .)
    RETURN          reduce using rule 56 (tes1 -> TIMES term .)
    DRAWCIRCLE      reduce using rule 56 (tes1 -> TIMES term .)
    DRAWSQUARE      reduce using rule 56 (tes1 -> TIMES term .)
    DRAWTRIANGLE    reduce using rule 56 (tes1 -> TIMES term .)
    DRAWLINE        reduce using rule 56 (tes1 -> TIMES term .)
    DRAWPOLYGON     reduce using rule 56 (tes1 -> TIMES term .)
    DRAWCURVE       reduce using rule 56 (tes1 -> TIMES term .)
    RBRACKET        reduce using rule 56 (tes1 -> TIMES term .)


state 154

    (101) fas1 -> ID fas2 .

    TIMES           reduce using rule 101 (fas1 -> ID fas2 .)
    DIVISION        reduce using rule 101 (fas1 -> ID fas2 .)
    PLUS            reduce using rule 101 (fas1 -> ID fas2 .)
    MINUS           reduce using rule 101 (fas1 -> ID fas2 .)
    GT              reduce using rule 101 (fas1 -> ID fas2 .)
    LT              reduce using rule 101 (fas1 -> ID fas2 .)
    GE              reduce using rule 101 (fas1 -> ID fas2 .)
    LE              reduce using rule 101 (fas1 -> ID fas2 .)
    EQUAL           reduce using rule 101 (fas1 -> ID fas2 .)
    DIFFERENT       reduce using rule 101 (fas1 -> ID fas2 .)
    AND             reduce using rule 101 (fas1 -> ID fas2 .)
    OR              reduce using rule 101 (fas1 -> ID fas2 .)
    SEMICOLON       reduce using rule 101 (fas1 -> ID fas2 .)
    RPAREN          reduce using rule 101 (fas1 -> ID fas2 .)
    COMA            reduce using rule 101 (fas1 -> ID fas2 .)
    RARRAY          reduce using rule 101 (fas1 -> ID fas2 .)
    ID              reduce using rule 101 (fas1 -> ID fas2 .)
    IF              reduce using rule 101 (fas1 -> ID fas2 .)
    PRINT           reduce using rule 101 (fas1 -> ID fas2 .)
    WHILE           reduce using rule 101 (fas1 -> ID fas2 .)
    RETURN          reduce using rule 101 (fas1 -> ID fas2 .)
    DRAWCIRCLE      reduce using rule 101 (fas1 -> ID fas2 .)
    DRAWSQUARE      reduce using rule 101 (fas1 -> ID fas2 .)
    DRAWTRIANGLE    reduce using rule 101 (fas1 -> ID fas2 .)
    DRAWLINE        reduce using rule 101 (fas1 -> ID fas2 .)
    DRAWPOLYGON     reduce using rule 101 (fas1 -> ID fas2 .)
    DRAWCURVE       reduce using rule 101 (fas1 -> ID fas2 .)
    RBRACKET        reduce using rule 101 (fas1 -> ID fas2 .)


state 155

    (104) fas2 -> LARRAY . exp RARRAY
    (58) exp -> . term exps1
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 64
    exp                            shift and go to state 184
    factor                         shift and go to state 66

state 156

    (105) fas2 -> LPAREN . exp RPAREN
    (58) exp -> . term exps1
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 64
    exp                            shift and go to state 185
    factor                         shift and go to state 66

state 157

    (106) fas2 -> empty .

    TIMES           reduce using rule 106 (fas2 -> empty .)
    DIVISION        reduce using rule 106 (fas2 -> empty .)
    PLUS            reduce using rule 106 (fas2 -> empty .)
    MINUS           reduce using rule 106 (fas2 -> empty .)
    GT              reduce using rule 106 (fas2 -> empty .)
    LT              reduce using rule 106 (fas2 -> empty .)
    GE              reduce using rule 106 (fas2 -> empty .)
    LE              reduce using rule 106 (fas2 -> empty .)
    EQUAL           reduce using rule 106 (fas2 -> empty .)
    DIFFERENT       reduce using rule 106 (fas2 -> empty .)
    AND             reduce using rule 106 (fas2 -> empty .)
    OR              reduce using rule 106 (fas2 -> empty .)
    SEMICOLON       reduce using rule 106 (fas2 -> empty .)
    RPAREN          reduce using rule 106 (fas2 -> empty .)
    COMA            reduce using rule 106 (fas2 -> empty .)
    RARRAY          reduce using rule 106 (fas2 -> empty .)
    ID              reduce using rule 106 (fas2 -> empty .)
    IF              reduce using rule 106 (fas2 -> empty .)
    PRINT           reduce using rule 106 (fas2 -> empty .)
    WHILE           reduce using rule 106 (fas2 -> empty .)
    RETURN          reduce using rule 106 (fas2 -> empty .)
    DRAWCIRCLE      reduce using rule 106 (fas2 -> empty .)
    DRAWSQUARE      reduce using rule 106 (fas2 -> empty .)
    DRAWTRIANGLE    reduce using rule 106 (fas2 -> empty .)
    DRAWLINE        reduce using rule 106 (fas2 -> empty .)
    DRAWPOLYGON     reduce using rule 106 (fas2 -> empty .)
    DRAWCURVE       reduce using rule 106 (fas2 -> empty .)
    RBRACKET        reduce using rule 106 (fas2 -> empty .)


state 158

    (53) exs1 -> DIFFERENT exp .

    AND             reduce using rule 53 (exs1 -> DIFFERENT exp .)
    OR              reduce using rule 53 (exs1 -> DIFFERENT exp .)
    SEMICOLON       reduce using rule 53 (exs1 -> DIFFERENT exp .)
    RPAREN          reduce using rule 53 (exs1 -> DIFFERENT exp .)
    COMA            reduce using rule 53 (exs1 -> DIFFERENT exp .)
    RARRAY          reduce using rule 53 (exs1 -> DIFFERENT exp .)
    ID              reduce using rule 53 (exs1 -> DIFFERENT exp .)
    IF              reduce using rule 53 (exs1 -> DIFFERENT exp .)
    PRINT           reduce using rule 53 (exs1 -> DIFFERENT exp .)
    WHILE           reduce using rule 53 (exs1 -> DIFFERENT exp .)
    RETURN          reduce using rule 53 (exs1 -> DIFFERENT exp .)
    DRAWCIRCLE      reduce using rule 53 (exs1 -> DIFFERENT exp .)
    DRAWSQUARE      reduce using rule 53 (exs1 -> DIFFERENT exp .)
    DRAWTRIANGLE    reduce using rule 53 (exs1 -> DIFFERENT exp .)
    DRAWLINE        reduce using rule 53 (exs1 -> DIFFERENT exp .)
    DRAWPOLYGON     reduce using rule 53 (exs1 -> DIFFERENT exp .)
    DRAWCURVE       reduce using rule 53 (exs1 -> DIFFERENT exp .)
    RBRACKET        reduce using rule 53 (exs1 -> DIFFERENT exp .)


state 159

    (48) exs1 -> GT exp .

    AND             reduce using rule 48 (exs1 -> GT exp .)
    OR              reduce using rule 48 (exs1 -> GT exp .)
    SEMICOLON       reduce using rule 48 (exs1 -> GT exp .)
    RPAREN          reduce using rule 48 (exs1 -> GT exp .)
    COMA            reduce using rule 48 (exs1 -> GT exp .)
    RARRAY          reduce using rule 48 (exs1 -> GT exp .)
    ID              reduce using rule 48 (exs1 -> GT exp .)
    IF              reduce using rule 48 (exs1 -> GT exp .)
    PRINT           reduce using rule 48 (exs1 -> GT exp .)
    WHILE           reduce using rule 48 (exs1 -> GT exp .)
    RETURN          reduce using rule 48 (exs1 -> GT exp .)
    DRAWCIRCLE      reduce using rule 48 (exs1 -> GT exp .)
    DRAWSQUARE      reduce using rule 48 (exs1 -> GT exp .)
    DRAWTRIANGLE    reduce using rule 48 (exs1 -> GT exp .)
    DRAWLINE        reduce using rule 48 (exs1 -> GT exp .)
    DRAWPOLYGON     reduce using rule 48 (exs1 -> GT exp .)
    DRAWCURVE       reduce using rule 48 (exs1 -> GT exp .)
    RBRACKET        reduce using rule 48 (exs1 -> GT exp .)


state 160

    (50) exs1 -> GE exp .

    AND             reduce using rule 50 (exs1 -> GE exp .)
    OR              reduce using rule 50 (exs1 -> GE exp .)
    SEMICOLON       reduce using rule 50 (exs1 -> GE exp .)
    RPAREN          reduce using rule 50 (exs1 -> GE exp .)
    COMA            reduce using rule 50 (exs1 -> GE exp .)
    RARRAY          reduce using rule 50 (exs1 -> GE exp .)
    ID              reduce using rule 50 (exs1 -> GE exp .)
    IF              reduce using rule 50 (exs1 -> GE exp .)
    PRINT           reduce using rule 50 (exs1 -> GE exp .)
    WHILE           reduce using rule 50 (exs1 -> GE exp .)
    RETURN          reduce using rule 50 (exs1 -> GE exp .)
    DRAWCIRCLE      reduce using rule 50 (exs1 -> GE exp .)
    DRAWSQUARE      reduce using rule 50 (exs1 -> GE exp .)
    DRAWTRIANGLE    reduce using rule 50 (exs1 -> GE exp .)
    DRAWLINE        reduce using rule 50 (exs1 -> GE exp .)
    DRAWPOLYGON     reduce using rule 50 (exs1 -> GE exp .)
    DRAWCURVE       reduce using rule 50 (exs1 -> GE exp .)
    RBRACKET        reduce using rule 50 (exs1 -> GE exp .)


state 161

    (52) exs1 -> EQUAL exp .

    AND             reduce using rule 52 (exs1 -> EQUAL exp .)
    OR              reduce using rule 52 (exs1 -> EQUAL exp .)
    SEMICOLON       reduce using rule 52 (exs1 -> EQUAL exp .)
    RPAREN          reduce using rule 52 (exs1 -> EQUAL exp .)
    COMA            reduce using rule 52 (exs1 -> EQUAL exp .)
    RARRAY          reduce using rule 52 (exs1 -> EQUAL exp .)
    ID              reduce using rule 52 (exs1 -> EQUAL exp .)
    IF              reduce using rule 52 (exs1 -> EQUAL exp .)
    PRINT           reduce using rule 52 (exs1 -> EQUAL exp .)
    WHILE           reduce using rule 52 (exs1 -> EQUAL exp .)
    RETURN          reduce using rule 52 (exs1 -> EQUAL exp .)
    DRAWCIRCLE      reduce using rule 52 (exs1 -> EQUAL exp .)
    DRAWSQUARE      reduce using rule 52 (exs1 -> EQUAL exp .)
    DRAWTRIANGLE    reduce using rule 52 (exs1 -> EQUAL exp .)
    DRAWLINE        reduce using rule 52 (exs1 -> EQUAL exp .)
    DRAWPOLYGON     reduce using rule 52 (exs1 -> EQUAL exp .)
    DRAWCURVE       reduce using rule 52 (exs1 -> EQUAL exp .)
    RBRACKET        reduce using rule 52 (exs1 -> EQUAL exp .)


state 162

    (49) exs1 -> LT exp .

    AND             reduce using rule 49 (exs1 -> LT exp .)
    OR              reduce using rule 49 (exs1 -> LT exp .)
    SEMICOLON       reduce using rule 49 (exs1 -> LT exp .)
    RPAREN          reduce using rule 49 (exs1 -> LT exp .)
    COMA            reduce using rule 49 (exs1 -> LT exp .)
    RARRAY          reduce using rule 49 (exs1 -> LT exp .)
    ID              reduce using rule 49 (exs1 -> LT exp .)
    IF              reduce using rule 49 (exs1 -> LT exp .)
    PRINT           reduce using rule 49 (exs1 -> LT exp .)
    WHILE           reduce using rule 49 (exs1 -> LT exp .)
    RETURN          reduce using rule 49 (exs1 -> LT exp .)
    DRAWCIRCLE      reduce using rule 49 (exs1 -> LT exp .)
    DRAWSQUARE      reduce using rule 49 (exs1 -> LT exp .)
    DRAWTRIANGLE    reduce using rule 49 (exs1 -> LT exp .)
    DRAWLINE        reduce using rule 49 (exs1 -> LT exp .)
    DRAWPOLYGON     reduce using rule 49 (exs1 -> LT exp .)
    DRAWCURVE       reduce using rule 49 (exs1 -> LT exp .)
    RBRACKET        reduce using rule 49 (exs1 -> LT exp .)


state 163

    (51) exs1 -> LE exp .

    AND             reduce using rule 51 (exs1 -> LE exp .)
    OR              reduce using rule 51 (exs1 -> LE exp .)
    SEMICOLON       reduce using rule 51 (exs1 -> LE exp .)
    RPAREN          reduce using rule 51 (exs1 -> LE exp .)
    COMA            reduce using rule 51 (exs1 -> LE exp .)
    RARRAY          reduce using rule 51 (exs1 -> LE exp .)
    ID              reduce using rule 51 (exs1 -> LE exp .)
    IF              reduce using rule 51 (exs1 -> LE exp .)
    PRINT           reduce using rule 51 (exs1 -> LE exp .)
    WHILE           reduce using rule 51 (exs1 -> LE exp .)
    RETURN          reduce using rule 51 (exs1 -> LE exp .)
    DRAWCIRCLE      reduce using rule 51 (exs1 -> LE exp .)
    DRAWSQUARE      reduce using rule 51 (exs1 -> LE exp .)
    DRAWTRIANGLE    reduce using rule 51 (exs1 -> LE exp .)
    DRAWLINE        reduce using rule 51 (exs1 -> LE exp .)
    DRAWPOLYGON     reduce using rule 51 (exs1 -> LE exp .)
    DRAWCURVE       reduce using rule 51 (exs1 -> LE exp .)
    RBRACKET        reduce using rule 51 (exs1 -> LE exp .)


state 164

    (44) ses1 -> AND sexpression .

    SEMICOLON       reduce using rule 44 (ses1 -> AND sexpression .)
    RPAREN          reduce using rule 44 (ses1 -> AND sexpression .)
    COMA            reduce using rule 44 (ses1 -> AND sexpression .)
    RARRAY          reduce using rule 44 (ses1 -> AND sexpression .)
    ID              reduce using rule 44 (ses1 -> AND sexpression .)
    IF              reduce using rule 44 (ses1 -> AND sexpression .)
    PRINT           reduce using rule 44 (ses1 -> AND sexpression .)
    WHILE           reduce using rule 44 (ses1 -> AND sexpression .)
    RETURN          reduce using rule 44 (ses1 -> AND sexpression .)
    DRAWCIRCLE      reduce using rule 44 (ses1 -> AND sexpression .)
    DRAWSQUARE      reduce using rule 44 (ses1 -> AND sexpression .)
    DRAWTRIANGLE    reduce using rule 44 (ses1 -> AND sexpression .)
    DRAWLINE        reduce using rule 44 (ses1 -> AND sexpression .)
    DRAWPOLYGON     reduce using rule 44 (ses1 -> AND sexpression .)
    DRAWCURVE       reduce using rule 44 (ses1 -> AND sexpression .)
    RBRACKET        reduce using rule 44 (ses1 -> AND sexpression .)


state 165

    (45) ses1 -> OR sexpression .

    SEMICOLON       reduce using rule 45 (ses1 -> OR sexpression .)
    RPAREN          reduce using rule 45 (ses1 -> OR sexpression .)
    COMA            reduce using rule 45 (ses1 -> OR sexpression .)
    RARRAY          reduce using rule 45 (ses1 -> OR sexpression .)
    ID              reduce using rule 45 (ses1 -> OR sexpression .)
    IF              reduce using rule 45 (ses1 -> OR sexpression .)
    PRINT           reduce using rule 45 (ses1 -> OR sexpression .)
    WHILE           reduce using rule 45 (ses1 -> OR sexpression .)
    RETURN          reduce using rule 45 (ses1 -> OR sexpression .)
    DRAWCIRCLE      reduce using rule 45 (ses1 -> OR sexpression .)
    DRAWSQUARE      reduce using rule 45 (ses1 -> OR sexpression .)
    DRAWTRIANGLE    reduce using rule 45 (ses1 -> OR sexpression .)
    DRAWLINE        reduce using rule 45 (ses1 -> OR sexpression .)
    DRAWPOLYGON     reduce using rule 45 (ses1 -> OR sexpression .)
    DRAWCURVE       reduce using rule 45 (ses1 -> OR sexpression .)
    RBRACKET        reduce using rule 45 (ses1 -> OR sexpression .)


state 166

    (95) drawtriangle -> DRAWTRIANGLE LPAREN ssexpression COMA . ssexpression COMA color RPAREN SEMICOLON
    (40) ssexpression -> . sexpression
    (41) ssexpression -> . NOT sexpression
    (42) sexpression -> . expression ses1
    (46) expression -> . exp exs1
    (58) exp -> . term exps1
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    NOT             shift and go to state 69
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 64
    factor                         shift and go to state 66
    sexpression                    shift and go to state 67
    exp                            shift and go to state 71
    ssexpression                   shift and go to state 186
    expression                     shift and go to state 73

state 167

    (84) cycle -> WHILE LPAREN ssexpression RPAREN . block
    (19) block -> . LBRACKET bls1 RBRACKET

    LBRACKET        shift and go to state 17

    block                          shift and go to state 187

state 168

    (77) write -> PRINT LPAREN ssexpression RPAREN .

    ID              reduce using rule 77 (write -> PRINT LPAREN ssexpression RPAREN .)
    IF              reduce using rule 77 (write -> PRINT LPAREN ssexpression RPAREN .)
    PRINT           reduce using rule 77 (write -> PRINT LPAREN ssexpression RPAREN .)
    WHILE           reduce using rule 77 (write -> PRINT LPAREN ssexpression RPAREN .)
    RETURN          reduce using rule 77 (write -> PRINT LPAREN ssexpression RPAREN .)
    DRAWCIRCLE      reduce using rule 77 (write -> PRINT LPAREN ssexpression RPAREN .)
    DRAWSQUARE      reduce using rule 77 (write -> PRINT LPAREN ssexpression RPAREN .)
    DRAWTRIANGLE    reduce using rule 77 (write -> PRINT LPAREN ssexpression RPAREN .)
    DRAWLINE        reduce using rule 77 (write -> PRINT LPAREN ssexpression RPAREN .)
    DRAWPOLYGON     reduce using rule 77 (write -> PRINT LPAREN ssexpression RPAREN .)
    DRAWCURVE       reduce using rule 77 (write -> PRINT LPAREN ssexpression RPAREN .)
    RBRACKET        reduce using rule 77 (write -> PRINT LPAREN ssexpression RPAREN .)


state 169

    (94) drawcircle -> DRAWCIRCLE LPAREN ssexpression COMA . ssexpression COMA color RPAREN SEMICOLON
    (40) ssexpression -> . sexpression
    (41) ssexpression -> . NOT sexpression
    (42) sexpression -> . expression ses1
    (46) expression -> . exp exs1
    (58) exp -> . term exps1
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    NOT             shift and go to state 69
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 64
    factor                         shift and go to state 66
    sexpression                    shift and go to state 67
    exp                            shift and go to state 71
    ssexpression                   shift and go to state 188
    expression                     shift and go to state 73

state 170

    (93) drawsquare -> DRAWSQUARE LPAREN ssexpression COMA . ssexpression COMA color RPAREN SEMICOLON
    (40) ssexpression -> . sexpression
    (41) ssexpression -> . NOT sexpression
    (42) sexpression -> . expression ses1
    (46) expression -> . exp exs1
    (58) exp -> . term exps1
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    NOT             shift and go to state 69
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 64
    factor                         shift and go to state 66
    sexpression                    shift and go to state 67
    exp                            shift and go to state 71
    ssexpression                   shift and go to state 189
    expression                     shift and go to state 73

state 171

    (92) drawline -> DRAWLINE LPAREN ssexpression COMA . ssexpression COMA ssexpression COMA ssexpression COMA color RPAREN SEMICOLON
    (40) ssexpression -> . sexpression
    (41) ssexpression -> . NOT sexpression
    (42) sexpression -> . expression ses1
    (46) expression -> . exp exs1
    (58) exp -> . term exps1
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    NOT             shift and go to state 69
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 64
    factor                         shift and go to state 66
    sexpression                    shift and go to state 67
    exp                            shift and go to state 71
    ssexpression                   shift and go to state 190
    expression                     shift and go to state 73

state 172

    (76) read -> ID ASSIGN INPUT SEMICOLON .

    ID              reduce using rule 76 (read -> ID ASSIGN INPUT SEMICOLON .)
    IF              reduce using rule 76 (read -> ID ASSIGN INPUT SEMICOLON .)
    PRINT           reduce using rule 76 (read -> ID ASSIGN INPUT SEMICOLON .)
    WHILE           reduce using rule 76 (read -> ID ASSIGN INPUT SEMICOLON .)
    RETURN          reduce using rule 76 (read -> ID ASSIGN INPUT SEMICOLON .)
    DRAWCIRCLE      reduce using rule 76 (read -> ID ASSIGN INPUT SEMICOLON .)
    DRAWSQUARE      reduce using rule 76 (read -> ID ASSIGN INPUT SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 76 (read -> ID ASSIGN INPUT SEMICOLON .)
    DRAWLINE        reduce using rule 76 (read -> ID ASSIGN INPUT SEMICOLON .)
    DRAWPOLYGON     reduce using rule 76 (read -> ID ASSIGN INPUT SEMICOLON .)
    DRAWCURVE       reduce using rule 76 (read -> ID ASSIGN INPUT SEMICOLON .)
    RBRACKET        reduce using rule 76 (read -> ID ASSIGN INPUT SEMICOLON .)


state 173

    (37) ass1 -> LARRAY ssexpression RARRAY .

    ASSIGN          reduce using rule 37 (ass1 -> LARRAY ssexpression RARRAY .)


state 174

    (88) functioncall -> ID LPAREN fcs1 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 191


state 175

    (91) fcs1 -> ssexpression COMA . fcs1
    (89) fcs1 -> . empty
    (90) fcs1 -> . ssexpression
    (91) fcs1 -> . ssexpression COMA fcs1
    (107) empty -> .
    (40) ssexpression -> . sexpression
    (41) ssexpression -> . NOT sexpression
    (42) sexpression -> . expression ses1
    (46) expression -> . exp exs1
    (58) exp -> . term exps1
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    RPAREN          reduce using rule 107 (empty -> .)
    NOT             shift and go to state 69
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 64
    factor                         shift and go to state 66
    sexpression                    shift and go to state 67
    fcs1                           shift and go to state 192
    exp                            shift and go to state 71
    ssexpression                   shift and go to state 132
    expression                     shift and go to state 73
    empty                          shift and go to state 133

state 176

    (35) assignment -> ID ass1 ASSIGN ass2 .

    ID              reduce using rule 35 (assignment -> ID ass1 ASSIGN ass2 .)
    IF              reduce using rule 35 (assignment -> ID ass1 ASSIGN ass2 .)
    PRINT           reduce using rule 35 (assignment -> ID ass1 ASSIGN ass2 .)
    WHILE           reduce using rule 35 (assignment -> ID ass1 ASSIGN ass2 .)
    RETURN          reduce using rule 35 (assignment -> ID ass1 ASSIGN ass2 .)
    DRAWCIRCLE      reduce using rule 35 (assignment -> ID ass1 ASSIGN ass2 .)
    DRAWSQUARE      reduce using rule 35 (assignment -> ID ass1 ASSIGN ass2 .)
    DRAWTRIANGLE    reduce using rule 35 (assignment -> ID ass1 ASSIGN ass2 .)
    DRAWLINE        reduce using rule 35 (assignment -> ID ass1 ASSIGN ass2 .)
    DRAWPOLYGON     reduce using rule 35 (assignment -> ID ass1 ASSIGN ass2 .)
    DRAWCURVE       reduce using rule 35 (assignment -> ID ass1 ASSIGN ass2 .)
    RBRACKET        reduce using rule 35 (assignment -> ID ass1 ASSIGN ass2 .)


state 177

    (39) ass2 -> ssexpression .

    ID              reduce using rule 39 (ass2 -> ssexpression .)
    IF              reduce using rule 39 (ass2 -> ssexpression .)
    PRINT           reduce using rule 39 (ass2 -> ssexpression .)
    WHILE           reduce using rule 39 (ass2 -> ssexpression .)
    RETURN          reduce using rule 39 (ass2 -> ssexpression .)
    DRAWCIRCLE      reduce using rule 39 (ass2 -> ssexpression .)
    DRAWSQUARE      reduce using rule 39 (ass2 -> ssexpression .)
    DRAWTRIANGLE    reduce using rule 39 (ass2 -> ssexpression .)
    DRAWLINE        reduce using rule 39 (ass2 -> ssexpression .)
    DRAWPOLYGON     reduce using rule 39 (ass2 -> ssexpression .)
    DRAWCURVE       reduce using rule 39 (ass2 -> ssexpression .)
    RBRACKET        reduce using rule 39 (ass2 -> ssexpression .)


state 178

    (38) ass2 -> functioncall .

    ID              reduce using rule 38 (ass2 -> functioncall .)
    IF              reduce using rule 38 (ass2 -> functioncall .)
    PRINT           reduce using rule 38 (ass2 -> functioncall .)
    WHILE           reduce using rule 38 (ass2 -> functioncall .)
    RETURN          reduce using rule 38 (ass2 -> functioncall .)
    DRAWCIRCLE      reduce using rule 38 (ass2 -> functioncall .)
    DRAWSQUARE      reduce using rule 38 (ass2 -> functioncall .)
    DRAWTRIANGLE    reduce using rule 38 (ass2 -> functioncall .)
    DRAWLINE        reduce using rule 38 (ass2 -> functioncall .)
    DRAWPOLYGON     reduce using rule 38 (ass2 -> functioncall .)
    DRAWCURVE       reduce using rule 38 (ass2 -> functioncall .)
    RBRACKET        reduce using rule 38 (ass2 -> functioncall .)


state 179

    (68) condition -> IF cos1 RPAREN block . cos3
    (73) cos3 -> . empty
    (74) cos3 -> . ELSE block
    (75) cos3 -> . ELSEIF cos1
    (107) empty -> .

    ELSE            shift and go to state 193
    ELSEIF          shift and go to state 195
    ID              reduce using rule 107 (empty -> .)
    IF              reduce using rule 107 (empty -> .)
    PRINT           reduce using rule 107 (empty -> .)
    WHILE           reduce using rule 107 (empty -> .)
    RETURN          reduce using rule 107 (empty -> .)
    DRAWCIRCLE      reduce using rule 107 (empty -> .)
    DRAWSQUARE      reduce using rule 107 (empty -> .)
    DRAWTRIANGLE    reduce using rule 107 (empty -> .)
    DRAWLINE        reduce using rule 107 (empty -> .)
    DRAWPOLYGON     reduce using rule 107 (empty -> .)
    DRAWCURVE       reduce using rule 107 (empty -> .)
    RBRACKET        reduce using rule 107 (empty -> .)

    empty                          shift and go to state 196
    cos3                           shift and go to state 194

state 180

    (97) drawpolygon -> DRAWPOLYGON LPAREN ssexpression COMA . ssexpression COMA color RPAREN SEMICOLON
    (40) ssexpression -> . sexpression
    (41) ssexpression -> . NOT sexpression
    (42) sexpression -> . expression ses1
    (46) expression -> . exp exs1
    (58) exp -> . term exps1
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    NOT             shift and go to state 69
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 64
    factor                         shift and go to state 66
    sexpression                    shift and go to state 67
    exp                            shift and go to state 71
    ssexpression                   shift and go to state 197
    expression                     shift and go to state 73

state 181

    (96) drawcurve -> DRAWCURVE LPAREN ssexpression COMA . color RPAREN SEMICOLON
    (78) color -> . RED
    (79) color -> . GREEN
    (80) color -> . BLUE
    (81) color -> . YELLOW
    (82) color -> . BROWN
    (83) color -> . BLACK

    RED             shift and go to state 204
    GREEN           shift and go to state 201
    BLUE            shift and go to state 198
    YELLOW          shift and go to state 202
    BROWN           shift and go to state 199
    BLACK           shift and go to state 203

    color                          shift and go to state 200

state 182

    (32) pas1 -> type ID .
    (33) pas1 -> type ID . COMA pas1

    RPAREN          reduce using rule 32 (pas1 -> type ID .)
    COMA            shift and go to state 205


state 183

    (85) function -> FUNC fus1 ID LPAREN parameter RPAREN . block
    (19) block -> . LBRACKET bls1 RBRACKET

    LBRACKET        shift and go to state 17

    block                          shift and go to state 206

state 184

    (104) fas2 -> LARRAY exp . RARRAY

    RARRAY          shift and go to state 207


state 185

    (105) fas2 -> LPAREN exp . RPAREN

    RPAREN          shift and go to state 208


state 186

    (95) drawtriangle -> DRAWTRIANGLE LPAREN ssexpression COMA ssexpression . COMA color RPAREN SEMICOLON

    COMA            shift and go to state 209


state 187

    (84) cycle -> WHILE LPAREN ssexpression RPAREN block .

    ID              reduce using rule 84 (cycle -> WHILE LPAREN ssexpression RPAREN block .)
    IF              reduce using rule 84 (cycle -> WHILE LPAREN ssexpression RPAREN block .)
    PRINT           reduce using rule 84 (cycle -> WHILE LPAREN ssexpression RPAREN block .)
    WHILE           reduce using rule 84 (cycle -> WHILE LPAREN ssexpression RPAREN block .)
    RETURN          reduce using rule 84 (cycle -> WHILE LPAREN ssexpression RPAREN block .)
    DRAWCIRCLE      reduce using rule 84 (cycle -> WHILE LPAREN ssexpression RPAREN block .)
    DRAWSQUARE      reduce using rule 84 (cycle -> WHILE LPAREN ssexpression RPAREN block .)
    DRAWTRIANGLE    reduce using rule 84 (cycle -> WHILE LPAREN ssexpression RPAREN block .)
    DRAWLINE        reduce using rule 84 (cycle -> WHILE LPAREN ssexpression RPAREN block .)
    DRAWPOLYGON     reduce using rule 84 (cycle -> WHILE LPAREN ssexpression RPAREN block .)
    DRAWCURVE       reduce using rule 84 (cycle -> WHILE LPAREN ssexpression RPAREN block .)
    RBRACKET        reduce using rule 84 (cycle -> WHILE LPAREN ssexpression RPAREN block .)


state 188

    (94) drawcircle -> DRAWCIRCLE LPAREN ssexpression COMA ssexpression . COMA color RPAREN SEMICOLON

    COMA            shift and go to state 210


state 189

    (93) drawsquare -> DRAWSQUARE LPAREN ssexpression COMA ssexpression . COMA color RPAREN SEMICOLON

    COMA            shift and go to state 211


state 190

    (92) drawline -> DRAWLINE LPAREN ssexpression COMA ssexpression . COMA ssexpression COMA ssexpression COMA color RPAREN SEMICOLON

    COMA            shift and go to state 212


state 191

    (88) functioncall -> ID LPAREN fcs1 RPAREN SEMICOLON .

    ID              reduce using rule 88 (functioncall -> ID LPAREN fcs1 RPAREN SEMICOLON .)
    IF              reduce using rule 88 (functioncall -> ID LPAREN fcs1 RPAREN SEMICOLON .)
    PRINT           reduce using rule 88 (functioncall -> ID LPAREN fcs1 RPAREN SEMICOLON .)
    WHILE           reduce using rule 88 (functioncall -> ID LPAREN fcs1 RPAREN SEMICOLON .)
    RETURN          reduce using rule 88 (functioncall -> ID LPAREN fcs1 RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 88 (functioncall -> ID LPAREN fcs1 RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 88 (functioncall -> ID LPAREN fcs1 RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 88 (functioncall -> ID LPAREN fcs1 RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 88 (functioncall -> ID LPAREN fcs1 RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 88 (functioncall -> ID LPAREN fcs1 RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 88 (functioncall -> ID LPAREN fcs1 RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 88 (functioncall -> ID LPAREN fcs1 RPAREN SEMICOLON .)
    RPAREN          reduce using rule 88 (functioncall -> ID LPAREN fcs1 RPAREN SEMICOLON .)


state 192

    (91) fcs1 -> ssexpression COMA fcs1 .

    RPAREN          reduce using rule 91 (fcs1 -> ssexpression COMA fcs1 .)


state 193

    (74) cos3 -> ELSE . block
    (19) block -> . LBRACKET bls1 RBRACKET

    LBRACKET        shift and go to state 17

    block                          shift and go to state 213

state 194

    (68) condition -> IF cos1 RPAREN block cos3 .

    ID              reduce using rule 68 (condition -> IF cos1 RPAREN block cos3 .)
    IF              reduce using rule 68 (condition -> IF cos1 RPAREN block cos3 .)
    PRINT           reduce using rule 68 (condition -> IF cos1 RPAREN block cos3 .)
    WHILE           reduce using rule 68 (condition -> IF cos1 RPAREN block cos3 .)
    RETURN          reduce using rule 68 (condition -> IF cos1 RPAREN block cos3 .)
    DRAWCIRCLE      reduce using rule 68 (condition -> IF cos1 RPAREN block cos3 .)
    DRAWSQUARE      reduce using rule 68 (condition -> IF cos1 RPAREN block cos3 .)
    DRAWTRIANGLE    reduce using rule 68 (condition -> IF cos1 RPAREN block cos3 .)
    DRAWLINE        reduce using rule 68 (condition -> IF cos1 RPAREN block cos3 .)
    DRAWPOLYGON     reduce using rule 68 (condition -> IF cos1 RPAREN block cos3 .)
    DRAWCURVE       reduce using rule 68 (condition -> IF cos1 RPAREN block cos3 .)
    RBRACKET        reduce using rule 68 (condition -> IF cos1 RPAREN block cos3 .)


state 195

    (75) cos3 -> ELSEIF . cos1
    (69) cos1 -> . LPAREN cos2
    (70) cos1 -> . NOT cos2

    LPAREN          shift and go to state 87
    NOT             shift and go to state 88

    cos1                           shift and go to state 214

state 196

    (73) cos3 -> empty .

    ID              reduce using rule 73 (cos3 -> empty .)
    IF              reduce using rule 73 (cos3 -> empty .)
    PRINT           reduce using rule 73 (cos3 -> empty .)
    WHILE           reduce using rule 73 (cos3 -> empty .)
    RETURN          reduce using rule 73 (cos3 -> empty .)
    DRAWCIRCLE      reduce using rule 73 (cos3 -> empty .)
    DRAWSQUARE      reduce using rule 73 (cos3 -> empty .)
    DRAWTRIANGLE    reduce using rule 73 (cos3 -> empty .)
    DRAWLINE        reduce using rule 73 (cos3 -> empty .)
    DRAWPOLYGON     reduce using rule 73 (cos3 -> empty .)
    DRAWCURVE       reduce using rule 73 (cos3 -> empty .)
    RBRACKET        reduce using rule 73 (cos3 -> empty .)


state 197

    (97) drawpolygon -> DRAWPOLYGON LPAREN ssexpression COMA ssexpression . COMA color RPAREN SEMICOLON

    COMA            shift and go to state 215


state 198

    (80) color -> BLUE .

    RPAREN          reduce using rule 80 (color -> BLUE .)


state 199

    (82) color -> BROWN .

    RPAREN          reduce using rule 82 (color -> BROWN .)


state 200

    (96) drawcurve -> DRAWCURVE LPAREN ssexpression COMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 216


state 201

    (79) color -> GREEN .

    RPAREN          reduce using rule 79 (color -> GREEN .)


state 202

    (81) color -> YELLOW .

    RPAREN          reduce using rule 81 (color -> YELLOW .)


state 203

    (83) color -> BLACK .

    RPAREN          reduce using rule 83 (color -> BLACK .)


state 204

    (78) color -> RED .

    RPAREN          reduce using rule 78 (color -> RED .)


state 205

    (33) pas1 -> type ID COMA . pas1
    (32) pas1 -> . type ID
    (33) pas1 -> . type ID COMA pas1
    (10) type -> . INT_TYPE
    (11) type -> . FLOAT_TYPE
    (12) type -> . BOOL_TYPE
    (13) type -> . STRING_TYPE
    (14) type -> . array
    (15) array -> . INT_TYPE ars1
    (16) array -> . FLOAT_TYPE ars1
    (17) array -> . STRING_TYPE ars1

    INT_TYPE        shift and go to state 25
    FLOAT_TYPE      shift and go to state 22
    BOOL_TYPE       shift and go to state 24
    STRING_TYPE     shift and go to state 23

    array                          shift and go to state 26
    type                           shift and go to state 143
    pas1                           shift and go to state 217

state 206

    (85) function -> FUNC fus1 ID LPAREN parameter RPAREN block .

    FUNC            reduce using rule 85 (function -> FUNC fus1 ID LPAREN parameter RPAREN block .)
    LBRACKET        reduce using rule 85 (function -> FUNC fus1 ID LPAREN parameter RPAREN block .)


state 207

    (104) fas2 -> LARRAY exp RARRAY .

    TIMES           reduce using rule 104 (fas2 -> LARRAY exp RARRAY .)
    DIVISION        reduce using rule 104 (fas2 -> LARRAY exp RARRAY .)
    PLUS            reduce using rule 104 (fas2 -> LARRAY exp RARRAY .)
    MINUS           reduce using rule 104 (fas2 -> LARRAY exp RARRAY .)
    GT              reduce using rule 104 (fas2 -> LARRAY exp RARRAY .)
    LT              reduce using rule 104 (fas2 -> LARRAY exp RARRAY .)
    GE              reduce using rule 104 (fas2 -> LARRAY exp RARRAY .)
    LE              reduce using rule 104 (fas2 -> LARRAY exp RARRAY .)
    EQUAL           reduce using rule 104 (fas2 -> LARRAY exp RARRAY .)
    DIFFERENT       reduce using rule 104 (fas2 -> LARRAY exp RARRAY .)
    AND             reduce using rule 104 (fas2 -> LARRAY exp RARRAY .)
    OR              reduce using rule 104 (fas2 -> LARRAY exp RARRAY .)
    SEMICOLON       reduce using rule 104 (fas2 -> LARRAY exp RARRAY .)
    RPAREN          reduce using rule 104 (fas2 -> LARRAY exp RARRAY .)
    COMA            reduce using rule 104 (fas2 -> LARRAY exp RARRAY .)
    RARRAY          reduce using rule 104 (fas2 -> LARRAY exp RARRAY .)
    ID              reduce using rule 104 (fas2 -> LARRAY exp RARRAY .)
    IF              reduce using rule 104 (fas2 -> LARRAY exp RARRAY .)
    PRINT           reduce using rule 104 (fas2 -> LARRAY exp RARRAY .)
    WHILE           reduce using rule 104 (fas2 -> LARRAY exp RARRAY .)
    RETURN          reduce using rule 104 (fas2 -> LARRAY exp RARRAY .)
    DRAWCIRCLE      reduce using rule 104 (fas2 -> LARRAY exp RARRAY .)
    DRAWSQUARE      reduce using rule 104 (fas2 -> LARRAY exp RARRAY .)
    DRAWTRIANGLE    reduce using rule 104 (fas2 -> LARRAY exp RARRAY .)
    DRAWLINE        reduce using rule 104 (fas2 -> LARRAY exp RARRAY .)
    DRAWPOLYGON     reduce using rule 104 (fas2 -> LARRAY exp RARRAY .)
    DRAWCURVE       reduce using rule 104 (fas2 -> LARRAY exp RARRAY .)
    RBRACKET        reduce using rule 104 (fas2 -> LARRAY exp RARRAY .)


state 208

    (105) fas2 -> LPAREN exp RPAREN .

    TIMES           reduce using rule 105 (fas2 -> LPAREN exp RPAREN .)
    DIVISION        reduce using rule 105 (fas2 -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 105 (fas2 -> LPAREN exp RPAREN .)
    MINUS           reduce using rule 105 (fas2 -> LPAREN exp RPAREN .)
    GT              reduce using rule 105 (fas2 -> LPAREN exp RPAREN .)
    LT              reduce using rule 105 (fas2 -> LPAREN exp RPAREN .)
    GE              reduce using rule 105 (fas2 -> LPAREN exp RPAREN .)
    LE              reduce using rule 105 (fas2 -> LPAREN exp RPAREN .)
    EQUAL           reduce using rule 105 (fas2 -> LPAREN exp RPAREN .)
    DIFFERENT       reduce using rule 105 (fas2 -> LPAREN exp RPAREN .)
    AND             reduce using rule 105 (fas2 -> LPAREN exp RPAREN .)
    OR              reduce using rule 105 (fas2 -> LPAREN exp RPAREN .)
    SEMICOLON       reduce using rule 105 (fas2 -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 105 (fas2 -> LPAREN exp RPAREN .)
    COMA            reduce using rule 105 (fas2 -> LPAREN exp RPAREN .)
    RARRAY          reduce using rule 105 (fas2 -> LPAREN exp RPAREN .)
    ID              reduce using rule 105 (fas2 -> LPAREN exp RPAREN .)
    IF              reduce using rule 105 (fas2 -> LPAREN exp RPAREN .)
    PRINT           reduce using rule 105 (fas2 -> LPAREN exp RPAREN .)
    WHILE           reduce using rule 105 (fas2 -> LPAREN exp RPAREN .)
    RETURN          reduce using rule 105 (fas2 -> LPAREN exp RPAREN .)
    DRAWCIRCLE      reduce using rule 105 (fas2 -> LPAREN exp RPAREN .)
    DRAWSQUARE      reduce using rule 105 (fas2 -> LPAREN exp RPAREN .)
    DRAWTRIANGLE    reduce using rule 105 (fas2 -> LPAREN exp RPAREN .)
    DRAWLINE        reduce using rule 105 (fas2 -> LPAREN exp RPAREN .)
    DRAWPOLYGON     reduce using rule 105 (fas2 -> LPAREN exp RPAREN .)
    DRAWCURVE       reduce using rule 105 (fas2 -> LPAREN exp RPAREN .)
    RBRACKET        reduce using rule 105 (fas2 -> LPAREN exp RPAREN .)


state 209

    (95) drawtriangle -> DRAWTRIANGLE LPAREN ssexpression COMA ssexpression COMA . color RPAREN SEMICOLON
    (78) color -> . RED
    (79) color -> . GREEN
    (80) color -> . BLUE
    (81) color -> . YELLOW
    (82) color -> . BROWN
    (83) color -> . BLACK

    RED             shift and go to state 204
    GREEN           shift and go to state 201
    BLUE            shift and go to state 198
    YELLOW          shift and go to state 202
    BROWN           shift and go to state 199
    BLACK           shift and go to state 203

    color                          shift and go to state 218

state 210

    (94) drawcircle -> DRAWCIRCLE LPAREN ssexpression COMA ssexpression COMA . color RPAREN SEMICOLON
    (78) color -> . RED
    (79) color -> . GREEN
    (80) color -> . BLUE
    (81) color -> . YELLOW
    (82) color -> . BROWN
    (83) color -> . BLACK

    RED             shift and go to state 204
    GREEN           shift and go to state 201
    BLUE            shift and go to state 198
    YELLOW          shift and go to state 202
    BROWN           shift and go to state 199
    BLACK           shift and go to state 203

    color                          shift and go to state 219

state 211

    (93) drawsquare -> DRAWSQUARE LPAREN ssexpression COMA ssexpression COMA . color RPAREN SEMICOLON
    (78) color -> . RED
    (79) color -> . GREEN
    (80) color -> . BLUE
    (81) color -> . YELLOW
    (82) color -> . BROWN
    (83) color -> . BLACK

    RED             shift and go to state 204
    GREEN           shift and go to state 201
    BLUE            shift and go to state 198
    YELLOW          shift and go to state 202
    BROWN           shift and go to state 199
    BLACK           shift and go to state 203

    color                          shift and go to state 220

state 212

    (92) drawline -> DRAWLINE LPAREN ssexpression COMA ssexpression COMA . ssexpression COMA ssexpression COMA color RPAREN SEMICOLON
    (40) ssexpression -> . sexpression
    (41) ssexpression -> . NOT sexpression
    (42) sexpression -> . expression ses1
    (46) expression -> . exp exs1
    (58) exp -> . term exps1
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    NOT             shift and go to state 69
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 64
    factor                         shift and go to state 66
    sexpression                    shift and go to state 67
    exp                            shift and go to state 71
    ssexpression                   shift and go to state 221
    expression                     shift and go to state 73

state 213

    (74) cos3 -> ELSE block .

    ID              reduce using rule 74 (cos3 -> ELSE block .)
    IF              reduce using rule 74 (cos3 -> ELSE block .)
    PRINT           reduce using rule 74 (cos3 -> ELSE block .)
    WHILE           reduce using rule 74 (cos3 -> ELSE block .)
    RETURN          reduce using rule 74 (cos3 -> ELSE block .)
    DRAWCIRCLE      reduce using rule 74 (cos3 -> ELSE block .)
    DRAWSQUARE      reduce using rule 74 (cos3 -> ELSE block .)
    DRAWTRIANGLE    reduce using rule 74 (cos3 -> ELSE block .)
    DRAWLINE        reduce using rule 74 (cos3 -> ELSE block .)
    DRAWPOLYGON     reduce using rule 74 (cos3 -> ELSE block .)
    DRAWCURVE       reduce using rule 74 (cos3 -> ELSE block .)
    RBRACKET        reduce using rule 74 (cos3 -> ELSE block .)


state 214

    (75) cos3 -> ELSEIF cos1 .

    ID              reduce using rule 75 (cos3 -> ELSEIF cos1 .)
    IF              reduce using rule 75 (cos3 -> ELSEIF cos1 .)
    PRINT           reduce using rule 75 (cos3 -> ELSEIF cos1 .)
    WHILE           reduce using rule 75 (cos3 -> ELSEIF cos1 .)
    RETURN          reduce using rule 75 (cos3 -> ELSEIF cos1 .)
    DRAWCIRCLE      reduce using rule 75 (cos3 -> ELSEIF cos1 .)
    DRAWSQUARE      reduce using rule 75 (cos3 -> ELSEIF cos1 .)
    DRAWTRIANGLE    reduce using rule 75 (cos3 -> ELSEIF cos1 .)
    DRAWLINE        reduce using rule 75 (cos3 -> ELSEIF cos1 .)
    DRAWPOLYGON     reduce using rule 75 (cos3 -> ELSEIF cos1 .)
    DRAWCURVE       reduce using rule 75 (cos3 -> ELSEIF cos1 .)
    RBRACKET        reduce using rule 75 (cos3 -> ELSEIF cos1 .)


state 215

    (97) drawpolygon -> DRAWPOLYGON LPAREN ssexpression COMA ssexpression COMA . color RPAREN SEMICOLON
    (78) color -> . RED
    (79) color -> . GREEN
    (80) color -> . BLUE
    (81) color -> . YELLOW
    (82) color -> . BROWN
    (83) color -> . BLACK

    RED             shift and go to state 204
    GREEN           shift and go to state 201
    BLUE            shift and go to state 198
    YELLOW          shift and go to state 202
    BROWN           shift and go to state 199
    BLACK           shift and go to state 203

    color                          shift and go to state 222

state 216

    (96) drawcurve -> DRAWCURVE LPAREN ssexpression COMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 223


state 217

    (33) pas1 -> type ID COMA pas1 .

    RPAREN          reduce using rule 33 (pas1 -> type ID COMA pas1 .)


state 218

    (95) drawtriangle -> DRAWTRIANGLE LPAREN ssexpression COMA ssexpression COMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 224


state 219

    (94) drawcircle -> DRAWCIRCLE LPAREN ssexpression COMA ssexpression COMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 225


state 220

    (93) drawsquare -> DRAWSQUARE LPAREN ssexpression COMA ssexpression COMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 226


state 221

    (92) drawline -> DRAWLINE LPAREN ssexpression COMA ssexpression COMA ssexpression . COMA ssexpression COMA color RPAREN SEMICOLON

    COMA            shift and go to state 227


state 222

    (97) drawpolygon -> DRAWPOLYGON LPAREN ssexpression COMA ssexpression COMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 228


state 223

    (96) drawcurve -> DRAWCURVE LPAREN ssexpression COMA color RPAREN SEMICOLON .

    ID              reduce using rule 96 (drawcurve -> DRAWCURVE LPAREN ssexpression COMA color RPAREN SEMICOLON .)
    IF              reduce using rule 96 (drawcurve -> DRAWCURVE LPAREN ssexpression COMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 96 (drawcurve -> DRAWCURVE LPAREN ssexpression COMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 96 (drawcurve -> DRAWCURVE LPAREN ssexpression COMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 96 (drawcurve -> DRAWCURVE LPAREN ssexpression COMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 96 (drawcurve -> DRAWCURVE LPAREN ssexpression COMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 96 (drawcurve -> DRAWCURVE LPAREN ssexpression COMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 96 (drawcurve -> DRAWCURVE LPAREN ssexpression COMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 96 (drawcurve -> DRAWCURVE LPAREN ssexpression COMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 96 (drawcurve -> DRAWCURVE LPAREN ssexpression COMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 96 (drawcurve -> DRAWCURVE LPAREN ssexpression COMA color RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 96 (drawcurve -> DRAWCURVE LPAREN ssexpression COMA color RPAREN SEMICOLON .)


state 224

    (95) drawtriangle -> DRAWTRIANGLE LPAREN ssexpression COMA ssexpression COMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 229


state 225

    (94) drawcircle -> DRAWCIRCLE LPAREN ssexpression COMA ssexpression COMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 230


state 226

    (93) drawsquare -> DRAWSQUARE LPAREN ssexpression COMA ssexpression COMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 231


state 227

    (92) drawline -> DRAWLINE LPAREN ssexpression COMA ssexpression COMA ssexpression COMA . ssexpression COMA color RPAREN SEMICOLON
    (40) ssexpression -> . sexpression
    (41) ssexpression -> . NOT sexpression
    (42) sexpression -> . expression ses1
    (46) expression -> . exp exs1
    (58) exp -> . term exps1
    (54) term -> . factor tes1
    (98) factor -> . LPAREN ssexpression RPAREN
    (99) factor -> . PLUS fas1
    (100) factor -> . MINUS fas1

    NOT             shift and go to state 69
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 68

    term                           shift and go to state 64
    factor                         shift and go to state 66
    sexpression                    shift and go to state 67
    exp                            shift and go to state 71
    ssexpression                   shift and go to state 232
    expression                     shift and go to state 73

state 228

    (97) drawpolygon -> DRAWPOLYGON LPAREN ssexpression COMA ssexpression COMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 233


state 229

    (95) drawtriangle -> DRAWTRIANGLE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .

    ID              reduce using rule 95 (drawtriangle -> DRAWTRIANGLE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    IF              reduce using rule 95 (drawtriangle -> DRAWTRIANGLE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 95 (drawtriangle -> DRAWTRIANGLE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 95 (drawtriangle -> DRAWTRIANGLE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 95 (drawtriangle -> DRAWTRIANGLE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 95 (drawtriangle -> DRAWTRIANGLE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 95 (drawtriangle -> DRAWTRIANGLE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 95 (drawtriangle -> DRAWTRIANGLE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 95 (drawtriangle -> DRAWTRIANGLE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 95 (drawtriangle -> DRAWTRIANGLE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 95 (drawtriangle -> DRAWTRIANGLE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 95 (drawtriangle -> DRAWTRIANGLE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)


state 230

    (94) drawcircle -> DRAWCIRCLE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .

    ID              reduce using rule 94 (drawcircle -> DRAWCIRCLE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    IF              reduce using rule 94 (drawcircle -> DRAWCIRCLE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 94 (drawcircle -> DRAWCIRCLE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 94 (drawcircle -> DRAWCIRCLE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 94 (drawcircle -> DRAWCIRCLE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 94 (drawcircle -> DRAWCIRCLE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 94 (drawcircle -> DRAWCIRCLE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 94 (drawcircle -> DRAWCIRCLE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 94 (drawcircle -> DRAWCIRCLE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 94 (drawcircle -> DRAWCIRCLE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 94 (drawcircle -> DRAWCIRCLE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 94 (drawcircle -> DRAWCIRCLE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)


state 231

    (93) drawsquare -> DRAWSQUARE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .

    ID              reduce using rule 93 (drawsquare -> DRAWSQUARE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    IF              reduce using rule 93 (drawsquare -> DRAWSQUARE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 93 (drawsquare -> DRAWSQUARE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 93 (drawsquare -> DRAWSQUARE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 93 (drawsquare -> DRAWSQUARE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 93 (drawsquare -> DRAWSQUARE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 93 (drawsquare -> DRAWSQUARE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 93 (drawsquare -> DRAWSQUARE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 93 (drawsquare -> DRAWSQUARE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 93 (drawsquare -> DRAWSQUARE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 93 (drawsquare -> DRAWSQUARE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 93 (drawsquare -> DRAWSQUARE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)


state 232

    (92) drawline -> DRAWLINE LPAREN ssexpression COMA ssexpression COMA ssexpression COMA ssexpression . COMA color RPAREN SEMICOLON

    COMA            shift and go to state 234


state 233

    (97) drawpolygon -> DRAWPOLYGON LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .

    ID              reduce using rule 97 (drawpolygon -> DRAWPOLYGON LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    IF              reduce using rule 97 (drawpolygon -> DRAWPOLYGON LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 97 (drawpolygon -> DRAWPOLYGON LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 97 (drawpolygon -> DRAWPOLYGON LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 97 (drawpolygon -> DRAWPOLYGON LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 97 (drawpolygon -> DRAWPOLYGON LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 97 (drawpolygon -> DRAWPOLYGON LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 97 (drawpolygon -> DRAWPOLYGON LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 97 (drawpolygon -> DRAWPOLYGON LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 97 (drawpolygon -> DRAWPOLYGON LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 97 (drawpolygon -> DRAWPOLYGON LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 97 (drawpolygon -> DRAWPOLYGON LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)


state 234

    (92) drawline -> DRAWLINE LPAREN ssexpression COMA ssexpression COMA ssexpression COMA ssexpression COMA . color RPAREN SEMICOLON
    (78) color -> . RED
    (79) color -> . GREEN
    (80) color -> . BLUE
    (81) color -> . YELLOW
    (82) color -> . BROWN
    (83) color -> . BLACK

    RED             shift and go to state 204
    GREEN           shift and go to state 201
    BLUE            shift and go to state 198
    YELLOW          shift and go to state 202
    BROWN           shift and go to state 199
    BLACK           shift and go to state 203

    color                          shift and go to state 235

state 235

    (92) drawline -> DRAWLINE LPAREN ssexpression COMA ssexpression COMA ssexpression COMA ssexpression COMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 236


state 236

    (92) drawline -> DRAWLINE LPAREN ssexpression COMA ssexpression COMA ssexpression COMA ssexpression COMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 237


state 237

    (92) drawline -> DRAWLINE LPAREN ssexpression COMA ssexpression COMA ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .

    ID              reduce using rule 92 (drawline -> DRAWLINE LPAREN ssexpression COMA ssexpression COMA ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    IF              reduce using rule 92 (drawline -> DRAWLINE LPAREN ssexpression COMA ssexpression COMA ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 92 (drawline -> DRAWLINE LPAREN ssexpression COMA ssexpression COMA ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 92 (drawline -> DRAWLINE LPAREN ssexpression COMA ssexpression COMA ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 92 (drawline -> DRAWLINE LPAREN ssexpression COMA ssexpression COMA ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 92 (drawline -> DRAWLINE LPAREN ssexpression COMA ssexpression COMA ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 92 (drawline -> DRAWLINE LPAREN ssexpression COMA ssexpression COMA ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 92 (drawline -> DRAWLINE LPAREN ssexpression COMA ssexpression COMA ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 92 (drawline -> DRAWLINE LPAREN ssexpression COMA ssexpression COMA ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 92 (drawline -> DRAWLINE LPAREN ssexpression COMA ssexpression COMA ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 92 (drawline -> DRAWLINE LPAREN ssexpression COMA ssexpression COMA ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 92 (drawline -> DRAWLINE LPAREN ssexpression COMA ssexpression COMA ssexpression COMA ssexpression COMA color RPAREN SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ASSIGN in state 49 resolved as shift
