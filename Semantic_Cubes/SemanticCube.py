import numpy as np

class SemanticCube:

    def __init__(self):

        #Code dictionaries
        self.TYPE_CODE = {'int': 0, 'float': 1, 'bool': 2, 'string': 3, 'error': -1}
        self.OPERATOR_CODE = {'+': 0, '-': 1, '*': 2, '/': 3, '=': 4, '==': 5, '>=': 6, '<=': 7, '<>': 8, '<': 9, '>': 10, '&&': 11, '||': 12}

        #Create 3 Dimensional cube with numpy class
        self.cube = np.empty((4, 4, 13), int)

        #Fill int vs int part of cube
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['int'], self.OPERATOR_CODE['+']] = self.TYPE_CODE['int']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['int'], self.OPERATOR_CODE['-']] = self.TYPE_CODE['int']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['int'], self.OPERATOR_CODE['*']] = self.TYPE_CODE['int']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['int'], self.OPERATOR_CODE['/']] = self.TYPE_CODE['int']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['int'], self.OPERATOR_CODE['=']] = self.TYPE_CODE['int']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['int'], self.OPERATOR_CODE['==']] = self.TYPE_CODE['bool']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['int'], self.OPERATOR_CODE['>=']] = self.TYPE_CODE['bool']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['int'], self.OPERATOR_CODE['<=']] = self.TYPE_CODE['bool']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['int'], self.OPERATOR_CODE['<>']] = self.TYPE_CODE['bool']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['int'], self.OPERATOR_CODE['<']] = self.TYPE_CODE['bool']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['int'], self.OPERATOR_CODE['>']] = self.TYPE_CODE['bool']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['int'], self.OPERATOR_CODE['&&']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['int'], self.OPERATOR_CODE['||']] = self.TYPE_CODE['error']

        #Fill int vs float part of the cube
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['float'], self.OPERATOR_CODE['+']] = self.TYPE_CODE['float']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['float'], self.OPERATOR_CODE['-']] = self.TYPE_CODE['float']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['float'], self.OPERATOR_CODE['*']] = self.TYPE_CODE['float']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['float'], self.OPERATOR_CODE['/']] = self.TYPE_CODE['float']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['float'], self.OPERATOR_CODE['=']] = self.TYPE_CODE['float']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['float'], self.OPERATOR_CODE['==']] = self.TYPE_CODE['bool']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['float'], self.OPERATOR_CODE['>=']] = self.TYPE_CODE['bool']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['float'], self.OPERATOR_CODE['<=']] = self.TYPE_CODE['bool']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['float'], self.OPERATOR_CODE['<>']] = self.TYPE_CODE['bool']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['float'], self.OPERATOR_CODE['<']] = self.TYPE_CODE['bool']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['float'], self.OPERATOR_CODE['>']] = self.TYPE_CODE['bool']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['float'], self.OPERATOR_CODE['&&']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['float'], self.OPERATOR_CODE['||']] = self.TYPE_CODE['error']

        # Fill int vs bool part of the cube
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['+']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['-']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['*']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['/']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['=']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['==']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['>=']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['<=']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['<>']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['<']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['>']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['&&']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['||']] = self.TYPE_CODE['error']

        # Fill int vs string part of the cube
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['string'], self.OPERATOR_CODE['+']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['string'], self.OPERATOR_CODE['-']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['string'], self.OPERATOR_CODE['*']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['string'], self.OPERATOR_CODE['/']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['string'], self.OPERATOR_CODE['=']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['string'], self.OPERATOR_CODE['==']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['string'], self.OPERATOR_CODE['>=']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['string'], self.OPERATOR_CODE['<=']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['string'], self.OPERATOR_CODE['<>']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['string'], self.OPERATOR_CODE['<']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['string'], self.OPERATOR_CODE['>']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['string'], self.OPERATOR_CODE['&&']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['int'], self.TYPE_CODE['string'], self.OPERATOR_CODE['||']] = self.TYPE_CODE['error']

        # Fill float vs string part of the cube
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['string'], self.OPERATOR_CODE['+']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['string'], self.OPERATOR_CODE['-']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['string'], self.OPERATOR_CODE['*']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['string'], self.OPERATOR_CODE['/']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['string'], self.OPERATOR_CODE['=']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['string'], self.OPERATOR_CODE['==']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['string'], self.OPERATOR_CODE['>=']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['string'], self.OPERATOR_CODE['<=']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['string'], self.OPERATOR_CODE['<>']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['string'], self.OPERATOR_CODE['<']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['string'], self.OPERATOR_CODE['>']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['string'], self.OPERATOR_CODE['&&']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['string'], self.OPERATOR_CODE['||']] = self.TYPE_CODE['error']

        # Fill float vs bool part of the cube
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['+']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['-']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['*']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['/']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['=']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['==']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['>=']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['<=']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['<>']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['<']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['>']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['&&']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['||']] = self.TYPE_CODE['error']

        # Fill float vs int part of the cube
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['int'], self.OPERATOR_CODE['+']] = self.TYPE_CODE['float']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['int'], self.OPERATOR_CODE['-']] = self.TYPE_CODE['float']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['int'], self.OPERATOR_CODE['*']] = self.TYPE_CODE['float']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['int'], self.OPERATOR_CODE['/']] = self.TYPE_CODE['float']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['int'], self.OPERATOR_CODE['=']] = self.TYPE_CODE['float']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['int'], self.OPERATOR_CODE['==']] = self.TYPE_CODE['bool']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['int'], self.OPERATOR_CODE['>=']] = self.TYPE_CODE['bool']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['int'], self.OPERATOR_CODE['<=']] = self.TYPE_CODE['bool']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['int'], self.OPERATOR_CODE['<>']] = self.TYPE_CODE['bool']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['int'], self.OPERATOR_CODE['<']] = self.TYPE_CODE['bool']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['int'], self.OPERATOR_CODE['>']] = self.TYPE_CODE['bool']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['int'], self.OPERATOR_CODE['&&']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['int'], self.OPERATOR_CODE['||']] = self.TYPE_CODE['error']

        # Fill float vs float part of the cube
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['float'], self.OPERATOR_CODE['+']] = self.TYPE_CODE['float']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['float'], self.OPERATOR_CODE['-']] = self.TYPE_CODE['float']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['float'], self.OPERATOR_CODE['*']] = self.TYPE_CODE['float']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['float'], self.OPERATOR_CODE['/']] = self.TYPE_CODE['float']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['float'], self.OPERATOR_CODE['=']] = self.TYPE_CODE['float']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['float'], self.OPERATOR_CODE['==']] = self.TYPE_CODE['bool']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['float'], self.OPERATOR_CODE['>=']] = self.TYPE_CODE['bool']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['float'], self.OPERATOR_CODE['<=']] = self.TYPE_CODE['bool']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['float'], self.OPERATOR_CODE['<>']] = self.TYPE_CODE['bool']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['float'], self.OPERATOR_CODE['<']] = self.TYPE_CODE['bool']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['float'], self.OPERATOR_CODE['>']] = self.TYPE_CODE['bool']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['float'], self.OPERATOR_CODE['&&']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['float'], self.TYPE_CODE['float'], self.OPERATOR_CODE['||']] = self.TYPE_CODE['error']

        # Fill string vs float part of the cube
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['float'], self.OPERATOR_CODE['+']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['float'], self.OPERATOR_CODE['-']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['float'], self.OPERATOR_CODE['*']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['float'], self.OPERATOR_CODE['/']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['float'], self.OPERATOR_CODE['=']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['float'], self.OPERATOR_CODE['==']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['float'], self.OPERATOR_CODE['>=']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['float'], self.OPERATOR_CODE['<=']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['float'], self.OPERATOR_CODE['<>']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['float'], self.OPERATOR_CODE['<']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['float'], self.OPERATOR_CODE['>']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['float'], self.OPERATOR_CODE['&&']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['float'], self.OPERATOR_CODE['||']] = self.TYPE_CODE['error']

        # Fill string vs string part of the cube
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['string'], self.OPERATOR_CODE['+']] = self.TYPE_CODE['string']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['string'], self.OPERATOR_CODE['-']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['string'], self.OPERATOR_CODE['*']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['string'], self.OPERATOR_CODE['/']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['string'], self.OPERATOR_CODE['=']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['string'], self.OPERATOR_CODE['==']] = self.TYPE_CODE['bool']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['string'], self.OPERATOR_CODE['>=']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['string'], self.OPERATOR_CODE['<=']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['string'], self.OPERATOR_CODE['<>']] = self.TYPE_CODE['bool']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['string'], self.OPERATOR_CODE['<']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['string'], self.OPERATOR_CODE['>']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['string'], self.OPERATOR_CODE['&&']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['string'], self.OPERATOR_CODE['||']] = self.TYPE_CODE['error']

        # Fill string vs bool part of the cube
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['+']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['-']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['*']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['/']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['=']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['==']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['>=']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['<=']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['<>']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['<']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['>']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['&&']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['||']] = self.TYPE_CODE['error']

        # Fill string vs int part of the cube
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['int'], self.OPERATOR_CODE['+']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['int'], self.OPERATOR_CODE['-']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['int'], self.OPERATOR_CODE['*']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['int'], self.OPERATOR_CODE['/']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['int'], self.OPERATOR_CODE['=']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['int'], self.OPERATOR_CODE['==']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['int'], self.OPERATOR_CODE['>=']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['int'], self.OPERATOR_CODE['<=']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['int'], self.OPERATOR_CODE['<>']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['int'], self.OPERATOR_CODE['<']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['int'], self.OPERATOR_CODE['>']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['int'], self.OPERATOR_CODE['&&']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['string'], self.TYPE_CODE['int'], self.OPERATOR_CODE['||']] = self.TYPE_CODE['error']

        # Fill bool vs int part of the cube
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['int'], self.OPERATOR_CODE['+']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['int'], self.OPERATOR_CODE['-']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['int'], self.OPERATOR_CODE['*']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['int'], self.OPERATOR_CODE['/']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['int'], self.OPERATOR_CODE['=']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['int'], self.OPERATOR_CODE['==']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['int'], self.OPERATOR_CODE['>=']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['int'], self.OPERATOR_CODE['<=']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['int'], self.OPERATOR_CODE['<>']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['int'], self.OPERATOR_CODE['<']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['int'], self.OPERATOR_CODE['>']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['int'], self.OPERATOR_CODE['&&']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['int'], self.OPERATOR_CODE['||']] = self.TYPE_CODE['error']

        # Fill bool vs float part of the cube
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['float'], self.OPERATOR_CODE['+']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['float'], self.OPERATOR_CODE['-']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['float'], self.OPERATOR_CODE['*']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['float'], self.OPERATOR_CODE['/']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['float'], self.OPERATOR_CODE['=']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['float'], self.OPERATOR_CODE['==']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['float'], self.OPERATOR_CODE['>=']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['float'], self.OPERATOR_CODE['<=']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['float'], self.OPERATOR_CODE['<>']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['float'], self.OPERATOR_CODE['<']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['float'], self.OPERATOR_CODE['>']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['float'], self.OPERATOR_CODE['&&']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['float'], self.OPERATOR_CODE['||']] = self.TYPE_CODE['error']

        # Fill bool vs string part of the cube
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['string'], self.OPERATOR_CODE['+']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['string'], self.OPERATOR_CODE['-']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['string'], self.OPERATOR_CODE['*']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['string'], self.OPERATOR_CODE['/']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['string'], self.OPERATOR_CODE['=']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['string'], self.OPERATOR_CODE['==']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['string'], self.OPERATOR_CODE['>=']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['string'], self.OPERATOR_CODE['<=']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['string'], self.OPERATOR_CODE['<>']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['string'], self.OPERATOR_CODE['<']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['string'], self.OPERATOR_CODE['>']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['string'], self.OPERATOR_CODE['&&']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['string'], self.OPERATOR_CODE['||']] = self.TYPE_CODE['error']

        # Fill bool vs bool part of the cube
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['+']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['-']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['*']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['/']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['=']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['==']] = self.TYPE_CODE['bool']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['>=']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['<=']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['<>']] = self.TYPE_CODE['bool']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['<']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['>']] = self.TYPE_CODE['error']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['&&']] = self.TYPE_CODE['bool']
        self.cube[self.TYPE_CODE['bool'], self.TYPE_CODE['bool'], self.OPERATOR_CODE['||']] = self.TYPE_CODE['bool']

    def getSemanticType(self, type1, type2, operator):
        return self.cube[self.TYPE_CODE[type1], self.TYPE_CODE[type2], self.OPERATOR_CODE[operator]]

cube = SemanticCube()
print(cube.getSemanticType('int', 'bool', '+'))