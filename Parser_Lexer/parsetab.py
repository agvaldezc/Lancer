
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'BF8D268BA0676104347FA5C7E919DBDF'
    
_lr_action_items = {'DRAWTRIANGLE':([17,29,31,33,36,38,39,41,42,44,45,46,47,50,54,56,94,120,174,181,193,194,199,200,202,203,220,229,235,236,237,239,243,],[32,-64,32,-67,-28,-65,-25,-62,-26,-29,-66,-24,-22,-23,-63,-27,-19,-34,-75,-115,-83,-76,-87,-35,-68,-74,-73,-95,-94,-93,-92,-96,-91,]),'RETURN':([17,29,31,33,36,38,39,41,42,44,45,46,47,50,54,56,94,120,174,181,193,194,199,200,202,203,220,229,235,236,237,239,243,],[30,-64,30,-67,-28,-65,-25,-62,-26,-29,-66,-24,-22,-23,-63,-27,-19,-34,-75,-115,-83,-76,-87,-35,-68,-74,-73,-95,-94,-93,-92,-96,-91,]),'LPAREN':([30,32,34,35,37,40,48,49,51,52,53,57,65,70,78,79,80,81,82,83,85,86,90,91,92,93,99,100,103,104,110,112,113,114,115,116,117,122,123,136,140,157,158,168,171,172,173,176,182,219,233,],[65,78,79,80,81,82,83,86,90,92,93,95,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,158,65,65,65,65,65,65,65,65,65,86,65,65,65,65,65,65,65,65,65,65,]),'YELLOW':([183,216,217,218,221,240,],[209,209,209,209,209,209,]),'FLOAT_TYPE':([12,27,95,212,],[22,22,22,22,]),'VOID':([12,],[21,]),'STRING_TYPE':([12,27,95,212,],[23,23,23,23,]),'ELSE':([94,181,],[-19,201,]),'LBRACKET':([4,5,6,7,9,10,11,14,15,16,28,63,94,97,137,150,169,185,201,213,],[-115,-2,-115,-3,-115,17,-5,-7,-9,-4,-115,-8,-19,-115,17,-6,17,17,17,-84,]),'VAR':([4,],[8,]),'WHILE':([17,29,31,33,36,38,39,41,42,44,45,46,47,50,54,56,94,120,174,181,193,194,199,200,202,203,220,229,235,236,237,239,243,],[34,-64,34,-67,-28,-65,-25,-62,-26,-29,-66,-24,-22,-23,-63,-27,-19,-34,-75,-115,-83,-76,-87,-35,-68,-74,-73,-95,-94,-93,-92,-96,-91,]),'BLACK':([183,216,217,218,221,240,],[210,210,210,210,210,210,]),'INT_TYPE':([12,27,95,212,],[25,25,25,25,]),'PRINT':([17,29,31,33,36,38,39,41,42,44,45,46,47,50,54,56,94,120,174,181,193,194,199,200,202,203,220,229,235,236,237,239,243,],[35,-64,35,-67,-28,-65,-25,-62,-26,-29,-66,-24,-22,-23,-63,-27,-19,-34,-75,-115,-83,-76,-87,-35,-68,-74,-73,-95,-94,-93,-92,-96,-91,]),'MINUS':([30,64,65,67,70,76,78,79,80,81,82,83,85,86,90,91,92,93,99,100,103,104,105,106,107,108,109,110,112,113,114,115,116,117,122,123,136,151,152,153,154,155,156,157,158,159,168,171,172,173,176,182,188,189,214,215,219,233,],[66,100,66,-115,66,-97,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-54,-55,-105,-99,-104,-115,66,66,66,66,66,66,66,66,66,100,100,-98,-115,-115,-103,66,66,-108,66,66,66,66,66,66,-57,-56,-106,-107,66,66,]),'BOOL_TYPE':([12,27,95,212,],[24,24,24,24,]),'BLUE':([183,216,217,218,221,240,],[205,205,205,205,205,205,]),'LE':([64,67,73,76,98,101,105,106,107,108,109,110,151,152,153,154,155,156,159,186,187,188,189,214,215,],[-115,-115,117,-97,-58,-59,-54,-55,-105,-99,-104,-115,-115,-115,-98,-115,-115,-103,-108,-60,-61,-57,-56,-106,-107,]),'RPAREN':([64,67,68,73,75,76,86,89,95,98,101,102,105,106,107,108,109,110,111,118,119,121,124,126,127,133,134,135,138,139,141,142,146,147,148,151,152,153,154,155,156,159,160,161,162,163,164,165,166,167,176,184,186,187,188,189,191,198,199,205,206,207,208,209,210,211,214,215,223,224,225,226,228,241,],[-115,-115,-40,-115,-115,-97,-115,137,-115,-58,-59,153,-54,-55,-105,-99,-104,-115,-41,-46,-47,-42,-43,169,170,-88,-89,177,-71,-69,-72,-70,-30,185,-31,-115,-115,-98,-115,-115,-103,-108,-53,-48,-50,-52,-49,-51,-44,-45,-115,-32,-60,-61,-57,-56,215,-90,-87,-79,-81,222,-78,-80,-82,-77,-106,-107,-33,230,231,232,234,242,]),'SEMICOLON':([3,22,23,24,25,26,59,60,61,62,64,67,68,73,74,75,76,98,101,105,106,107,108,109,110,111,118,119,121,124,131,149,151,152,153,154,155,156,159,160,161,162,163,164,165,166,167,170,177,178,179,180,186,187,188,189,199,214,215,222,230,231,232,234,242,],[4,-11,-13,-12,-10,-14,-16,-17,-15,97,-115,-115,-40,-115,120,-115,-97,-58,-59,-54,-55,-105,-99,-104,-115,-41,-46,-47,-42,-43,174,-18,-115,-115,-98,-115,-115,-103,-108,-53,-48,-50,-52,-49,-51,-44,-45,194,199,200,-39,-38,-60,-61,-57,-56,-87,-106,-107,229,235,236,237,239,243,]),'DRAWLINE':([17,29,31,33,36,38,39,41,42,44,45,46,47,50,54,56,94,120,174,181,193,194,199,200,202,203,220,229,235,236,237,239,243,],[48,-64,48,-67,-28,-65,-25,-62,-26,-29,-66,-24,-22,-23,-63,-27,-19,-34,-75,-115,-83,-76,-87,-35,-68,-74,-73,-95,-94,-93,-92,-96,-91,]),'DRAWSQUARE':([17,29,31,33,36,38,39,41,42,44,45,46,47,50,54,56,94,120,174,181,193,194,199,200,202,203,220,229,235,236,237,239,243,],[40,-64,40,-67,-28,-65,-25,-62,-26,-29,-66,-24,-22,-23,-63,-27,-19,-34,-75,-115,-83,-76,-87,-35,-68,-74,-73,-95,-94,-93,-92,-96,-91,]),'LT':([64,67,73,76,98,101,105,106,107,108,109,110,151,152,153,154,155,156,159,186,187,188,189,214,215,],[-115,-115,116,-97,-58,-59,-54,-55,-105,-99,-104,-115,-115,-115,-98,-115,-115,-103,-108,-60,-61,-57,-56,-106,-107,]),'RARRAY':([64,67,68,73,75,76,96,98,101,105,106,107,108,109,110,111,118,119,121,124,132,151,152,153,154,155,156,159,160,161,162,163,164,165,166,167,186,187,188,189,190,214,215,],[-115,-115,-40,-115,-115,-97,149,-58,-59,-54,-55,-105,-99,-104,-115,-41,-46,-47,-42,-43,175,-115,-115,-98,-115,-115,-103,-108,-53,-48,-50,-52,-49,-51,-44,-45,-60,-61,-57,-56,214,-106,-107,]),'COLON':([8,13,14,15,28,63,],[-115,27,-7,-9,-115,-8,]),'RED':([183,216,217,218,221,240,],[211,211,211,211,211,211,]),'PLUS':([30,64,65,67,70,76,78,79,80,81,82,83,85,86,90,91,92,93,99,100,103,104,105,106,107,108,109,110,112,113,114,115,116,117,122,123,136,151,152,153,154,155,156,157,158,159,168,171,172,173,176,182,188,189,214,215,219,233,],[71,99,71,-115,71,-97,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-54,-55,-105,-99,-104,-115,71,71,71,71,71,71,71,71,71,99,99,-98,-115,-115,-103,71,71,-108,71,71,71,71,71,71,-57,-56,-106,-107,71,71,]),'ASSIGN':([49,87,88,175,],[84,136,-36,-37,]),'$end':([1,18,94,],[0,-1,-19,]),'DIVISION':([67,76,107,108,109,110,153,154,155,156,159,214,215,],[103,-97,-105,-99,-104,-115,-98,103,103,-103,-108,-106,-107,]),'DIFFERENT':([64,67,73,76,98,101,105,106,107,108,109,110,151,152,153,154,155,156,159,186,187,188,189,214,215,],[-115,-115,112,-97,-58,-59,-54,-55,-105,-99,-104,-115,-115,-115,-98,-115,-115,-103,-108,-60,-61,-57,-56,-106,-107,]),'GT':([64,67,73,76,98,101,105,106,107,108,109,110,151,152,153,154,155,156,159,186,187,188,189,214,215,],[-115,-115,113,-97,-58,-59,-54,-55,-105,-99,-104,-115,-115,-115,-98,-115,-115,-103,-108,-60,-61,-57,-56,-106,-107,]),'BROWN':([183,216,217,218,221,240,],[206,206,206,206,206,206,]),'EQUAL':([64,67,73,76,98,101,105,106,107,108,109,110,151,152,153,154,155,156,159,186,187,188,189,214,215,],[-115,-115,115,-97,-58,-59,-54,-55,-105,-99,-104,-115,-115,-115,-98,-115,-115,-103,-108,-60,-61,-57,-56,-106,-107,]),'GE':([64,67,73,76,98,101,105,106,107,108,109,110,151,152,153,154,155,156,159,186,187,188,189,214,215,],[-115,-115,114,-97,-58,-59,-54,-55,-105,-99,-104,-115,-115,-115,-98,-115,-115,-103,-108,-60,-61,-57,-56,-106,-107,]),'LARRAY':([22,23,25,49,110,],[58,58,58,85,157,]),'FUNC':([4,5,6,7,9,14,15,28,63,94,97,150,213,],[-115,-2,12,-3,12,-7,-9,-115,-8,-19,-115,-6,-84,]),'COMA':([14,64,67,68,73,75,76,98,101,105,106,107,108,109,110,111,118,119,121,124,125,128,129,130,134,143,144,151,152,153,154,155,156,159,160,161,162,163,164,165,166,167,184,186,187,188,189,192,195,196,197,204,214,215,227,238,],[28,-115,-115,-40,-115,-115,-97,-58,-59,-54,-55,-105,-99,-104,-115,-41,-46,-47,-42,-43,168,171,172,173,176,182,183,-115,-115,-98,-115,-115,-103,-108,-53,-48,-50,-52,-49,-51,-44,-45,212,-60,-61,-57,-56,216,217,218,219,221,-106,-107,233,240,]),'INPUT':([84,],[131,]),'TIMES':([67,76,107,108,109,110,153,154,155,156,159,214,215,],[104,-97,-105,-99,-104,-115,-98,104,104,-103,-108,-106,-107,]),'ID':([8,17,19,20,21,22,23,24,25,26,28,29,30,31,33,36,38,39,41,42,44,45,46,47,50,54,56,59,60,61,65,66,69,70,71,72,78,79,80,81,82,83,85,86,90,91,92,93,94,97,99,100,103,104,112,113,114,115,116,117,120,122,123,133,136,145,149,157,158,168,171,172,173,174,176,181,182,193,194,199,200,202,203,219,220,229,233,235,236,237,239,243,],[14,49,57,-86,-85,-11,-13,-12,-10,-14,14,-64,-115,49,-67,-28,-65,-25,-62,-26,-29,-66,-24,-22,-23,-63,-27,-16,-17,-15,-115,-101,110,-115,-100,-102,-115,-115,-115,-115,-115,-115,-115,-115,140,140,-115,-115,-19,14,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-34,-115,-115,-102,140,184,-18,-115,-115,-115,-115,-115,-115,-75,-115,-115,-115,-83,-76,-87,-35,-68,-74,-115,-73,-95,-115,-94,-93,-92,-96,-91,]),'IF':([17,29,31,33,36,38,39,41,42,44,45,46,47,50,54,56,94,120,174,181,193,194,199,200,202,203,220,229,235,236,237,239,243,],[51,-64,51,-67,-28,-65,-25,-62,-26,-29,-66,-24,-22,-23,-63,-27,-19,-34,-75,-115,-83,-76,-87,-35,-68,-74,-73,-95,-94,-93,-92,-96,-91,]),'AND':([64,67,73,75,76,98,101,105,106,107,108,109,110,118,119,151,152,153,154,155,156,159,160,161,162,163,164,165,186,187,188,189,214,215,],[-115,-115,-115,122,-97,-58,-59,-54,-55,-105,-99,-104,-115,-46,-47,-115,-115,-98,-115,-115,-103,-108,-53,-48,-50,-52,-49,-51,-60,-61,-57,-56,-106,-107,]),'CTEI':([30,58,65,66,69,70,71,72,78,79,80,81,82,83,85,86,90,91,92,93,99,100,103,104,112,113,114,115,116,117,122,123,133,136,157,158,168,171,172,173,176,182,219,233,],[-115,96,-115,-101,109,-115,-100,-102,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-102,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,]),'DRAWPOLYGON':([17,29,31,33,36,38,39,41,42,44,45,46,47,50,54,56,94,120,174,181,193,194,199,200,202,203,220,229,235,236,237,239,243,],[52,-64,52,-67,-28,-65,-25,-62,-26,-29,-66,-24,-22,-23,-63,-27,-19,-34,-75,-115,-83,-76,-87,-35,-68,-74,-73,-95,-94,-93,-92,-96,-91,]),'DRAWCURVE':([17,29,31,33,36,38,39,41,42,44,45,46,47,50,54,56,94,120,174,181,193,194,199,200,202,203,220,229,235,236,237,239,243,],[53,-64,53,-67,-28,-65,-25,-62,-26,-29,-66,-24,-22,-23,-63,-27,-19,-34,-75,-115,-83,-76,-87,-35,-68,-74,-73,-95,-94,-93,-92,-96,-91,]),'OR':([64,67,73,75,76,98,101,105,106,107,108,109,110,118,119,151,152,153,154,155,156,159,160,161,162,163,164,165,186,187,188,189,214,215,],[-115,-115,-115,123,-97,-58,-59,-54,-55,-105,-99,-104,-115,-46,-47,-115,-115,-98,-115,-115,-103,-108,-53,-48,-50,-52,-49,-51,-60,-61,-57,-56,-106,-107,]),'DRAWCIRCLE':([17,29,31,33,36,38,39,41,42,44,45,46,47,50,54,56,94,120,174,181,193,194,199,200,202,203,220,229,235,236,237,239,243,],[37,-64,37,-67,-28,-65,-25,-62,-26,-29,-66,-24,-22,-23,-63,-27,-19,-34,-75,-115,-83,-76,-87,-35,-68,-74,-73,-95,-94,-93,-92,-96,-91,]),'PROGRAMA':([0,],[2,]),'NOT':([30,51,65,78,79,80,81,82,83,85,86,90,91,92,93,136,157,158,168,171,172,173,176,182,219,233,],[70,91,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'GREEN':([183,216,217,218,221,240,],[208,208,208,208,208,208,]),'RBRACKET':([17,29,31,33,36,38,39,41,42,43,44,45,46,47,50,54,55,56,77,94,120,174,181,193,194,199,200,202,203,220,229,235,236,237,239,243,],[-115,-64,-115,-67,-28,-65,-25,-62,-26,-21,-29,-66,-24,-22,-23,-63,94,-27,-20,-19,-34,-75,-115,-83,-76,-87,-35,-68,-74,-73,-95,-94,-93,-92,-96,-91,]),'MAIN':([2,],[3,]),'CTEF':([30,65,66,69,70,71,72,78,79,80,81,82,83,85,86,90,91,92,93,99,100,103,104,112,113,114,115,116,117,122,123,133,136,157,158,168,171,172,173,176,182,219,233,],[-115,-115,-101,107,-115,-100,-102,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-102,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'drawtriangle':([17,31,],[29,29,]),'constant':([69,],[108,]),'cos1':([51,],[89,]),'vars':([4,],[5,]),'fus1':([12,],[19,]),'color':([183,216,217,218,221,240,],[207,224,225,226,228,241,]),'drawcurve':([17,31,],[33,33,]),'sign':([30,65,70,78,79,80,81,82,83,85,86,90,91,92,93,99,100,103,104,112,113,114,115,116,117,122,123,136,157,158,168,171,172,173,176,182,219,233,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'array':([12,27,95,212,],[26,26,26,26,]),'vas1':([8,28,97,],[13,63,150,]),'predefined':([17,31,],[36,36,]),'const':([110,],[156,]),'drawline':([17,31,],[38,38,]),'sexpression':([30,65,70,78,79,80,81,82,83,85,86,90,91,92,93,122,123,136,157,158,168,171,172,173,176,182,219,233,],[68,68,111,68,68,68,68,68,68,68,68,68,68,68,68,166,167,68,68,68,68,68,68,68,68,68,68,68,]),'write':([17,31,],[39,39,]),'program':([0,],[1,]),'ars1':([22,23,25,],[59,60,61,]),'assignment':([17,31,],[47,47,]),'drawcircle':([17,31,],[41,41,]),'type':([12,27,95,212,],[20,62,145,145,]),'empty':([4,6,8,9,17,28,30,31,49,64,65,67,70,73,75,78,79,80,81,82,83,85,86,90,91,92,93,95,97,99,100,103,104,110,112,113,114,115,116,117,122,123,136,151,152,154,155,157,158,168,171,172,173,176,181,182,219,233,],[7,11,15,11,43,15,72,43,88,101,72,106,72,119,124,72,72,72,72,72,72,72,133,72,72,72,72,146,15,72,72,72,72,159,72,72,72,72,72,72,72,72,72,101,101,106,106,72,72,72,72,72,72,133,203,72,72,72,]),'fcs1':([86,176,],[135,198,]),'function':([6,9,],[9,9,]),'return':([17,31,],[44,44,]),'drawpolygon':([17,31,],[45,45,]),'read':([17,31,],[46,46,]),'prs2':([6,9,],[10,16,]),'prs1':([4,],[6,]),'factor':([30,65,70,78,79,80,81,82,83,85,86,90,91,92,93,99,100,103,104,112,113,114,115,116,117,122,123,136,157,158,168,171,172,173,176,182,219,233,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,154,155,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'cos3':([181,],[202,]),'cos2':([90,91,],[139,142,]),'statue':([17,31,],[31,31,]),'exs1':([73,],[118,]),'parameter':([95,],[147,]),'condition':([17,31,],[50,50,]),'cycle':([17,31,],[42,42,]),'ses1':([75,],[121,]),'term':([30,65,70,78,79,80,81,82,83,85,86,90,91,92,93,99,100,112,113,114,115,116,117,122,123,136,157,158,168,171,172,173,176,182,219,233,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,151,152,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'ass1':([49,],[87,]),'exps1':([64,151,152,],[98,186,187,]),'drawsquare':([17,31,],[54,54,]),'bls1':([17,31,],[55,77,]),'functioncall':([17,31,90,91,136,],[56,56,141,141,180,]),'fact':([30,65,70,78,79,80,81,82,83,85,86,90,91,92,93,99,100,103,104,112,113,114,115,116,117,122,123,136,157,158,168,171,172,173,176,182,219,233,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'exp':([30,65,70,78,79,80,81,82,83,85,86,90,91,92,93,112,113,114,115,116,117,122,123,136,157,158,168,171,172,173,176,182,219,233,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,160,161,162,163,164,165,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'ssexpression':([30,65,78,79,80,81,82,83,85,86,90,91,92,93,136,157,158,168,171,172,173,176,182,219,233,],[74,102,125,126,127,128,129,130,132,134,138,138,143,144,179,190,191,192,195,196,197,134,204,227,238,]),'ass2':([136,],[178,]),'expression':([30,65,70,78,79,80,81,82,83,85,86,90,91,92,93,122,123,136,157,158,168,171,172,173,176,182,219,233,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'tes1':([67,154,155,],[105,188,189,]),'block':([10,137,169,185,201,],[18,181,193,213,220,]),'pas1':([95,212,],[148,223,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAMA MAIN SEMICOLON prs1 prs2 block','program',6,'p_expression_program','LancerYacc.py',9),
  ('prs1 -> vars','prs1',1,'p_expression_prs1','LancerYacc.py',14),
  ('prs1 -> empty','prs1',1,'p_expression_prs1','LancerYacc.py',15),
  ('prs2 -> function prs2','prs2',2,'p_expression_prs2','LancerYacc.py',18),
  ('prs2 -> empty','prs2',1,'p_expression_prs2','LancerYacc.py',19),
  ('vars -> VAR vas1 COLON type SEMICOLON vas1','vars',6,'p_expression_vars','LancerYacc.py',22),
  ('vas1 -> ID','vas1',1,'p_expression_vas1','LancerYacc.py',25),
  ('vas1 -> ID COMA vas1','vas1',3,'p_expression_vas1','LancerYacc.py',26),
  ('vas1 -> empty','vas1',1,'p_expression_vas1','LancerYacc.py',27),
  ('type -> INT_TYPE','type',1,'p_expression_type','LancerYacc.py',43),
  ('type -> FLOAT_TYPE','type',1,'p_expression_type','LancerYacc.py',44),
  ('type -> BOOL_TYPE','type',1,'p_expression_type','LancerYacc.py',45),
  ('type -> STRING_TYPE','type',1,'p_expression_type','LancerYacc.py',46),
  ('type -> array','type',1,'p_expression_type','LancerYacc.py',47),
  ('array -> INT_TYPE ars1','array',2,'p_expression_array','LancerYacc.py',50),
  ('array -> FLOAT_TYPE ars1','array',2,'p_expression_array','LancerYacc.py',51),
  ('array -> STRING_TYPE ars1','array',2,'p_expression_array','LancerYacc.py',52),
  ('ars1 -> LARRAY CTEI RARRAY','ars1',3,'p_expression_ars1','LancerYacc.py',55),
  ('block -> LBRACKET bls1 RBRACKET','block',3,'p_expression_block','LancerYacc.py',58),
  ('bls1 -> statue bls1','bls1',2,'p_expression_bls1','LancerYacc.py',61),
  ('bls1 -> empty','bls1',1,'p_expression_bls1','LancerYacc.py',62),
  ('statue -> assignment','statue',1,'p_expression_statue','LancerYacc.py',65),
  ('statue -> condition','statue',1,'p_expression_statue','LancerYacc.py',66),
  ('statue -> read','statue',1,'p_expression_statue','LancerYacc.py',67),
  ('statue -> write','statue',1,'p_expression_statue','LancerYacc.py',68),
  ('statue -> cycle','statue',1,'p_expression_statue','LancerYacc.py',69),
  ('statue -> functioncall','statue',1,'p_expression_statue','LancerYacc.py',70),
  ('statue -> predefined','statue',1,'p_expression_statue','LancerYacc.py',71),
  ('statue -> return','statue',1,'p_expression_statue','LancerYacc.py',72),
  ('parameter -> empty','parameter',1,'p_expression_parameter','LancerYacc.py',75),
  ('parameter -> pas1','parameter',1,'p_expression_parameter','LancerYacc.py',76),
  ('pas1 -> type ID','pas1',2,'p_expression_pas1','LancerYacc.py',79),
  ('pas1 -> type ID COMA pas1','pas1',4,'p_expression_pas1','LancerYacc.py',80),
  ('return -> RETURN ssexpression SEMICOLON','return',3,'p_expression_return','LancerYacc.py',83),
  ('assignment -> ID ass1 ASSIGN ass2 SEMICOLON','assignment',5,'p_expression_assignment','LancerYacc.py',86),
  ('ass1 -> empty','ass1',1,'p_expression_ass1','LancerYacc.py',89),
  ('ass1 -> LARRAY ssexpression RARRAY','ass1',3,'p_expression_ass1','LancerYacc.py',90),
  ('ass2 -> functioncall','ass2',1,'p_expression_ass2','LancerYacc.py',93),
  ('ass2 -> ssexpression','ass2',1,'p_expression_ass2','LancerYacc.py',94),
  ('ssexpression -> sexpression','ssexpression',1,'p_expression_ssexpression','LancerYacc.py',97),
  ('ssexpression -> NOT sexpression','ssexpression',2,'p_expression_ssexpression','LancerYacc.py',98),
  ('sexpression -> expression ses1','sexpression',2,'p_expression_sexpression','LancerYacc.py',101),
  ('ses1 -> empty','ses1',1,'p_expression_ses1','LancerYacc.py',104),
  ('ses1 -> AND sexpression','ses1',2,'p_expression_ses1','LancerYacc.py',105),
  ('ses1 -> OR sexpression','ses1',2,'p_expression_ses1','LancerYacc.py',106),
  ('expression -> exp exs1','expression',2,'p_expression_expression','LancerYacc.py',109),
  ('exs1 -> empty','exs1',1,'p_expression_exs1','LancerYacc.py',112),
  ('exs1 -> GT exp','exs1',2,'p_expression_exs1','LancerYacc.py',113),
  ('exs1 -> LT exp','exs1',2,'p_expression_exs1','LancerYacc.py',114),
  ('exs1 -> GE exp','exs1',2,'p_expression_exs1','LancerYacc.py',115),
  ('exs1 -> LE exp','exs1',2,'p_expression_exs1','LancerYacc.py',116),
  ('exs1 -> EQUAL exp','exs1',2,'p_expression_exs1','LancerYacc.py',117),
  ('exs1 -> DIFFERENT exp','exs1',2,'p_expression_exs1','LancerYacc.py',118),
  ('term -> factor tes1','term',2,'p_expression_term','LancerYacc.py',121),
  ('tes1 -> empty','tes1',1,'p_expression_tes1','LancerYacc.py',124),
  ('tes1 -> TIMES factor tes1','tes1',3,'p_expression_tes1','LancerYacc.py',125),
  ('tes1 -> DIVISION factor tes1','tes1',3,'p_expression_tes1','LancerYacc.py',126),
  ('exp -> term exps1','exp',2,'p_expression_exp','LancerYacc.py',129),
  ('exps1 -> empty','exps1',1,'p_expression_exps1','LancerYacc.py',132),
  ('exps1 -> PLUS term exps1','exps1',3,'p_expression_exps1','LancerYacc.py',133),
  ('exps1 -> MINUS term exps1','exps1',3,'p_expression_exps1','LancerYacc.py',134),
  ('predefined -> drawcircle','predefined',1,'p_expression_predefined','LancerYacc.py',137),
  ('predefined -> drawsquare','predefined',1,'p_expression_predefined','LancerYacc.py',138),
  ('predefined -> drawtriangle','predefined',1,'p_expression_predefined','LancerYacc.py',139),
  ('predefined -> drawline','predefined',1,'p_expression_predefined','LancerYacc.py',140),
  ('predefined -> drawpolygon','predefined',1,'p_expression_predefined','LancerYacc.py',141),
  ('predefined -> drawcurve','predefined',1,'p_expression_predefined','LancerYacc.py',142),
  ('condition -> IF cos1 RPAREN block cos3','condition',5,'p_expression_condition','LancerYacc.py',145),
  ('cos1 -> LPAREN cos2','cos1',2,'p_expression_cos1','LancerYacc.py',148),
  ('cos1 -> NOT cos2','cos1',2,'p_expression_cos1','LancerYacc.py',149),
  ('cos2 -> ssexpression','cos2',1,'p_expression_cos2','LancerYacc.py',152),
  ('cos2 -> functioncall','cos2',1,'p_expression_cos2','LancerYacc.py',153),
  ('cos3 -> ELSE block','cos3',2,'p_expression_cos3','LancerYacc.py',156),
  ('cos3 -> empty','cos3',1,'p_expression_cos3','LancerYacc.py',157),
  ('read -> ID ASSIGN INPUT SEMICOLON','read',4,'p_expression_read','LancerYacc.py',160),
  ('write -> PRINT LPAREN ssexpression RPAREN SEMICOLON','write',5,'p_expression_write','LancerYacc.py',163),
  ('color -> RED','color',1,'p_expression_color','LancerYacc.py',166),
  ('color -> GREEN','color',1,'p_expression_color','LancerYacc.py',167),
  ('color -> BLUE','color',1,'p_expression_color','LancerYacc.py',168),
  ('color -> YELLOW','color',1,'p_expression_color','LancerYacc.py',169),
  ('color -> BROWN','color',1,'p_expression_color','LancerYacc.py',170),
  ('color -> BLACK','color',1,'p_expression_color','LancerYacc.py',171),
  ('cycle -> WHILE LPAREN ssexpression RPAREN block','cycle',5,'p_expression_cycle','LancerYacc.py',174),
  ('function -> FUNC fus1 ID LPAREN parameter RPAREN block','function',7,'p_expression_function','LancerYacc.py',177),
  ('fus1 -> VOID','fus1',1,'p_expression_fus1','LancerYacc.py',180),
  ('fus1 -> type','fus1',1,'p_expression_fus1','LancerYacc.py',181),
  ('functioncall -> ID LPAREN fcs1 RPAREN SEMICOLON','functioncall',5,'p_expression_functioncall','LancerYacc.py',184),
  ('fcs1 -> empty','fcs1',1,'p_expression_fcs1','LancerYacc.py',187),
  ('fcs1 -> ssexpression','fcs1',1,'p_expression_fcs1','LancerYacc.py',188),
  ('fcs1 -> ssexpression COMA fcs1','fcs1',3,'p_expression_fcs1','LancerYacc.py',189),
  ('drawline -> DRAWLINE LPAREN ssexpression COMA ssexpression COMA ssexpression COMA ssexpression COMA color RPAREN SEMICOLON','drawline',13,'p_expression_drawline','LancerYacc.py',192),
  ('drawsquare -> DRAWSQUARE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON','drawsquare',9,'p_expression_drawsquare','LancerYacc.py',195),
  ('drawcircle -> DRAWCIRCLE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON','drawcircle',9,'p_expression_drawcircle','LancerYacc.py',198),
  ('drawtriangle -> DRAWTRIANGLE LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON','drawtriangle',9,'p_expression_drawtriangle','LancerYacc.py',201),
  ('drawcurve -> DRAWCURVE LPAREN ssexpression COMA color RPAREN SEMICOLON','drawcurve',7,'p_expression_drawcurve','LancerYacc.py',204),
  ('drawpolygon -> DRAWPOLYGON LPAREN ssexpression COMA ssexpression COMA color RPAREN SEMICOLON','drawpolygon',9,'p_expression_drawpolygon','LancerYacc.py',207),
  ('factor -> fact','factor',1,'p_expression_factor','LancerYacc.py',210),
  ('fact -> LPAREN ssexpression RPAREN','fact',3,'p_expression_fact','LancerYacc.py',213),
  ('fact -> sign constant','fact',2,'p_expression_fact','LancerYacc.py',214),
  ('sign -> PLUS','sign',1,'p_expression_sign','LancerYacc.py',217),
  ('sign -> MINUS','sign',1,'p_expression_sign','LancerYacc.py',218),
  ('sign -> empty','sign',1,'p_expression_sign','LancerYacc.py',219),
  ('constant -> ID const','constant',2,'p_expression_constant','LancerYacc.py',222),
  ('constant -> CTEI','constant',1,'p_expression_constant','LancerYacc.py',223),
  ('constant -> CTEF','constant',1,'p_expression_constant','LancerYacc.py',224),
  ('const -> LARRAY ssexpression RARRAY','const',3,'p_expression_const','LancerYacc.py',227),
  ('const -> LPAREN ssexpression RPAREN','const',3,'p_expression_const','LancerYacc.py',228),
  ('const -> empty','const',1,'p_expression_const','LancerYacc.py',229),
  ('fas1 -> ID fas2','fas1',2,'p_expression_fas1','LancerYacc.py',232),
  ('fas1 -> CTEI','fas1',1,'p_expression_fas1','LancerYacc.py',233),
  ('fas1 -> CTEF','fas1',1,'p_expression_fas1','LancerYacc.py',234),
  ('fas2 -> LARRAY exp RARRAY','fas2',3,'p_expression_fas2','LancerYacc.py',237),
  ('fas2 -> LPAREN exp RPAREN','fas2',3,'p_expression_fas2','LancerYacc.py',238),
  ('fas2 -> empty','fas2',1,'p_expression_fas2','LancerYacc.py',239),
  ('empty -> <empty>','empty',0,'p_empty','LancerYacc.py',247),
]
